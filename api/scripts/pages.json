[{"name":"constructor(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","description":"com.github.ajalt.clikt.output.MordantMarkdownHelpFormatter.MordantMarkdownHelpFormatter","location":"clikt-mordant-markdown/com.github.ajalt.clikt.output/-mordant-markdown-help-formatter/-mordant-markdown-help-formatter.html","searchKeys":["MordantMarkdownHelpFormatter","constructor(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","com.github.ajalt.clikt.output.MordantMarkdownHelpFormatter.MordantMarkdownHelpFormatter"]},{"name":"fun BaseCliktCommand<*>.installMordantMarkdown()","description":"com.github.ajalt.clikt.core.installMordantMarkdown","location":"clikt-mordant-markdown/com.github.ajalt.clikt.core/install-mordant-markdown.html","searchKeys":["installMordantMarkdown","fun BaseCliktCommand<*>.installMordantMarkdown()","com.github.ajalt.clikt.core.installMordantMarkdown"]},{"name":"open class MordantMarkdownHelpFormatter(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : MordantHelpFormatter","description":"com.github.ajalt.clikt.output.MordantMarkdownHelpFormatter","location":"clikt-mordant-markdown/com.github.ajalt.clikt.output/-mordant-markdown-help-formatter/index.html","searchKeys":["MordantMarkdownHelpFormatter","open class MordantMarkdownHelpFormatter(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : MordantHelpFormatter","com.github.ajalt.clikt.output.MordantMarkdownHelpFormatter"]},{"name":"open override fun renderWrappedText(text: String): Widget","description":"com.github.ajalt.clikt.output.MordantMarkdownHelpFormatter.renderWrappedText","location":"clikt-mordant-markdown/com.github.ajalt.clikt.output/-mordant-markdown-help-formatter/render-wrapped-text.html","searchKeys":["renderWrappedText","open override fun renderWrappedText(text: String): Widget","com.github.ajalt.clikt.output.MordantMarkdownHelpFormatter.renderWrappedText"]},{"name":"abstract class ChainedCliktCommand<T>(name: String? = null) : CoreChainedCliktCommand<T> ","description":"com.github.ajalt.clikt.command.ChainedCliktCommand","location":"clikt-mordant/com.github.ajalt.clikt.command/-chained-clikt-command/index.html","searchKeys":["ChainedCliktCommand","abstract class ChainedCliktCommand<T>(name: String? = null) : CoreChainedCliktCommand<T> ","com.github.ajalt.clikt.command.ChainedCliktCommand"]},{"name":"abstract class CliktCommand(name: String? = null) : CoreCliktCommand","description":"com.github.ajalt.clikt.core.CliktCommand","location":"clikt-mordant/com.github.ajalt.clikt.core/-clikt-command/index.html","searchKeys":["CliktCommand","abstract class CliktCommand(name: String? = null) : CoreCliktCommand","com.github.ajalt.clikt.core.CliktCommand"]},{"name":"abstract class SuspendingCliktCommand(name: String? = null) : CoreSuspendingCliktCommand","description":"com.github.ajalt.clikt.command.SuspendingCliktCommand","location":"clikt-mordant/com.github.ajalt.clikt.command/-suspending-clikt-command/index.html","searchKeys":["SuspendingCliktCommand","abstract class SuspendingCliktCommand(name: String? = null) : CoreSuspendingCliktCommand","com.github.ajalt.clikt.command.SuspendingCliktCommand"]},{"name":"constructor(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","description":"com.github.ajalt.clikt.output.MordantHelpFormatter.MordantHelpFormatter","location":"clikt-mordant/com.github.ajalt.clikt.output/-mordant-help-formatter/-mordant-help-formatter.html","searchKeys":["MordantHelpFormatter","constructor(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","com.github.ajalt.clikt.output.MordantHelpFormatter.MordantHelpFormatter"]},{"name":"constructor(name: String? = null)","description":"com.github.ajalt.clikt.command.ChainedCliktCommand.ChainedCliktCommand","location":"clikt-mordant/com.github.ajalt.clikt.command/-chained-clikt-command/-chained-clikt-command.html","searchKeys":["ChainedCliktCommand","constructor(name: String? = null)","com.github.ajalt.clikt.command.ChainedCliktCommand.ChainedCliktCommand"]},{"name":"constructor(name: String? = null)","description":"com.github.ajalt.clikt.command.SuspendingCliktCommand.SuspendingCliktCommand","location":"clikt-mordant/com.github.ajalt.clikt.command/-suspending-clikt-command/-suspending-clikt-command.html","searchKeys":["SuspendingCliktCommand","constructor(name: String? = null)","com.github.ajalt.clikt.command.SuspendingCliktCommand.SuspendingCliktCommand"]},{"name":"constructor(name: String? = null)","description":"com.github.ajalt.clikt.core.CliktCommand.CliktCommand","location":"clikt-mordant/com.github.ajalt.clikt.core/-clikt-command/-clikt-command.html","searchKeys":["CliktCommand","constructor(name: String? = null)","com.github.ajalt.clikt.core.CliktCommand.CliktCommand"]},{"name":"constructor(name: String? = null)","description":"com.github.ajalt.clikt.core.NoOpCliktCommand.NoOpCliktCommand","location":"clikt-mordant/com.github.ajalt.clikt.core/-no-op-clikt-command/-no-op-clikt-command.html","searchKeys":["NoOpCliktCommand","constructor(name: String? = null)","com.github.ajalt.clikt.core.NoOpCliktCommand.NoOpCliktCommand"]},{"name":"constructor(stdout: String, stderr: String, output: String, statusCode: Int)","description":"com.github.ajalt.clikt.testing.CliktCommandTestResult.CliktCommandTestResult","location":"clikt-mordant/com.github.ajalt.clikt.testing/-clikt-command-test-result/-clikt-command-test-result.html","searchKeys":["CliktCommandTestResult","constructor(stdout: String, stderr: String, output: String, statusCode: Int)","com.github.ajalt.clikt.testing.CliktCommandTestResult.CliktCommandTestResult"]},{"name":"data class CliktCommandTestResult(val stdout: String, val stderr: String, val output: String, val statusCode: Int)","description":"com.github.ajalt.clikt.testing.CliktCommandTestResult","location":"clikt-mordant/com.github.ajalt.clikt.testing/-clikt-command-test-result/index.html","searchKeys":["CliktCommandTestResult","data class CliktCommandTestResult(val stdout: String, val stderr: String, val output: String, val statusCode: Int)","com.github.ajalt.clikt.testing.CliktCommandTestResult"]},{"name":"fun <T : Any> NullableOption<T, T>.prompt(text: String? = null, default: T? = null, hideInput: Boolean = false, promptSuffix: String = \": \", showDefault: Boolean = true, requireConfirmation: Boolean = false, confirmationPrompt: String = \"Repeat for confirmation\", confirmationMismatchMessage: String = \"Values do not match, try again\"): OptionWithValues<T, T, T>","description":"com.github.ajalt.clikt.parameters.options.prompt","location":"clikt-mordant/com.github.ajalt.clikt.parameters.options/prompt.html","searchKeys":["prompt","fun <T : Any> NullableOption<T, T>.prompt(text: String? = null, default: T? = null, hideInput: Boolean = false, promptSuffix: String = \": \", showDefault: Boolean = true, requireConfirmation: Boolean = false, confirmationPrompt: String = \"Repeat for confirmation\", confirmationMismatchMessage: String = \"Values do not match, try again\"): OptionWithValues<T, T, T>","com.github.ajalt.clikt.parameters.options.prompt"]},{"name":"fun <T> ChainedCliktCommand<T>.test(argv: Array<String>, initial: T, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24): CliktCommandTestResult","description":"com.github.ajalt.clikt.command.test","location":"clikt-mordant/com.github.ajalt.clikt.command/test.html","searchKeys":["test","fun <T> ChainedCliktCommand<T>.test(argv: Array<String>, initial: T, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24): CliktCommandTestResult","com.github.ajalt.clikt.command.test"]},{"name":"fun <T> ChainedCliktCommand<T>.test(argv: List<String>, initial: T, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24): CliktCommandTestResult","description":"com.github.ajalt.clikt.command.test","location":"clikt-mordant/com.github.ajalt.clikt.command/test.html","searchKeys":["test","fun <T> ChainedCliktCommand<T>.test(argv: List<String>, initial: T, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24): CliktCommandTestResult","com.github.ajalt.clikt.command.test"]},{"name":"fun <T> ChainedCliktCommand<T>.test(argv: String, initial: T, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24): CliktCommandTestResult","description":"com.github.ajalt.clikt.command.test","location":"clikt-mordant/com.github.ajalt.clikt.command/test.html","searchKeys":["test","fun <T> ChainedCliktCommand<T>.test(argv: String, initial: T, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24): CliktCommandTestResult","com.github.ajalt.clikt.command.test"]},{"name":"fun BaseCliktCommand<*>.installMordant(force: Boolean = false)","description":"com.github.ajalt.clikt.core.installMordant","location":"clikt-mordant/com.github.ajalt.clikt.core/install-mordant.html","searchKeys":["installMordant","fun BaseCliktCommand<*>.installMordant(force: Boolean = false)","com.github.ajalt.clikt.core.installMordant"]},{"name":"fun CliktCommand.test(argv: List<String>, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","description":"com.github.ajalt.clikt.testing.test","location":"clikt-mordant/com.github.ajalt.clikt.testing/test.html","searchKeys":["test","fun CliktCommand.test(argv: List<String>, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","com.github.ajalt.clikt.testing.test"]},{"name":"fun CliktCommand.test(argv: String, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","description":"com.github.ajalt.clikt.testing.test","location":"clikt-mordant/com.github.ajalt.clikt.testing/test.html","searchKeys":["test","fun CliktCommand.test(argv: String, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","com.github.ajalt.clikt.testing.test"]},{"name":"fun CliktCommand.test(vararg argv: String, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","description":"com.github.ajalt.clikt.testing.test","location":"clikt-mordant/com.github.ajalt.clikt.testing/test.html","searchKeys":["test","fun CliktCommand.test(vararg argv: String, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","com.github.ajalt.clikt.testing.test"]},{"name":"fun OptionWithValues<Boolean, Boolean, Boolean>.prompt(text: String, default: Boolean? = null, uppercaseDefault: Boolean = true, showChoices: Boolean = true, choiceStrings: List<String> = listOf(\"y\", \"n\"), promptSuffix: String = \": \", invalidChoiceMessage: String = \"Invalid value, choose from \"): OptionWithValues<Boolean, Boolean, Boolean>","description":"com.github.ajalt.clikt.parameters.options.prompt","location":"clikt-mordant/com.github.ajalt.clikt.parameters.options/prompt.html","searchKeys":["prompt","fun OptionWithValues<Boolean, Boolean, Boolean>.prompt(text: String, default: Boolean? = null, uppercaseDefault: Boolean = true, showChoices: Boolean = true, choiceStrings: List<String> = listOf(\"y\", \"n\"), promptSuffix: String = \": \", invalidChoiceMessage: String = \"Invalid value, choose from \"): OptionWithValues<Boolean, Boolean, Boolean>","com.github.ajalt.clikt.parameters.options.prompt"]},{"name":"inline fun <T : BaseCliktCommand<T>> BaseCliktCommand<T>.test(argv: List<String>, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, parse: (argv: List<String>) -> Unit): CliktCommandTestResult","description":"com.github.ajalt.clikt.testing.test","location":"clikt-mordant/com.github.ajalt.clikt.testing/test.html","searchKeys":["test","inline fun <T : BaseCliktCommand<T>> BaseCliktCommand<T>.test(argv: List<String>, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, parse: (argv: List<String>) -> Unit): CliktCommandTestResult","com.github.ajalt.clikt.testing.test"]},{"name":"open class MordantHelpFormatter(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : AbstractHelpFormatter<Widget> ","description":"com.github.ajalt.clikt.output.MordantHelpFormatter","location":"clikt-mordant/com.github.ajalt.clikt.output/-mordant-help-formatter/index.html","searchKeys":["MordantHelpFormatter","open class MordantHelpFormatter(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : AbstractHelpFormatter<Widget> ","com.github.ajalt.clikt.output.MordantHelpFormatter"]},{"name":"open class NoOpCliktCommand(name: String? = null) : CliktCommand","description":"com.github.ajalt.clikt.core.NoOpCliktCommand","location":"clikt-mordant/com.github.ajalt.clikt.core/-no-op-clikt-command/index.html","searchKeys":["NoOpCliktCommand","open class NoOpCliktCommand(name: String? = null) : CliktCommand","com.github.ajalt.clikt.core.NoOpCliktCommand"]},{"name":"open fun renderWrappedText(text: String): Widget","description":"com.github.ajalt.clikt.output.MordantHelpFormatter.renderWrappedText","location":"clikt-mordant/com.github.ajalt.clikt.output/-mordant-help-formatter/render-wrapped-text.html","searchKeys":["renderWrappedText","open fun renderWrappedText(text: String): Widget","com.github.ajalt.clikt.output.MordantHelpFormatter.renderWrappedText"]},{"name":"open override fun formatHelp(error: UsageError?, prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String): String","description":"com.github.ajalt.clikt.output.MordantHelpFormatter.formatHelp","location":"clikt-mordant/com.github.ajalt.clikt.output/-mordant-help-formatter/format-help.html","searchKeys":["formatHelp","open override fun formatHelp(error: UsageError?, prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String): String","com.github.ajalt.clikt.output.MordantHelpFormatter.formatHelp"]},{"name":"override fun run()","description":"com.github.ajalt.clikt.core.NoOpCliktCommand.run","location":"clikt-mordant/com.github.ajalt.clikt.core/-no-op-clikt-command/run.html","searchKeys":["run","override fun run()","com.github.ajalt.clikt.core.NoOpCliktCommand.run"]},{"name":"suspend fun SuspendingCliktCommand.test(argv: Array<String>, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","description":"com.github.ajalt.clikt.command.test","location":"clikt-mordant/com.github.ajalt.clikt.command/test.html","searchKeys":["test","suspend fun SuspendingCliktCommand.test(argv: Array<String>, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","com.github.ajalt.clikt.command.test"]},{"name":"suspend fun SuspendingCliktCommand.test(argv: List<String>, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","description":"com.github.ajalt.clikt.command.test","location":"clikt-mordant/com.github.ajalt.clikt.command/test.html","searchKeys":["test","suspend fun SuspendingCliktCommand.test(argv: List<String>, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","com.github.ajalt.clikt.command.test"]},{"name":"suspend fun SuspendingCliktCommand.test(argv: String, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","description":"com.github.ajalt.clikt.command.test","location":"clikt-mordant/com.github.ajalt.clikt.command/test.html","searchKeys":["test","suspend fun SuspendingCliktCommand.test(argv: String, stdin: String = \"\", envvars: Map<String, String> = emptyMap(), includeSystemEnvvars: Boolean = false, ansiLevel: AnsiLevel = AnsiLevel.NONE, width: Int = 79, height: Int = 24, hyperlinks: Boolean = ansiLevel != AnsiLevel.NONE, outputInteractive: Boolean = ansiLevel != AnsiLevel.NONE, inputInteractive: Boolean = ansiLevel != AnsiLevel.NONE): CliktCommandTestResult","com.github.ajalt.clikt.command.test"]},{"name":"val BaseCliktCommand<*>.terminal: Terminal","description":"com.github.ajalt.clikt.core.terminal","location":"clikt-mordant/com.github.ajalt.clikt.core/terminal.html","searchKeys":["terminal","val BaseCliktCommand<*>.terminal: Terminal","com.github.ajalt.clikt.core.terminal"]},{"name":"val Context.terminal: Terminal","description":"com.github.ajalt.clikt.core.terminal","location":"clikt-mordant/com.github.ajalt.clikt.core/terminal.html","searchKeys":["terminal","val Context.terminal: Terminal","com.github.ajalt.clikt.core.terminal"]},{"name":"val Context.theme: Theme","description":"com.github.ajalt.clikt.core.theme","location":"clikt-mordant/com.github.ajalt.clikt.core/theme.html","searchKeys":["theme","val Context.theme: Theme","com.github.ajalt.clikt.core.theme"]},{"name":"val OptionTransformContext.terminal: Terminal","description":"com.github.ajalt.clikt.parameters.transform.terminal","location":"clikt-mordant/com.github.ajalt.clikt.parameters.transform/terminal.html","searchKeys":["terminal","val OptionTransformContext.terminal: Terminal","com.github.ajalt.clikt.parameters.transform.terminal"]},{"name":"val TransformContext.terminal: Terminal","description":"com.github.ajalt.clikt.parameters.transform.terminal","location":"clikt-mordant/com.github.ajalt.clikt.parameters.transform/terminal.html","searchKeys":["terminal","val TransformContext.terminal: Terminal","com.github.ajalt.clikt.parameters.transform.terminal"]},{"name":"val TransformContext.theme: Theme","description":"com.github.ajalt.clikt.parameters.transform.theme","location":"clikt-mordant/com.github.ajalt.clikt.parameters.transform/theme.html","searchKeys":["theme","val TransformContext.theme: Theme","com.github.ajalt.clikt.parameters.transform.theme"]},{"name":"val output: String","description":"com.github.ajalt.clikt.testing.CliktCommandTestResult.output","location":"clikt-mordant/com.github.ajalt.clikt.testing/-clikt-command-test-result/output.html","searchKeys":["output","val output: String","com.github.ajalt.clikt.testing.CliktCommandTestResult.output"]},{"name":"val statusCode: Int","description":"com.github.ajalt.clikt.testing.CliktCommandTestResult.statusCode","location":"clikt-mordant/com.github.ajalt.clikt.testing/-clikt-command-test-result/status-code.html","searchKeys":["statusCode","val statusCode: Int","com.github.ajalt.clikt.testing.CliktCommandTestResult.statusCode"]},{"name":"val stderr: String","description":"com.github.ajalt.clikt.testing.CliktCommandTestResult.stderr","location":"clikt-mordant/com.github.ajalt.clikt.testing/-clikt-command-test-result/stderr.html","searchKeys":["stderr","val stderr: String","com.github.ajalt.clikt.testing.CliktCommandTestResult.stderr"]},{"name":"val stdout: String","description":"com.github.ajalt.clikt.testing.CliktCommandTestResult.stdout","location":"clikt-mordant/com.github.ajalt.clikt.testing/-clikt-command-test-result/stdout.html","searchKeys":["stdout","val stdout: String","com.github.ajalt.clikt.testing.CliktCommandTestResult.stdout"]},{"name":"var Context.Builder.terminal: Terminal","description":"com.github.ajalt.clikt.core.terminal","location":"clikt-mordant/com.github.ajalt.clikt.core/terminal.html","searchKeys":["terminal","var Context.Builder.terminal: Terminal","com.github.ajalt.clikt.core.terminal"]},{"name":"BASH","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.BASH","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/-b-a-s-h/index.html","searchKeys":["BASH","BASH","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.BASH"]},{"name":"FISH","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.FISH","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/-f-i-s-h/index.html","searchKeys":["FISH","FISH","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.FISH"]},{"name":"abstract class AbstractHelpFormatter<PartT>(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : HelpFormatter","description":"com.github.ajalt.clikt.output.AbstractHelpFormatter","location":"clikt/com.github.ajalt.clikt.output/-abstract-help-formatter/index.html","searchKeys":["AbstractHelpFormatter","abstract class AbstractHelpFormatter<PartT>(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : HelpFormatter","com.github.ajalt.clikt.output.AbstractHelpFormatter"]},{"name":"abstract class BaseCliktCommand<T : BaseCliktCommand<T>>(name: String? = null) : ParameterHolder","description":"com.github.ajalt.clikt.core.BaseCliktCommand","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/index.html","searchKeys":["BaseCliktCommand","abstract class BaseCliktCommand<T : BaseCliktCommand<T>>(name: String? = null) : ParameterHolder","com.github.ajalt.clikt.core.BaseCliktCommand"]},{"name":"abstract class CoreChainedCliktCommand<T>(name: String? = null) : BaseCliktCommand<CoreChainedCliktCommand<T>> ","description":"com.github.ajalt.clikt.command.CoreChainedCliktCommand","location":"clikt/com.github.ajalt.clikt.command/-core-chained-clikt-command/index.html","searchKeys":["CoreChainedCliktCommand","abstract class CoreChainedCliktCommand<T>(name: String? = null) : BaseCliktCommand<CoreChainedCliktCommand<T>> ","com.github.ajalt.clikt.command.CoreChainedCliktCommand"]},{"name":"abstract class CoreCliktCommand(name: String? = null) : BaseCliktCommand<CoreCliktCommand> ","description":"com.github.ajalt.clikt.core.CoreCliktCommand","location":"clikt/com.github.ajalt.clikt.core/-core-clikt-command/index.html","searchKeys":["CoreCliktCommand","abstract class CoreCliktCommand(name: String? = null) : BaseCliktCommand<CoreCliktCommand> ","com.github.ajalt.clikt.core.CoreCliktCommand"]},{"name":"abstract class CoreSuspendingCliktCommand(name: String? = null) : BaseCliktCommand<CoreSuspendingCliktCommand> ","description":"com.github.ajalt.clikt.command.CoreSuspendingCliktCommand","location":"clikt/com.github.ajalt.clikt.command/-core-suspending-clikt-command/index.html","searchKeys":["CoreSuspendingCliktCommand","abstract class CoreSuspendingCliktCommand(name: String? = null) : BaseCliktCommand<CoreSuspendingCliktCommand> ","com.github.ajalt.clikt.command.CoreSuspendingCliktCommand"]},{"name":"abstract fun <AllT, EachT, ValueT> copy(transformValue: ValueTransformer<ValueT>, transformEach: ValuesTransformer<ValueT, EachT>, transformAll: AllTransformer<EachT, AllT>, validator: OptionValidator<AllT>, names: Set<String> = this.names, metavarGetter: Context.() -> String?? = this.metavarGetter, nvalues: IntRange = this.nvalues, helpGetter: HelpTransformContext.() -> String? = this.helpGetter, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, valueSourceKey: String? = this.valueSourceKey, envvar: String? = this.envvar, valueSplit: (String) -> List<String> = this.valueSplit, completionCandidates: CompletionCandidates? = explicitCompletionCandidates, secondaryNames: Set<String> = this.secondaryNames, acceptsNumberValueWithoutName: Boolean = this.acceptsNumberValueWithoutName, acceptsUnattachedValue: Boolean = this.acceptsUnattachedValue, eager: Boolean = this.eager): OptionWithValues<AllT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.copy","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/copy.html","searchKeys":["copy","abstract fun <AllT, EachT, ValueT> copy(transformValue: ValueTransformer<ValueT>, transformEach: ValuesTransformer<ValueT, EachT>, transformAll: AllTransformer<EachT, AllT>, validator: OptionValidator<AllT>, names: Set<String> = this.names, metavarGetter: Context.() -> String?? = this.metavarGetter, nvalues: IntRange = this.nvalues, helpGetter: HelpTransformContext.() -> String? = this.helpGetter, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, valueSourceKey: String? = this.valueSourceKey, envvar: String? = this.envvar, valueSplit: (String) -> List<String> = this.valueSplit, completionCandidates: CompletionCandidates? = explicitCompletionCandidates, secondaryNames: Set<String> = this.secondaryNames, acceptsNumberValueWithoutName: Boolean = this.acceptsNumberValueWithoutName, acceptsUnattachedValue: Boolean = this.acceptsUnattachedValue, eager: Boolean = this.eager): OptionWithValues<AllT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.copy"]},{"name":"abstract fun <AllT, ValueT> copy(transformValue: ArgValueTransformer<ValueT>, transformAll: ArgCallsTransformer<AllT, ValueT>, validator: ArgValidator<AllT>, name: String = this.name, nvalues: Int = this.nvalues, required: Boolean = this.required, helpGetter: HelpTransformContext.() -> String? = this.helpGetter, helpTags: Map<String, String> = this.helpTags, completionCandidates: CompletionCandidates? = explicitCompletionCandidates): ProcessedArgument<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.copy","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/copy.html","searchKeys":["copy","abstract fun <AllT, ValueT> copy(transformValue: ArgValueTransformer<ValueT>, transformAll: ArgCallsTransformer<AllT, ValueT>, validator: ArgValidator<AllT>, name: String = this.name, nvalues: Int = this.nvalues, required: Boolean = this.required, helpGetter: HelpTransformContext.() -> String? = this.helpGetter, helpTags: Map<String, String> = this.helpTags, completionCandidates: CompletionCandidates? = explicitCompletionCandidates): ProcessedArgument<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.copy"]},{"name":"abstract fun copy(validator: ArgValidator<AllT> = this.transformValidator, name: String = this.name, nvalues: Int = this.nvalues, required: Boolean = this.required, helpGetter: HelpTransformContext.() -> String? = this.helpGetter, helpTags: Map<String, String> = this.helpTags, completionCandidates: CompletionCandidates? = explicitCompletionCandidates): ProcessedArgument<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.copy","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/copy.html","searchKeys":["copy","abstract fun copy(validator: ArgValidator<AllT> = this.transformValidator, name: String = this.name, nvalues: Int = this.nvalues, required: Boolean = this.required, helpGetter: HelpTransformContext.() -> String? = this.helpGetter, helpTags: Map<String, String> = this.helpTags, completionCandidates: CompletionCandidates? = explicitCompletionCandidates): ProcessedArgument<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.copy"]},{"name":"abstract fun copy(validator: OptionValidator<AllT> = this.transformValidator, names: Set<String> = this.names, metavarGetter: Context.() -> String?? = this.metavarGetter, nvalues: IntRange = this.nvalues, helpGetter: HelpTransformContext.() -> String? = this.helpGetter, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, envvar: String? = this.envvar, valueSourceKey: String? = this.valueSourceKey, valueSplit: (String) -> List<String> = this.valueSplit, completionCandidates: CompletionCandidates? = explicitCompletionCandidates, secondaryNames: Set<String> = this.secondaryNames, acceptsNumberValueWithoutName: Boolean = this.acceptsNumberValueWithoutName, acceptsUnattachedValue: Boolean = this.acceptsUnattachedValue, eager: Boolean = this.eager): OptionWithValues<AllT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.copy","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/copy.html","searchKeys":["copy","abstract fun copy(validator: OptionValidator<AllT> = this.transformValidator, names: Set<String> = this.names, metavarGetter: Context.() -> String?? = this.metavarGetter, nvalues: IntRange = this.nvalues, helpGetter: HelpTransformContext.() -> String? = this.helpGetter, hidden: Boolean = this.hidden, helpTags: Map<String, String> = this.helpTags, envvar: String? = this.envvar, valueSourceKey: String? = this.valueSourceKey, valueSplit: (String) -> List<String> = this.valueSplit, completionCandidates: CompletionCandidates? = explicitCompletionCandidates, secondaryNames: Set<String> = this.secondaryNames, acceptsNumberValueWithoutName: Boolean = this.acceptsNumberValueWithoutName, acceptsUnattachedValue: Boolean = this.acceptsUnattachedValue, eager: Boolean = this.eager): OptionWithValues<AllT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.copy"]},{"name":"abstract fun fail(message: String): Nothing","description":"com.github.ajalt.clikt.parameters.transform.TransformContext.fail","location":"clikt/com.github.ajalt.clikt.parameters.transform/-transform-context/fail.html","searchKeys":["fail","abstract fun fail(message: String): Nothing","com.github.ajalt.clikt.parameters.transform.TransformContext.fail"]},{"name":"abstract fun finalize(context: Context, invocations: List<OptionInvocation>)","description":"com.github.ajalt.clikt.parameters.options.Option.finalize","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/finalize.html","searchKeys":["finalize","abstract fun finalize(context: Context, invocations: List<OptionInvocation>)","com.github.ajalt.clikt.parameters.options.Option.finalize"]},{"name":"abstract fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/finalize.html","searchKeys":["finalize","abstract fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","com.github.ajalt.clikt.parameters.groups.ParameterGroup.finalize"]},{"name":"abstract fun finalize(context: Context, values: List<String>)","description":"com.github.ajalt.clikt.parameters.arguments.Argument.finalize","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/finalize.html","searchKeys":["finalize","abstract fun finalize(context: Context, values: List<String>)","com.github.ajalt.clikt.parameters.arguments.Argument.finalize"]},{"name":"abstract fun formatArgument(name: String): String","description":"com.github.ajalt.clikt.output.ParameterFormatter.formatArgument","location":"clikt/com.github.ajalt.clikt.output/-parameter-formatter/format-argument.html","searchKeys":["formatArgument","abstract fun formatArgument(name: String): String","com.github.ajalt.clikt.output.ParameterFormatter.formatArgument"]},{"name":"abstract fun formatHelp(error: UsageError?, prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String = \"\"): String","description":"com.github.ajalt.clikt.output.HelpFormatter.formatHelp","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/format-help.html","searchKeys":["formatHelp","abstract fun formatHelp(error: UsageError?, prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String = \"\"): String","com.github.ajalt.clikt.output.HelpFormatter.formatHelp"]},{"name":"abstract fun formatOption(name: String): String","description":"com.github.ajalt.clikt.output.ParameterFormatter.formatOption","location":"clikt/com.github.ajalt.clikt.output/-parameter-formatter/format-option.html","searchKeys":["formatOption","abstract fun formatOption(name: String): String","com.github.ajalt.clikt.output.ParameterFormatter.formatOption"]},{"name":"abstract fun formatSubcommand(name: String): String","description":"com.github.ajalt.clikt.output.ParameterFormatter.formatSubcommand","location":"clikt/com.github.ajalt.clikt.output/-parameter-formatter/format-subcommand.html","searchKeys":["formatSubcommand","abstract fun formatSubcommand(name: String): String","com.github.ajalt.clikt.output.ParameterFormatter.formatSubcommand"]},{"name":"abstract fun getArgumentHelp(context: Context): String","description":"com.github.ajalt.clikt.parameters.arguments.Argument.getArgumentHelp","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/get-argument-help.html","searchKeys":["getArgumentHelp","abstract fun getArgumentHelp(context: Context): String","com.github.ajalt.clikt.parameters.arguments.Argument.getArgumentHelp"]},{"name":"abstract fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","description":"com.github.ajalt.clikt.sources.ValueSource.getValues","location":"clikt/com.github.ajalt.clikt.sources/-value-source/get-values.html","searchKeys":["getValues","abstract fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","com.github.ajalt.clikt.sources.ValueSource.getValues"]},{"name":"abstract fun metavar(context: Context): String?","description":"com.github.ajalt.clikt.parameters.options.Option.metavar","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/metavar.html","searchKeys":["metavar","abstract fun metavar(context: Context): String?","com.github.ajalt.clikt.parameters.options.Option.metavar"]},{"name":"abstract fun optionHelp(context: Context): String","description":"com.github.ajalt.clikt.parameters.options.Option.optionHelp","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/option-help.html","searchKeys":["optionHelp","abstract fun optionHelp(context: Context): String","com.github.ajalt.clikt.parameters.options.Option.optionHelp"]},{"name":"abstract fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Argument?","description":"com.github.ajalt.clikt.parameters.arguments.Argument.parameterHelp","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/parameter-help.html","searchKeys":["parameterHelp","abstract fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Argument?","com.github.ajalt.clikt.parameters.arguments.Argument.parameterHelp"]},{"name":"abstract fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.arguments.Argument.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/post-validate.html","searchKeys":["postValidate","abstract fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.arguments.Argument.postValidate"]},{"name":"abstract fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/post-validate.html","searchKeys":["postValidate","abstract fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.ParameterGroup.postValidate"]},{"name":"abstract fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.options.Option.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/post-validate.html","searchKeys":["postValidate","abstract fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.options.Option.postValidate"]},{"name":"abstract fun registerOption(option: GroupableOption)","description":"com.github.ajalt.clikt.core.ParameterHolder.registerOption","location":"clikt/com.github.ajalt.clikt.core/-parameter-holder/register-option.html","searchKeys":["registerOption","abstract fun registerOption(option: GroupableOption)","com.github.ajalt.clikt.core.ParameterHolder.registerOption"]},{"name":"abstract fun run()","description":"com.github.ajalt.clikt.core.CoreCliktCommand.run","location":"clikt/com.github.ajalt.clikt.core/-core-clikt-command/run.html","searchKeys":["run","abstract fun run()","com.github.ajalt.clikt.core.CoreCliktCommand.run"]},{"name":"abstract fun run(value: T): T","description":"com.github.ajalt.clikt.command.CoreChainedCliktCommand.run","location":"clikt/com.github.ajalt.clikt.command/-core-chained-clikt-command/run.html","searchKeys":["run","abstract fun run(value: T): T","com.github.ajalt.clikt.command.CoreChainedCliktCommand.run"]},{"name":"abstract operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, T>","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroupDelegate.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group-delegate/provide-delegate.html","searchKeys":["provideDelegate","abstract operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, T>","com.github.ajalt.clikt.parameters.groups.ParameterGroupDelegate.provideDelegate"]},{"name":"abstract operator override fun provideDelegate(thisRef: ParameterHolder, property: KProperty<*>): ReadOnlyProperty<ParameterHolder, T>","description":"com.github.ajalt.clikt.parameters.options.OptionDelegate.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-delegate/provide-delegate.html","searchKeys":["provideDelegate","abstract operator override fun provideDelegate(thisRef: ParameterHolder, property: KProperty<*>): ReadOnlyProperty<ParameterHolder, T>","com.github.ajalt.clikt.parameters.options.OptionDelegate.provideDelegate"]},{"name":"abstract override var groupName: String?","description":"com.github.ajalt.clikt.core.GroupableOption.groupName","location":"clikt/com.github.ajalt.clikt.core/-groupable-option/group-name.html","searchKeys":["groupName","abstract override var groupName: String?","com.github.ajalt.clikt.core.GroupableOption.groupName"]},{"name":"abstract suspend fun run()","description":"com.github.ajalt.clikt.command.CoreSuspendingCliktCommand.run","location":"clikt/com.github.ajalt.clikt.command/-core-suspending-clikt-command/run.html","searchKeys":["run","abstract suspend fun run()","com.github.ajalt.clikt.command.CoreSuspendingCliktCommand.run"]},{"name":"abstract val context: Context","description":"com.github.ajalt.clikt.parameters.transform.TransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.transform/-transform-context/context.html","searchKeys":["context","abstract val context: Context","com.github.ajalt.clikt.parameters.transform.TransformContext.context"]},{"name":"abstract val envvar: String?","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.envvar","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/envvar.html","searchKeys":["envvar","abstract val envvar: String?","com.github.ajalt.clikt.parameters.options.OptionWithValues.envvar"]},{"name":"abstract val explicitCompletionCandidates: CompletionCandidates?","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.explicitCompletionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/explicit-completion-candidates.html","searchKeys":["explicitCompletionCandidates","abstract val explicitCompletionCandidates: CompletionCandidates?","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.explicitCompletionCandidates"]},{"name":"abstract val explicitCompletionCandidates: CompletionCandidates?","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.explicitCompletionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/explicit-completion-candidates.html","searchKeys":["explicitCompletionCandidates","abstract val explicitCompletionCandidates: CompletionCandidates?","com.github.ajalt.clikt.parameters.options.OptionWithValues.explicitCompletionCandidates"]},{"name":"abstract val groupHelp: String?","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/group-help.html","searchKeys":["groupHelp","abstract val groupHelp: String?","com.github.ajalt.clikt.parameters.groups.ParameterGroup.groupHelp"]},{"name":"abstract val groupName: String?","description":"com.github.ajalt.clikt.core.StaticallyGroupedOption.groupName","location":"clikt/com.github.ajalt.clikt.core/-statically-grouped-option/group-name.html","searchKeys":["groupName","abstract val groupName: String?","com.github.ajalt.clikt.core.StaticallyGroupedOption.groupName"]},{"name":"abstract val groupName: String?","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/group-name.html","searchKeys":["groupName","abstract val groupName: String?","com.github.ajalt.clikt.parameters.groups.ParameterGroup.groupName"]},{"name":"abstract val helpGetter: HelpTransformContext.() -> String?","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.helpGetter","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/help-getter.html","searchKeys":["helpGetter","abstract val helpGetter: HelpTransformContext.() -> String?","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.helpGetter"]},{"name":"abstract val helpGetter: HelpTransformContext.() -> String?","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.helpGetter","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/help-getter.html","searchKeys":["helpGetter","abstract val helpGetter: HelpTransformContext.() -> String?","com.github.ajalt.clikt.parameters.options.OptionWithValues.helpGetter"]},{"name":"abstract val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.parameters.arguments.Argument.helpTags","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/help-tags.html","searchKeys":["helpTags","abstract val helpTags: Map<String, String>","com.github.ajalt.clikt.parameters.arguments.Argument.helpTags"]},{"name":"abstract val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.parameters.options.Option.helpTags","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/help-tags.html","searchKeys":["helpTags","abstract val helpTags: Map<String, String>","com.github.ajalt.clikt.parameters.options.Option.helpTags"]},{"name":"abstract val hidden: Boolean","description":"com.github.ajalt.clikt.parameters.options.Option.hidden","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/hidden.html","searchKeys":["hidden","abstract val hidden: Boolean","com.github.ajalt.clikt.parameters.options.Option.hidden"]},{"name":"abstract val metavarGetter: Context.() -> String??","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.metavarGetter","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/metavar-getter.html","searchKeys":["metavarGetter","abstract val metavarGetter: Context.() -> String??","com.github.ajalt.clikt.parameters.options.OptionWithValues.metavarGetter"]},{"name":"abstract val name: String","description":"com.github.ajalt.clikt.parameters.arguments.Argument.name","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/name.html","searchKeys":["name","abstract val name: String","com.github.ajalt.clikt.parameters.arguments.Argument.name"]},{"name":"abstract val names: Set<String>","description":"com.github.ajalt.clikt.parameters.options.Option.names","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/names.html","searchKeys":["names","abstract val names: Set<String>","com.github.ajalt.clikt.parameters.options.Option.names"]},{"name":"abstract val nvalues: Int","description":"com.github.ajalt.clikt.parameters.arguments.Argument.nvalues","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/nvalues.html","searchKeys":["nvalues","abstract val nvalues: Int","com.github.ajalt.clikt.parameters.arguments.Argument.nvalues"]},{"name":"abstract val nvalues: IntRange","description":"com.github.ajalt.clikt.parameters.options.Option.nvalues","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/nvalues.html","searchKeys":["nvalues","abstract val nvalues: IntRange","com.github.ajalt.clikt.parameters.options.Option.nvalues"]},{"name":"abstract val required: Boolean","description":"com.github.ajalt.clikt.parameters.arguments.Argument.required","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/required.html","searchKeys":["required","abstract val required: Boolean","com.github.ajalt.clikt.parameters.arguments.Argument.required"]},{"name":"abstract val secondaryNames: Set<String>","description":"com.github.ajalt.clikt.parameters.options.Option.secondaryNames","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/secondary-names.html","searchKeys":["secondaryNames","abstract val secondaryNames: Set<String>","com.github.ajalt.clikt.parameters.options.Option.secondaryNames"]},{"name":"abstract val transformAll: AllTransformer<EachT, AllT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/transform-all.html","searchKeys":["transformAll","abstract val transformAll: AllTransformer<EachT, AllT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.transformAll"]},{"name":"abstract val transformAll: ArgCallsTransformer<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/transform-all.html","searchKeys":["transformAll","abstract val transformAll: ArgCallsTransformer<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformAll"]},{"name":"abstract val transformEach: ValuesTransformer<ValueT, EachT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.transformEach","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/transform-each.html","searchKeys":["transformEach","abstract val transformEach: ValuesTransformer<ValueT, EachT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.transformEach"]},{"name":"abstract val transformValidator: ArgValidator<AllT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformValidator","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/transform-validator.html","searchKeys":["transformValidator","abstract val transformValidator: ArgValidator<AllT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformValidator"]},{"name":"abstract val transformValidator: OptionValidator<AllT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.transformValidator","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/transform-validator.html","searchKeys":["transformValidator","abstract val transformValidator: OptionValidator<AllT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.transformValidator"]},{"name":"abstract val transformValue: ArgValueTransformer<ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformValue","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/transform-value.html","searchKeys":["transformValue","abstract val transformValue: ArgValueTransformer<ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument.transformValue"]},{"name":"abstract val transformValue: ValueTransformer<ValueT>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.transformValue","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/transform-value.html","searchKeys":["transformValue","abstract val transformValue: ValueTransformer<ValueT>","com.github.ajalt.clikt.parameters.options.OptionWithValues.transformValue"]},{"name":"abstract val value: T","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate.value","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-delegate/value.html","searchKeys":["value","abstract val value: T","com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate.value"]},{"name":"abstract val value: T","description":"com.github.ajalt.clikt.parameters.options.OptionDelegate.value","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-delegate/value.html","searchKeys":["value","abstract val value: T","com.github.ajalt.clikt.parameters.options.OptionDelegate.value"]},{"name":"abstract val valueSourceKey: String?","description":"com.github.ajalt.clikt.parameters.options.Option.valueSourceKey","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/value-source-key.html","searchKeys":["valueSourceKey","abstract val valueSourceKey: String?","com.github.ajalt.clikt.parameters.options.Option.valueSourceKey"]},{"name":"abstract val valueSplit: (String) -> List<String>","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues.valueSplit","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/value-split.html","searchKeys":["valueSplit","abstract val valueSplit: (String) -> List<String>","com.github.ajalt.clikt.parameters.options.OptionWithValues.valueSplit"]},{"name":"abstract var context: Context?","description":"com.github.ajalt.clikt.core.ContextCliktError.context","location":"clikt/com.github.ajalt.clikt.core/-context-clikt-error/context.html","searchKeys":["context","abstract var context: Context?","com.github.ajalt.clikt.core.ContextCliktError.context"]},{"name":"abstract var parameterGroup: ParameterGroup?","description":"com.github.ajalt.clikt.core.GroupableOption.parameterGroup","location":"clikt/com.github.ajalt.clikt.core/-groupable-option/parameter-group.html","searchKeys":["parameterGroup","abstract var parameterGroup: ParameterGroup?","com.github.ajalt.clikt.core.GroupableOption.parameterGroup"]},{"name":"annotation class ParameterHolderDsl","description":"com.github.ajalt.clikt.core.ParameterHolderDsl","location":"clikt/com.github.ajalt.clikt.core/-parameter-holder-dsl/index.html","searchKeys":["ParameterHolderDsl","annotation class ParameterHolderDsl","com.github.ajalt.clikt.core.ParameterHolderDsl"]},{"name":"class Abort : ProgramResult","description":"com.github.ajalt.clikt.core.Abort","location":"clikt/com.github.ajalt.clikt.core/-abort/index.html","searchKeys":["Abort","class Abort : ProgramResult","com.github.ajalt.clikt.core.Abort"]},{"name":"class ArgumentInvocation(val argument: Argument, val values: List<String>)","description":"com.github.ajalt.clikt.parsers.ArgumentInvocation","location":"clikt/com.github.ajalt.clikt.parsers/-argument-invocation/index.html","searchKeys":["ArgumentInvocation","class ArgumentInvocation(val argument: Argument, val values: List<String>)","com.github.ajalt.clikt.parsers.ArgumentInvocation"]},{"name":"class ArgumentTransformContext(val argument: Argument, val context: Context) : Argument, TransformContext","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/index.html","searchKeys":["ArgumentTransformContext","class ArgumentTransformContext(val argument: Argument, val context: Context) : Argument, TransformContext","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext"]},{"name":"class BadParameterValue : UsageError","description":"com.github.ajalt.clikt.core.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/index.html","searchKeys":["BadParameterValue","class BadParameterValue : UsageError","com.github.ajalt.clikt.core.BadParameterValue"]},{"name":"class Builder(command: BaseCliktCommand<*>, val parent: Context? = null)","description":"com.github.ajalt.clikt.core.Context.Builder","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/index.html","searchKeys":["Builder","class Builder(command: BaseCliktCommand<*>, val parent: Context? = null)","com.github.ajalt.clikt.core.Context.Builder"]},{"name":"class ChainedValueSource(val sources: List<ValueSource>) : ValueSource","description":"com.github.ajalt.clikt.sources.ChainedValueSource","location":"clikt/com.github.ajalt.clikt.sources/-chained-value-source/index.html","searchKeys":["ChainedValueSource","class ChainedValueSource(val sources: List<ValueSource>) : ValueSource","com.github.ajalt.clikt.sources.ChainedValueSource"]},{"name":"class ChoiceGroup<GroupT : OptionGroup, OutT> : ParameterGroupDelegate<OutT> ","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/index.html","searchKeys":["ChoiceGroup","class ChoiceGroup<GroupT : OptionGroup, OutT> : ParameterGroupDelegate<OutT> ","com.github.ajalt.clikt.parameters.groups.ChoiceGroup"]},{"name":"class CoOccurringOptionGroup<GroupT : OptionGroup, OutT> : ParameterGroupDelegate<OutT> ","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/index.html","searchKeys":["CoOccurringOptionGroup","class CoOccurringOptionGroup<GroupT : OptionGroup, OutT> : ParameterGroupDelegate<OutT> ","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup"]},{"name":"class CommandInvocation<T : BaseCliktCommand<T>>(val command: T, val optionInvocations: Map<Option, List<OptionInvocation>>, val argumentInvocations: List<ArgumentInvocation>, val subcommandInvocations: List<CommandInvocation<T>>, val errors: List<CliktError>)","description":"com.github.ajalt.clikt.parsers.CommandInvocation","location":"clikt/com.github.ajalt.clikt.parsers/-command-invocation/index.html","searchKeys":["CommandInvocation","class CommandInvocation<T : BaseCliktCommand<T>>(val command: T, val optionInvocations: Map<Option, List<OptionInvocation>>, val argumentInvocations: List<ArgumentInvocation>, val subcommandInvocations: List<CommandInvocation<T>>, val errors: List<CliktError>)","com.github.ajalt.clikt.parsers.CommandInvocation"]},{"name":"class CommandLineParseResult<T : BaseCliktCommand<T>>(val invocation: CommandInvocation<T>, val originalArgv: List<String>, val expandedArgv: List<String>)","description":"com.github.ajalt.clikt.parsers.CommandLineParseResult","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parse-result/index.html","searchKeys":["CommandLineParseResult","class CommandLineParseResult<T : BaseCliktCommand<T>>(val invocation: CommandInvocation<T>, val originalArgv: List<String>, val expandedArgv: List<String>)","com.github.ajalt.clikt.parsers.CommandLineParseResult"]},{"name":"class CompletionCommand(help: String = \"Generate a tab-complete script for the given shell\", epilog: String = \"\", name: String = \"generate-completion\") : CoreCliktCommand","description":"com.github.ajalt.clikt.completion.CompletionCommand","location":"clikt/com.github.ajalt.clikt.completion/-completion-command/index.html","searchKeys":["CompletionCommand","class CompletionCommand(help: String = \"Generate a tab-complete script for the given shell\", epilog: String = \"\", name: String = \"generate-completion\") : CoreCliktCommand","com.github.ajalt.clikt.completion.CompletionCommand"]},{"name":"class Context","description":"com.github.ajalt.clikt.core.Context","location":"clikt/com.github.ajalt.clikt.core/-context/index.html","searchKeys":["Context","class Context","com.github.ajalt.clikt.core.Context"]},{"name":"class FileNotFound(val filename: String) : UsageError","description":"com.github.ajalt.clikt.core.FileNotFound","location":"clikt/com.github.ajalt.clikt.core/-file-not-found/index.html","searchKeys":["FileNotFound","class FileNotFound(val filename: String) : UsageError","com.github.ajalt.clikt.core.FileNotFound"]},{"name":"class FlatInvocations<T : BaseCliktCommand<T>> : Sequence<CommandInvocation<T>> , AutoCloseable","description":"com.github.ajalt.clikt.parsers.FlatInvocations","location":"clikt/com.github.ajalt.clikt.parsers/-flat-invocations/index.html","searchKeys":["FlatInvocations","class FlatInvocations<T : BaseCliktCommand<T>> : Sequence<CommandInvocation<T>> , AutoCloseable","com.github.ajalt.clikt.parsers.FlatInvocations"]},{"name":"class IncorrectArgumentValueCount(val nvalues: Int, argument: Argument) : UsageError","description":"com.github.ajalt.clikt.core.IncorrectArgumentValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-argument-value-count/index.html","searchKeys":["IncorrectArgumentValueCount","class IncorrectArgumentValueCount(val nvalues: Int, argument: Argument) : UsageError","com.github.ajalt.clikt.core.IncorrectArgumentValueCount"]},{"name":"class IncorrectOptionValueCount(minValues: Int, var paramName: String) : UsageError","description":"com.github.ajalt.clikt.core.IncorrectOptionValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-option-value-count/index.html","searchKeys":["IncorrectOptionValueCount","class IncorrectOptionValueCount(minValues: Int, var paramName: String) : UsageError","com.github.ajalt.clikt.core.IncorrectOptionValueCount"]},{"name":"class InvalidFileFormat(filename: String, message: String, lineno: Int? = null) : UsageError","description":"com.github.ajalt.clikt.core.InvalidFileFormat","location":"clikt/com.github.ajalt.clikt.core/-invalid-file-format/index.html","searchKeys":["InvalidFileFormat","class InvalidFileFormat(filename: String, message: String, lineno: Int? = null) : UsageError","com.github.ajalt.clikt.core.InvalidFileFormat"]},{"name":"class MapValueSource(values: Map<String, String>, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")) : ValueSource","description":"com.github.ajalt.clikt.sources.MapValueSource","location":"clikt/com.github.ajalt.clikt.sources/-map-value-source/index.html","searchKeys":["MapValueSource","class MapValueSource(values: Map<String, String>, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")) : ValueSource","com.github.ajalt.clikt.sources.MapValueSource"]},{"name":"class MissingArgument(argument: Argument) : UsageError","description":"com.github.ajalt.clikt.core.MissingArgument","location":"clikt/com.github.ajalt.clikt.core/-missing-argument/index.html","searchKeys":["MissingArgument","class MissingArgument(argument: Argument) : UsageError","com.github.ajalt.clikt.core.MissingArgument"]},{"name":"class MissingOption(option: Option) : UsageError","description":"com.github.ajalt.clikt.core.MissingOption","location":"clikt/com.github.ajalt.clikt.core/-missing-option/index.html","searchKeys":["MissingOption","class MissingOption(option: Option) : UsageError","com.github.ajalt.clikt.core.MissingOption"]},{"name":"class MultiUsageError(val errors: List<UsageError>) : UsageError","description":"com.github.ajalt.clikt.core.MultiUsageError","location":"clikt/com.github.ajalt.clikt.core/-multi-usage-error/index.html","searchKeys":["MultiUsageError","class MultiUsageError(val errors: List<UsageError>) : UsageError","com.github.ajalt.clikt.core.MultiUsageError"]},{"name":"class MutuallyExclusiveGroupException(val names: List<String>) : UsageError","description":"com.github.ajalt.clikt.core.MutuallyExclusiveGroupException","location":"clikt/com.github.ajalt.clikt.core/-mutually-exclusive-group-exception/index.html","searchKeys":["MutuallyExclusiveGroupException","class MutuallyExclusiveGroupException(val names: List<String>) : UsageError","com.github.ajalt.clikt.core.MutuallyExclusiveGroupException"]},{"name":"class MutuallyExclusiveOptionTransformContext(val context: Context)","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-option-transform-context/index.html","searchKeys":["MutuallyExclusiveOptionTransformContext","class MutuallyExclusiveOptionTransformContext(val context: Context)","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext"]},{"name":"class MutuallyExclusiveOptions<OptT : Any, OutT> : ParameterGroupDelegate<OutT> ","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/index.html","searchKeys":["MutuallyExclusiveOptions","class MutuallyExclusiveOptions<OptT : Any, OutT> : ParameterGroupDelegate<OutT> ","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions"]},{"name":"class NoSuchArgument(excessArguments: List<String>) : UsageError","description":"com.github.ajalt.clikt.core.NoSuchArgument","location":"clikt/com.github.ajalt.clikt.core/-no-such-argument/index.html","searchKeys":["NoSuchArgument","class NoSuchArgument(excessArguments: List<String>) : UsageError","com.github.ajalt.clikt.core.NoSuchArgument"]},{"name":"class NoSuchOption(var paramName: String, possibilities: List<String> = emptyList()) : UsageError","description":"com.github.ajalt.clikt.core.NoSuchOption","location":"clikt/com.github.ajalt.clikt.core/-no-such-option/index.html","searchKeys":["NoSuchOption","class NoSuchOption(var paramName: String, possibilities: List<String> = emptyList()) : UsageError","com.github.ajalt.clikt.core.NoSuchOption"]},{"name":"class NoSuchSubcommand(var paramName: String, possibilities: List<String> = emptyList()) : UsageError","description":"com.github.ajalt.clikt.core.NoSuchSubcommand","location":"clikt/com.github.ajalt.clikt.core/-no-such-subcommand/index.html","searchKeys":["NoSuchSubcommand","class NoSuchSubcommand(var paramName: String, possibilities: List<String> = emptyList()) : UsageError","com.github.ajalt.clikt.core.NoSuchSubcommand"]},{"name":"class OptionCallTransformContext(val name: String, val option: Option, val context: Context) : Option, TransformContext","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/index.html","searchKeys":["OptionCallTransformContext","class OptionCallTransformContext(val name: String, val option: Option, val context: Context) : Option, TransformContext","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext"]},{"name":"class OptionTransformContext(val option: Option, val context: Context) : Option, TransformContext","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/index.html","searchKeys":["OptionTransformContext","class OptionTransformContext(val option: Option, val context: Context) : Option, TransformContext","com.github.ajalt.clikt.parameters.options.OptionTransformContext"]},{"name":"class PlaintextHelpFormatter(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : AbstractHelpFormatter<String> ","description":"com.github.ajalt.clikt.output.PlaintextHelpFormatter","location":"clikt/com.github.ajalt.clikt.output/-plaintext-help-formatter/index.html","searchKeys":["PlaintextHelpFormatter","class PlaintextHelpFormatter(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false) : AbstractHelpFormatter<String> ","com.github.ajalt.clikt.output.PlaintextHelpFormatter"]},{"name":"class PrintCompletionMessage(message: String) : PrintMessage","description":"com.github.ajalt.clikt.core.PrintCompletionMessage","location":"clikt/com.github.ajalt.clikt.core/-print-completion-message/index.html","searchKeys":["PrintCompletionMessage","class PrintCompletionMessage(message: String) : PrintMessage","com.github.ajalt.clikt.core.PrintCompletionMessage"]},{"name":"class PrintHelpMessage(var context: Context?, val error: Boolean = false, val statusCode: Int = 0) : CliktError, ContextCliktError","description":"com.github.ajalt.clikt.core.PrintHelpMessage","location":"clikt/com.github.ajalt.clikt.core/-print-help-message/index.html","searchKeys":["PrintHelpMessage","class PrintHelpMessage(var context: Context?, val error: Boolean = false, val statusCode: Int = 0) : CliktError, ContextCliktError","com.github.ajalt.clikt.core.PrintHelpMessage"]},{"name":"class ProcessedArgumentImpl<AllT, ValueT> : ProcessedArgument<AllT, ValueT> ","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/index.html","searchKeys":["ProcessedArgumentImpl","class ProcessedArgumentImpl<AllT, ValueT> : ProcessedArgument<AllT, ValueT> ","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl"]},{"name":"const val DEFAULT: String","description":"com.github.ajalt.clikt.output.HelpFormatter.Tags.DEFAULT","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-tags/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","const val DEFAULT: String","com.github.ajalt.clikt.output.HelpFormatter.Tags.DEFAULT"]},{"name":"const val DEFAULT_OBJ_KEY: String","description":"com.github.ajalt.clikt.core.Context.Companion.DEFAULT_OBJ_KEY","location":"clikt/com.github.ajalt.clikt.core/-context/-companion/-d-e-f-a-u-l-t_-o-b-j_-k-e-y.html","searchKeys":["DEFAULT_OBJ_KEY","const val DEFAULT_OBJ_KEY: String","com.github.ajalt.clikt.core.Context.Companion.DEFAULT_OBJ_KEY"]},{"name":"const val REQUIRED: String","description":"com.github.ajalt.clikt.output.HelpFormatter.Tags.REQUIRED","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-tags/-r-e-q-u-i-r-e-d.html","searchKeys":["REQUIRED","const val REQUIRED: String","com.github.ajalt.clikt.output.HelpFormatter.Tags.REQUIRED"]},{"name":"const val TERMINAL_KEY: String","description":"com.github.ajalt.clikt.core.Context.Companion.TERMINAL_KEY","location":"clikt/com.github.ajalt.clikt.core/-context/-companion/-t-e-r-m-i-n-a-l_-k-e-y.html","searchKeys":["TERMINAL_KEY","const val TERMINAL_KEY: String","com.github.ajalt.clikt.core.Context.Companion.TERMINAL_KEY"]},{"name":"constructor()","description":"com.github.ajalt.clikt.core.Abort.Abort","location":"clikt/com.github.ajalt.clikt.core/-abort/-abort.html","searchKeys":["Abort","constructor()","com.github.ajalt.clikt.core.Abort.Abort"]},{"name":"constructor(argument: Argument)","description":"com.github.ajalt.clikt.core.IncorrectArgumentValueCount.IncorrectArgumentValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-argument-value-count/-incorrect-argument-value-count.html","searchKeys":["IncorrectArgumentValueCount","constructor(argument: Argument)","com.github.ajalt.clikt.core.IncorrectArgumentValueCount.IncorrectArgumentValueCount"]},{"name":"constructor(argument: Argument)","description":"com.github.ajalt.clikt.core.MissingArgument.MissingArgument","location":"clikt/com.github.ajalt.clikt.core/-missing-argument/-missing-argument.html","searchKeys":["MissingArgument","constructor(argument: Argument)","com.github.ajalt.clikt.core.MissingArgument.MissingArgument"]},{"name":"constructor(argument: Argument, context: Context)","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.ArgumentTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/-argument-transform-context.html","searchKeys":["ArgumentTransformContext","constructor(argument: Argument, context: Context)","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.ArgumentTransformContext"]},{"name":"constructor(argument: Argument, statusCode: Int = 1)","description":"com.github.ajalt.clikt.core.UsageError.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/-usage-error.html","searchKeys":["UsageError","constructor(argument: Argument, statusCode: Int = 1)","com.github.ajalt.clikt.core.UsageError.UsageError"]},{"name":"constructor(argument: Argument, values: List<String>)","description":"com.github.ajalt.clikt.parsers.ArgumentInvocation.ArgumentInvocation","location":"clikt/com.github.ajalt.clikt.parsers/-argument-invocation/-argument-invocation.html","searchKeys":["ArgumentInvocation","constructor(argument: Argument, values: List<String>)","com.github.ajalt.clikt.parsers.ArgumentInvocation.ArgumentInvocation"]},{"name":"constructor(candidates: Set<String>)","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.Fixed","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-fixed/-fixed.html","searchKeys":["Fixed","constructor(candidates: Set<String>)","com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.Fixed"]},{"name":"constructor(command: BaseCliktCommand<*>, parent: Context? = null)","description":"com.github.ajalt.clikt.core.Context.Builder.Builder","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/-builder.html","searchKeys":["Builder","constructor(command: BaseCliktCommand<*>, parent: Context? = null)","com.github.ajalt.clikt.core.Context.Builder.Builder"]},{"name":"constructor(command: T, optionInvocations: Map<Option, List<OptionInvocation>>, argumentInvocations: List<ArgumentInvocation>, subcommandInvocations: List<CommandInvocation<T>>, errors: List<CliktError>)","description":"com.github.ajalt.clikt.parsers.CommandInvocation.CommandInvocation","location":"clikt/com.github.ajalt.clikt.parsers/-command-invocation/-command-invocation.html","searchKeys":["CommandInvocation","constructor(command: T, optionInvocations: Map<Option, List<OptionInvocation>>, argumentInvocations: List<ArgumentInvocation>, subcommandInvocations: List<CommandInvocation<T>>, errors: List<CliktError>)","com.github.ajalt.clikt.parsers.CommandInvocation.CommandInvocation"]},{"name":"constructor(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext.MutuallyExclusiveOptionTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-option-transform-context/-mutually-exclusive-option-transform-context.html","searchKeys":["MutuallyExclusiveOptionTransformContext","constructor(context: Context)","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext.MutuallyExclusiveOptionTransformContext"]},{"name":"constructor(context: Context)","description":"com.github.ajalt.clikt.parameters.transform.HelpTransformContext.HelpTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.transform/-help-transform-context/-help-transform-context.html","searchKeys":["HelpTransformContext","constructor(context: Context)","com.github.ajalt.clikt.parameters.transform.HelpTransformContext.HelpTransformContext"]},{"name":"constructor(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","description":"com.github.ajalt.clikt.output.AbstractHelpFormatter.AbstractHelpFormatter","location":"clikt/com.github.ajalt.clikt.output/-abstract-help-formatter/-abstract-help-formatter.html","searchKeys":["AbstractHelpFormatter","constructor(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","com.github.ajalt.clikt.output.AbstractHelpFormatter.AbstractHelpFormatter"]},{"name":"constructor(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","description":"com.github.ajalt.clikt.output.PlaintextHelpFormatter.PlaintextHelpFormatter","location":"clikt/com.github.ajalt.clikt.output/-plaintext-help-formatter/-plaintext-help-formatter.html","searchKeys":["PlaintextHelpFormatter","constructor(context: Context, requiredOptionMarker: String? = null, showDefaultValues: Boolean = false, showRequiredTag: Boolean = false)","com.github.ajalt.clikt.output.PlaintextHelpFormatter.PlaintextHelpFormatter"]},{"name":"constructor(context: Context?, error: Boolean = false, statusCode: Int = 0)","description":"com.github.ajalt.clikt.core.PrintHelpMessage.PrintHelpMessage","location":"clikt/com.github.ajalt.clikt.core/-print-help-message/-print-help-message.html","searchKeys":["PrintHelpMessage","constructor(context: Context?, error: Boolean = false, statusCode: Int = 0)","com.github.ajalt.clikt.core.PrintHelpMessage.PrintHelpMessage"]},{"name":"constructor(errors: List<UsageError>)","description":"com.github.ajalt.clikt.core.MultiUsageError.MultiUsageError","location":"clikt/com.github.ajalt.clikt.core/-multi-usage-error/-multi-usage-error.html","searchKeys":["MultiUsageError","constructor(errors: List<UsageError>)","com.github.ajalt.clikt.core.MultiUsageError.MultiUsageError"]},{"name":"constructor(excessArguments: List<String>)","description":"com.github.ajalt.clikt.core.NoSuchArgument.NoSuchArgument","location":"clikt/com.github.ajalt.clikt.core/-no-such-argument/-no-such-argument.html","searchKeys":["NoSuchArgument","constructor(excessArguments: List<String>)","com.github.ajalt.clikt.core.NoSuchArgument.NoSuchArgument"]},{"name":"constructor(explicit: T?, default: T)","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault.ValueWithDefault","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/-value-with-default.html","searchKeys":["ValueWithDefault","constructor(explicit: T?, default: T)","com.github.ajalt.clikt.parameters.options.ValueWithDefault.ValueWithDefault"]},{"name":"constructor(filename: String)","description":"com.github.ajalt.clikt.core.FileNotFound.FileNotFound","location":"clikt/com.github.ajalt.clikt.core/-file-not-found/-file-not-found.html","searchKeys":["FileNotFound","constructor(filename: String)","com.github.ajalt.clikt.core.FileNotFound.FileNotFound"]},{"name":"constructor(filename: String, message: String, lineno: Int? = null)","description":"com.github.ajalt.clikt.core.InvalidFileFormat.InvalidFileFormat","location":"clikt/com.github.ajalt.clikt.core/-invalid-file-format/-invalid-file-format.html","searchKeys":["InvalidFileFormat","constructor(filename: String, message: String, lineno: Int? = null)","com.github.ajalt.clikt.core.InvalidFileFormat.InvalidFileFormat"]},{"name":"constructor(generator: (CompletionCandidates.Custom.ShellType) -> String?)","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Custom","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-custom.html","searchKeys":["Custom","constructor(generator: (CompletionCandidates.Custom.ShellType) -> String?)","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Custom"]},{"name":"constructor(help: String = \"Generate a tab-complete script for the given shell\", epilog: String = \"\", name: String = \"generate-completion\")","description":"com.github.ajalt.clikt.completion.CompletionCommand.CompletionCommand","location":"clikt/com.github.ajalt.clikt.completion/-completion-command/-completion-command.html","searchKeys":["CompletionCommand","constructor(help: String = \"Generate a tab-complete script for the given shell\", epilog: String = \"\", name: String = \"generate-completion\")","com.github.ajalt.clikt.completion.CompletionCommand.CompletionCommand"]},{"name":"constructor(invocation: CommandInvocation<T>, originalArgv: List<String>, expandedArgv: List<String>)","description":"com.github.ajalt.clikt.parsers.CommandLineParseResult.CommandLineParseResult","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parse-result/-command-line-parse-result.html","searchKeys":["CommandLineParseResult","constructor(invocation: CommandInvocation<T>, originalArgv: List<String>, expandedArgv: List<String>)","com.github.ajalt.clikt.parsers.CommandLineParseResult.CommandLineParseResult"]},{"name":"constructor(message: String)","description":"com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/-bad-parameter-value.html","searchKeys":["BadParameterValue","constructor(message: String)","com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue"]},{"name":"constructor(message: String)","description":"com.github.ajalt.clikt.core.PrintCompletionMessage.PrintCompletionMessage","location":"clikt/com.github.ajalt.clikt.core/-print-completion-message/-print-completion-message.html","searchKeys":["PrintCompletionMessage","constructor(message: String)","com.github.ajalt.clikt.core.PrintCompletionMessage.PrintCompletionMessage"]},{"name":"constructor(message: String, argument: Argument)","description":"com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/-bad-parameter-value.html","searchKeys":["BadParameterValue","constructor(message: String, argument: Argument)","com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue"]},{"name":"constructor(message: String, argument: Argument, statusCode: Int = 1)","description":"com.github.ajalt.clikt.core.UsageError.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/-usage-error.html","searchKeys":["UsageError","constructor(message: String, argument: Argument, statusCode: Int = 1)","com.github.ajalt.clikt.core.UsageError.UsageError"]},{"name":"constructor(message: String, option: Option)","description":"com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/-bad-parameter-value.html","searchKeys":["BadParameterValue","constructor(message: String, option: Option)","com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue"]},{"name":"constructor(message: String, option: Option, name: String)","description":"com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/-bad-parameter-value.html","searchKeys":["BadParameterValue","constructor(message: String, option: Option, name: String)","com.github.ajalt.clikt.core.BadParameterValue.BadParameterValue"]},{"name":"constructor(message: String, option: Option, statusCode: Int = 1)","description":"com.github.ajalt.clikt.core.UsageError.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/-usage-error.html","searchKeys":["UsageError","constructor(message: String, option: Option, statusCode: Int = 1)","com.github.ajalt.clikt.core.UsageError.UsageError"]},{"name":"constructor(message: String, statusCode: Int = 0, printError: Boolean = false)","description":"com.github.ajalt.clikt.core.PrintMessage.PrintMessage","location":"clikt/com.github.ajalt.clikt.core/-print-message/-print-message.html","searchKeys":["PrintMessage","constructor(message: String, statusCode: Int = 0, printError: Boolean = false)","com.github.ajalt.clikt.core.PrintMessage.PrintMessage"]},{"name":"constructor(message: String? = null, cause: Exception? = null, statusCode: Int = 1, printError: Boolean = true)","description":"com.github.ajalt.clikt.core.CliktError.CliktError","location":"clikt/com.github.ajalt.clikt.core/-clikt-error/-clikt-error.html","searchKeys":["CliktError","constructor(message: String? = null, cause: Exception? = null, statusCode: Int = 1, printError: Boolean = true)","com.github.ajalt.clikt.core.CliktError.CliktError"]},{"name":"constructor(message: String?, paramName: String? = null, statusCode: Int = 1)","description":"com.github.ajalt.clikt.core.UsageError.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/-usage-error.html","searchKeys":["UsageError","constructor(message: String?, paramName: String? = null, statusCode: Int = 1)","com.github.ajalt.clikt.core.UsageError.UsageError"]},{"name":"constructor(minValues: Int, paramName: String)","description":"com.github.ajalt.clikt.core.IncorrectOptionValueCount.IncorrectOptionValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-option-value-count/-incorrect-option-value-count.html","searchKeys":["IncorrectOptionValueCount","constructor(minValues: Int, paramName: String)","com.github.ajalt.clikt.core.IncorrectOptionValueCount.IncorrectOptionValueCount"]},{"name":"constructor(name: String, help: String)","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.Group","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-group/-group.html","searchKeys":["Group","constructor(name: String, help: String)","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.Group"]},{"name":"constructor(name: String, help: String, required: Boolean, repeatable: Boolean, tags: Map<String, String>)","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.Argument","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/-argument.html","searchKeys":["Argument","constructor(name: String, help: String, required: Boolean, repeatable: Boolean, tags: Map<String, String>)","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.Argument"]},{"name":"constructor(name: String, help: String, tags: Map<String, String>)","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.Subcommand","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/-subcommand.html","searchKeys":["Subcommand","constructor(name: String, help: String, tags: Map<String, String>)","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.Subcommand"]},{"name":"constructor(name: String, option: Option, context: Context)","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.OptionCallTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/-option-call-transform-context.html","searchKeys":["OptionCallTransformContext","constructor(name: String, option: Option, context: Context)","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.OptionCallTransformContext"]},{"name":"constructor(name: String, values: List<String>)","description":"com.github.ajalt.clikt.parsers.OptionInvocation.OptionInvocation","location":"clikt/com.github.ajalt.clikt.parsers/-option-invocation/-option-invocation.html","searchKeys":["OptionInvocation","constructor(name: String, values: List<String>)","com.github.ajalt.clikt.parsers.OptionInvocation.OptionInvocation"]},{"name":"constructor(name: String? = null)","description":"com.github.ajalt.clikt.command.CoreChainedCliktCommand.CoreChainedCliktCommand","location":"clikt/com.github.ajalt.clikt.command/-core-chained-clikt-command/-core-chained-clikt-command.html","searchKeys":["CoreChainedCliktCommand","constructor(name: String? = null)","com.github.ajalt.clikt.command.CoreChainedCliktCommand.CoreChainedCliktCommand"]},{"name":"constructor(name: String? = null)","description":"com.github.ajalt.clikt.command.CoreSuspendingCliktCommand.CoreSuspendingCliktCommand","location":"clikt/com.github.ajalt.clikt.command/-core-suspending-clikt-command/-core-suspending-clikt-command.html","searchKeys":["CoreSuspendingCliktCommand","constructor(name: String? = null)","com.github.ajalt.clikt.command.CoreSuspendingCliktCommand.CoreSuspendingCliktCommand"]},{"name":"constructor(name: String? = null)","description":"com.github.ajalt.clikt.core.BaseCliktCommand.BaseCliktCommand","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/-base-clikt-command.html","searchKeys":["BaseCliktCommand","constructor(name: String? = null)","com.github.ajalt.clikt.core.BaseCliktCommand.BaseCliktCommand"]},{"name":"constructor(name: String? = null)","description":"com.github.ajalt.clikt.core.CoreCliktCommand.CoreCliktCommand","location":"clikt/com.github.ajalt.clikt.core/-core-clikt-command/-core-clikt-command.html","searchKeys":["CoreCliktCommand","constructor(name: String? = null)","com.github.ajalt.clikt.core.CoreCliktCommand.CoreCliktCommand"]},{"name":"constructor(name: String? = null)","description":"com.github.ajalt.clikt.core.CoreNoOpCliktCommand.CoreNoOpCliktCommand","location":"clikt/com.github.ajalt.clikt.core/-core-no-op-clikt-command/-core-no-op-clikt-command.html","searchKeys":["CoreNoOpCliktCommand","constructor(name: String? = null)","com.github.ajalt.clikt.core.CoreNoOpCliktCommand.CoreNoOpCliktCommand"]},{"name":"constructor(name: String? = null, help: String? = null)","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.OptionGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/-option-group.html","searchKeys":["OptionGroup","constructor(name: String? = null, help: String? = null)","com.github.ajalt.clikt.parameters.groups.OptionGroup.OptionGroup"]},{"name":"constructor(names: List<String>)","description":"com.github.ajalt.clikt.core.MutuallyExclusiveGroupException.MutuallyExclusiveGroupException","location":"clikt/com.github.ajalt.clikt.core/-mutually-exclusive-group-exception/-mutually-exclusive-group-exception.html","searchKeys":["MutuallyExclusiveGroupException","constructor(names: List<String>)","com.github.ajalt.clikt.core.MutuallyExclusiveGroupException.MutuallyExclusiveGroupException"]},{"name":"constructor(names: Set<String>, secondaryNames: Set<String>, metavar: String?, help: String, nvalues: IntRange, tags: Map<String, String>, acceptsNumberValueWithoutName: Boolean, acceptsUnattachedValue: Boolean, groupName: String?)","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.Option","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/-option.html","searchKeys":["Option","constructor(names: Set<String>, secondaryNames: Set<String>, metavar: String?, help: String, nvalues: IntRange, tags: Map<String, String>, acceptsNumberValueWithoutName: Boolean, acceptsUnattachedValue: Boolean, groupName: String?)","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.Option"]},{"name":"constructor(nvalues: Int, argument: Argument)","description":"com.github.ajalt.clikt.core.IncorrectArgumentValueCount.IncorrectArgumentValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-argument-value-count/-incorrect-argument-value-count.html","searchKeys":["IncorrectArgumentValueCount","constructor(nvalues: Int, argument: Argument)","com.github.ajalt.clikt.core.IncorrectArgumentValueCount.IncorrectArgumentValueCount"]},{"name":"constructor(option: Option)","description":"com.github.ajalt.clikt.core.MissingOption.MissingOption","location":"clikt/com.github.ajalt.clikt.core/-missing-option/-missing-option.html","searchKeys":["MissingOption","constructor(option: Option)","com.github.ajalt.clikt.core.MissingOption.MissingOption"]},{"name":"constructor(option: Option, context: Context)","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.OptionTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/-option-transform-context.html","searchKeys":["OptionTransformContext","constructor(option: Option, context: Context)","com.github.ajalt.clikt.parameters.options.OptionTransformContext.OptionTransformContext"]},{"name":"constructor(option: Option, paramName: String)","description":"com.github.ajalt.clikt.core.IncorrectOptionValueCount.IncorrectOptionValueCount","location":"clikt/com.github.ajalt.clikt.core/-incorrect-option-value-count/-incorrect-option-value-count.html","searchKeys":["IncorrectOptionValueCount","constructor(option: Option, paramName: String)","com.github.ajalt.clikt.core.IncorrectOptionValueCount.IncorrectOptionValueCount"]},{"name":"constructor(option: Option, statusCode: Int = 1)","description":"com.github.ajalt.clikt.core.UsageError.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/-usage-error.html","searchKeys":["UsageError","constructor(option: Option, statusCode: Int = 1)","com.github.ajalt.clikt.core.UsageError.UsageError"]},{"name":"constructor(paramName: String, possibilities: List<String> = emptyList())","description":"com.github.ajalt.clikt.core.NoSuchOption.NoSuchOption","location":"clikt/com.github.ajalt.clikt.core/-no-such-option/-no-such-option.html","searchKeys":["NoSuchOption","constructor(paramName: String, possibilities: List<String> = emptyList())","com.github.ajalt.clikt.core.NoSuchOption.NoSuchOption"]},{"name":"constructor(paramName: String, possibilities: List<String> = emptyList())","description":"com.github.ajalt.clikt.core.NoSuchSubcommand.NoSuchSubcommand","location":"clikt/com.github.ajalt.clikt.core/-no-such-subcommand/-no-such-subcommand.html","searchKeys":["NoSuchSubcommand","constructor(paramName: String, possibilities: List<String> = emptyList())","com.github.ajalt.clikt.core.NoSuchSubcommand.NoSuchSubcommand"]},{"name":"constructor(sources: List<ValueSource>)","description":"com.github.ajalt.clikt.sources.ChainedValueSource.ChainedValueSource","location":"clikt/com.github.ajalt.clikt.sources/-chained-value-source/-chained-value-source.html","searchKeys":["ChainedValueSource","constructor(sources: List<ValueSource>)","com.github.ajalt.clikt.sources.ChainedValueSource.ChainedValueSource"]},{"name":"constructor(statusCode: Int)","description":"com.github.ajalt.clikt.core.ProgramResult.ProgramResult","location":"clikt/com.github.ajalt.clikt.core/-program-result/-program-result.html","searchKeys":["ProgramResult","constructor(statusCode: Int)","com.github.ajalt.clikt.core.ProgramResult.ProgramResult"]},{"name":"constructor(values: List<String>)","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.Invocation","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/-invocation.html","searchKeys":["Invocation","constructor(values: List<String>)","com.github.ajalt.clikt.sources.ValueSource.Invocation.Invocation"]},{"name":"constructor(values: Map<String, String>, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\"))","description":"com.github.ajalt.clikt.sources.MapValueSource.MapValueSource","location":"clikt/com.github.ajalt.clikt.sources/-map-value-source/-map-value-source.html","searchKeys":["MapValueSource","constructor(values: Map<String, String>, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\"))","com.github.ajalt.clikt.sources.MapValueSource.MapValueSource"]},{"name":"constructor(vararg candidates: String)","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.Fixed","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-fixed/-fixed.html","searchKeys":["Fixed","constructor(vararg candidates: String)","com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.Fixed"]},{"name":"data class Argument(val name: String, val help: String, val required: Boolean, val repeatable: Boolean, val tags: Map<String, String>) : HelpFormatter.ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/index.html","searchKeys":["Argument","data class Argument(val name: String, val help: String, val required: Boolean, val repeatable: Boolean, val tags: Map<String, String>) : HelpFormatter.ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument"]},{"name":"data class Custom(val generator: (CompletionCandidates.Custom.ShellType) -> String?) : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/index.html","searchKeys":["Custom","data class Custom(val generator: (CompletionCandidates.Custom.ShellType) -> String?) : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Custom"]},{"name":"data class Fixed(val candidates: Set<String>) : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Fixed","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-fixed/index.html","searchKeys":["Fixed","data class Fixed(val candidates: Set<String>) : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Fixed"]},{"name":"data class Group(val name: String, val help: String) : HelpFormatter.ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-group/index.html","searchKeys":["Group","data class Group(val name: String, val help: String) : HelpFormatter.ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group"]},{"name":"data class HelpTransformContext(val context: Context) : TransformContext","description":"com.github.ajalt.clikt.parameters.transform.HelpTransformContext","location":"clikt/com.github.ajalt.clikt.parameters.transform/-help-transform-context/index.html","searchKeys":["HelpTransformContext","data class HelpTransformContext(val context: Context) : TransformContext","com.github.ajalt.clikt.parameters.transform.HelpTransformContext"]},{"name":"data class Invocation(val values: List<String>)","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/index.html","searchKeys":["Invocation","data class Invocation(val values: List<String>)","com.github.ajalt.clikt.sources.ValueSource.Invocation"]},{"name":"data class Option(val names: Set<String>, val secondaryNames: Set<String>, val metavar: String?, val help: String, val nvalues: IntRange, val tags: Map<String, String>, val acceptsNumberValueWithoutName: Boolean, val acceptsUnattachedValue: Boolean, val groupName: String?) : HelpFormatter.ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/index.html","searchKeys":["Option","data class Option(val names: Set<String>, val secondaryNames: Set<String>, val metavar: String?, val help: String, val nvalues: IntRange, val tags: Map<String, String>, val acceptsNumberValueWithoutName: Boolean, val acceptsUnattachedValue: Boolean, val groupName: String?) : HelpFormatter.ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option"]},{"name":"data class OptionInvocation(val name: String, val values: List<String>)","description":"com.github.ajalt.clikt.parsers.OptionInvocation","location":"clikt/com.github.ajalt.clikt.parsers/-option-invocation/index.html","searchKeys":["OptionInvocation","data class OptionInvocation(val name: String, val values: List<String>)","com.github.ajalt.clikt.parsers.OptionInvocation"]},{"name":"data class Subcommand(val name: String, val help: String, val tags: Map<String, String>) : HelpFormatter.ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/index.html","searchKeys":["Subcommand","data class Subcommand(val name: String, val help: String, val tags: Map<String, String>) : HelpFormatter.ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand"]},{"name":"data class ValueWithDefault<out T>(val explicit: T?, val default: T)","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/index.html","searchKeys":["ValueWithDefault","data class ValueWithDefault<out T>(val explicit: T?, val default: T)","com.github.ajalt.clikt.parameters.options.ValueWithDefault"]},{"name":"data object Hostname : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Hostname","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-hostname/index.html","searchKeys":["Hostname","data object Hostname : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Hostname"]},{"name":"data object None : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.None","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-none/index.html","searchKeys":["None","data object None : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.None"]},{"name":"data object Path : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Path","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-path/index.html","searchKeys":["Path","data object Path : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Path"]},{"name":"data object Username : CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Username","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-username/index.html","searchKeys":["Username","data object Username : CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates.Username"]},{"name":"enum ShellType : Enum<CompletionCandidates.Custom.ShellType> ","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/index.html","searchKeys":["ShellType","enum ShellType : Enum<CompletionCandidates.Custom.ShellType> ","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType"]},{"name":"fun <A, B, EachT, ValueT> OptionWithValues<List<Pair<A, B>>, EachT, ValueT>.toMap(): OptionWithValues<Map<A, B>, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.toMap","location":"clikt/com.github.ajalt.clikt.parameters.options/to-map.html","searchKeys":["toMap","fun <A, B, EachT, ValueT> OptionWithValues<List<Pair<A, B>>, EachT, ValueT>.toMap(): OptionWithValues<Map<A, B>, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.toMap"]},{"name":"fun <AllInT, ValueT, AllOutT> ProcessedArgument<AllInT, ValueT>.transformAll(nvalues: Int? = null, required: Boolean? = null, defaultForHelp: String? = null, transform: ArgCallsTransformer<AllOutT, ValueT>): ProcessedArgument<AllOutT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.arguments/transform-all.html","searchKeys":["transformAll","fun <AllInT, ValueT, AllOutT> ProcessedArgument<AllInT, ValueT>.transformAll(nvalues: Int? = null, required: Boolean? = null, defaultForHelp: String? = null, transform: ArgCallsTransformer<AllOutT, ValueT>): ProcessedArgument<AllOutT, ValueT>","com.github.ajalt.clikt.parameters.arguments.transformAll"]},{"name":"fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.optional(): ProcessedArgument<AllT?, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.optional","location":"clikt/com.github.ajalt.clikt.parameters.arguments/optional.html","searchKeys":["optional","fun <AllT : Any, ValueT> ProcessedArgument<AllT, ValueT>.optional(): ProcessedArgument<AllT?, ValueT>","com.github.ajalt.clikt.parameters.arguments.optional"]},{"name":"fun <AllT, EachT, ValueT> NullableOption<EachT, ValueT>.transformAll(defaultForHelp: String? = this.helpTags[HelpFormatter.Tags.DEFAULT], showAsRequired: Boolean = HelpFormatter.Tags.REQUIRED in this.helpTags, transform: AllTransformer<EachT, AllT>): OptionWithValues<AllT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.options/transform-all.html","searchKeys":["transformAll","fun <AllT, EachT, ValueT> NullableOption<EachT, ValueT>.transformAll(defaultForHelp: String? = this.helpTags[HelpFormatter.Tags.DEFAULT], showAsRequired: Boolean = HelpFormatter.Tags.REQUIRED in this.helpTags, transform: AllTransformer<EachT, AllT>): OptionWithValues<AllT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.transformAll"]},{"name":"fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.deprecated(message: String? = \"\", tagName: String? = \"deprecated\", tagValue: String = \"\", error: Boolean = false): OptionDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.options.deprecated","location":"clikt/com.github.ajalt.clikt.parameters.options/deprecated.html","searchKeys":["deprecated","fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.deprecated(message: String? = \"\", tagName: String? = \"deprecated\", tagValue: String = \"\", error: Boolean = false): OptionDelegate<AllT>","com.github.ajalt.clikt.parameters.options.deprecated"]},{"name":"fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.help(help: HelpTransformContext.() -> String): OptionWithValues<AllT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.help","location":"clikt/com.github.ajalt.clikt.parameters.options/help.html","searchKeys":["help","fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.help(help: HelpTransformContext.() -> String): OptionWithValues<AllT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.help"]},{"name":"fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.help(help: String): OptionWithValues<AllT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.help","location":"clikt/com.github.ajalt.clikt.parameters.options/help.html","searchKeys":["help","fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.help(help: String): OptionWithValues<AllT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.help"]},{"name":"fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.help(help: HelpTransformContext.() -> String): ProcessedArgument<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.help","location":"clikt/com.github.ajalt.clikt.parameters.arguments/help.html","searchKeys":["help","fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.help(help: HelpTransformContext.() -> String): ProcessedArgument<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.help"]},{"name":"fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.help(help: String): ProcessedArgument<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.help","location":"clikt/com.github.ajalt.clikt.parameters.arguments/help.html","searchKeys":["help","fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.help(help: String): ProcessedArgument<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.help"]},{"name":"fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.validate(validator: ArgValidator<AllT & Any>): ArgumentDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.arguments.validate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/validate.html","searchKeys":["validate","fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.validate(validator: ArgValidator<AllT & Any>): ArgumentDelegate<AllT>","com.github.ajalt.clikt.parameters.arguments.validate"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.default(value: EachT, defaultForHelp: String = value.toString()): OptionWithValues<EachT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.default","location":"clikt/com.github.ajalt.clikt.parameters.options/default.html","searchKeys":["default","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.default(value: EachT, defaultForHelp: String = value.toString()): OptionWithValues<EachT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.default"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.split(regex: Regex, limit: Int = 0): OptionWithValues<List<ValueT>?, List<ValueT>, ValueT>","description":"com.github.ajalt.clikt.parameters.options.split","location":"clikt/com.github.ajalt.clikt.parameters.options/split.html","searchKeys":["split","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.split(regex: Regex, limit: Int = 0): OptionWithValues<List<ValueT>?, List<ValueT>, ValueT>","com.github.ajalt.clikt.parameters.options.split"]},{"name":"fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.split(vararg delimiters: String, ignoreCase: Boolean = false, limit: Int = 0): OptionWithValues<List<ValueT>?, List<ValueT>, ValueT>","description":"com.github.ajalt.clikt.parameters.options.split","location":"clikt/com.github.ajalt.clikt.parameters.options/split.html","searchKeys":["split","fun <EachT : Any, ValueT> NullableOption<EachT, ValueT>.split(vararg delimiters: String, ignoreCase: Boolean = false, limit: Int = 0): OptionWithValues<List<ValueT>?, List<ValueT>, ValueT>","com.github.ajalt.clikt.parameters.options.split"]},{"name":"fun <EachT : Any, ValueT> NullableOption<ValueT, ValueT>.transformValues(nvalues: Int, transform: ValuesTransformer<ValueT, EachT>): NullableOption<EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.transformValues","location":"clikt/com.github.ajalt.clikt.parameters.options/transform-values.html","searchKeys":["transformValues","fun <EachT : Any, ValueT> NullableOption<ValueT, ValueT>.transformValues(nvalues: Int, transform: ValuesTransformer<ValueT, EachT>): NullableOption<EachT, ValueT>","com.github.ajalt.clikt.parameters.options.transformValues"]},{"name":"fun <EachT, ValueT> NullableOption<EachT, ValueT>.multiple(default: List<EachT> = emptyList(), required: Boolean = false): OptionWithValues<List<EachT>, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.multiple","location":"clikt/com.github.ajalt.clikt.parameters.options/multiple.html","searchKeys":["multiple","fun <EachT, ValueT> NullableOption<EachT, ValueT>.multiple(default: List<EachT> = emptyList(), required: Boolean = false): OptionWithValues<List<EachT>, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.multiple"]},{"name":"fun <EachT, ValueT> NullableOption<EachT, ValueT>.required(): OptionWithValues<EachT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.required","location":"clikt/com.github.ajalt.clikt.parameters.options/required.html","searchKeys":["required","fun <EachT, ValueT> NullableOption<EachT, ValueT>.required(): OptionWithValues<EachT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.required"]},{"name":"fun <EachT, ValueT> NullableOption<ValueT, ValueT>.transformValues(nvalues: IntRange, transform: ValuesTransformer<ValueT, EachT>): NullableOption<EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.transformValues","location":"clikt/com.github.ajalt.clikt.parameters.options/transform-values.html","searchKeys":["transformValues","fun <EachT, ValueT> NullableOption<ValueT, ValueT>.transformValues(nvalues: IntRange, transform: ValuesTransformer<ValueT, EachT>): NullableOption<EachT, ValueT>","com.github.ajalt.clikt.parameters.options.transformValues"]},{"name":"fun <OptT : Any, OutT> MutuallyExclusiveOptions<OptT, OutT>.help(name: String, help: String): MutuallyExclusiveOptions<OptT, OutT>","description":"com.github.ajalt.clikt.parameters.groups.help","location":"clikt/com.github.ajalt.clikt.parameters.groups/help.html","searchKeys":["help","fun <OptT : Any, OutT> MutuallyExclusiveOptions<OptT, OutT>.help(name: String, help: String): MutuallyExclusiveOptions<OptT, OutT>","com.github.ajalt.clikt.parameters.groups.help"]},{"name":"fun <T : Any> MutuallyExclusiveOptions<T, T?>.default(value: T): MutuallyExclusiveOptions<T, T>","description":"com.github.ajalt.clikt.parameters.groups.default","location":"clikt/com.github.ajalt.clikt.parameters.groups/default.html","searchKeys":["default","fun <T : Any> MutuallyExclusiveOptions<T, T?>.default(value: T): MutuallyExclusiveOptions<T, T>","com.github.ajalt.clikt.parameters.groups.default"]},{"name":"fun <T : Any> MutuallyExclusiveOptions<T, T?>.required(): MutuallyExclusiveOptions<T, T>","description":"com.github.ajalt.clikt.parameters.groups.required","location":"clikt/com.github.ajalt.clikt.parameters.groups/required.html","searchKeys":["required","fun <T : Any> MutuallyExclusiveOptions<T, T?>.required(): MutuallyExclusiveOptions<T, T>","com.github.ajalt.clikt.parameters.groups.required"]},{"name":"fun <T : Any> MutuallyExclusiveOptions<T, T?>.single(): MutuallyExclusiveOptions<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.single","location":"clikt/com.github.ajalt.clikt.parameters.groups/single.html","searchKeys":["single","fun <T : Any> MutuallyExclusiveOptions<T, T?>.single(): MutuallyExclusiveOptions<T, T?>","com.github.ajalt.clikt.parameters.groups.single"]},{"name":"fun <T : Any> ParameterHolder.mutuallyExclusiveOptions(option1: OptionDelegate<out T?>, option2: OptionDelegate<out T?>, vararg options: OptionDelegate<out T?>, name: String? = null, help: String? = null): MutuallyExclusiveOptions<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.mutuallyExclusiveOptions","location":"clikt/com.github.ajalt.clikt.parameters.groups/mutually-exclusive-options.html","searchKeys":["mutuallyExclusiveOptions","fun <T : Any> ParameterHolder.mutuallyExclusiveOptions(option1: OptionDelegate<out T?>, option2: OptionDelegate<out T?>, vararg options: OptionDelegate<out T?>, name: String? = null, help: String? = null): MutuallyExclusiveOptions<T, T?>","com.github.ajalt.clikt.parameters.groups.mutuallyExclusiveOptions"]},{"name":"fun <T : Any> ProcessedArgument<List<T>, T>.unique(): ProcessedArgument<Set<T>, T>","description":"com.github.ajalt.clikt.parameters.arguments.unique","location":"clikt/com.github.ajalt.clikt.parameters.arguments/unique.html","searchKeys":["unique","fun <T : Any> ProcessedArgument<List<T>, T>.unique(): ProcessedArgument<Set<T>, T>","com.github.ajalt.clikt.parameters.arguments.unique"]},{"name":"fun <T : Any> ProcessedArgument<T, T>.default(value: T, defaultForHelp: String = value.toString()): ArgumentDelegate<T>","description":"com.github.ajalt.clikt.parameters.arguments.default","location":"clikt/com.github.ajalt.clikt.parameters.arguments/default.html","searchKeys":["default","fun <T : Any> ProcessedArgument<T, T>.default(value: T, defaultForHelp: String = value.toString()): ArgumentDelegate<T>","com.github.ajalt.clikt.parameters.arguments.default"]},{"name":"fun <T : Any> ProcessedArgument<T, T>.multiple(required: Boolean = false, default: List<T> = emptyList()): ProcessedArgument<List<T>, T>","description":"com.github.ajalt.clikt.parameters.arguments.multiple","location":"clikt/com.github.ajalt.clikt.parameters.arguments/multiple.html","searchKeys":["multiple","fun <T : Any> ProcessedArgument<T, T>.multiple(required: Boolean = false, default: List<T> = emptyList()): ProcessedArgument<List<T>, T>","com.github.ajalt.clikt.parameters.arguments.multiple"]},{"name":"fun <T : Any> ProcessedArgument<T, T>.pair(): ProcessedArgument<Pair<T, T>, T>","description":"com.github.ajalt.clikt.parameters.arguments.pair","location":"clikt/com.github.ajalt.clikt.parameters.arguments/pair.html","searchKeys":["pair","fun <T : Any> ProcessedArgument<T, T>.pair(): ProcessedArgument<Pair<T, T>, T>","com.github.ajalt.clikt.parameters.arguments.pair"]},{"name":"fun <T : Any> ProcessedArgument<T, T>.triple(): ProcessedArgument<Triple<T, T, T>, T>","description":"com.github.ajalt.clikt.parameters.arguments.triple","location":"clikt/com.github.ajalt.clikt.parameters.arguments/triple.html","searchKeys":["triple","fun <T : Any> ProcessedArgument<T, T>.triple(): ProcessedArgument<Triple<T, T, T>, T>","com.github.ajalt.clikt.parameters.arguments.triple"]},{"name":"fun <T : Any> RawArgument.choice(choices: Map<String, T>, ignoreCase: Boolean = false): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun <T : Any> RawArgument.choice(choices: Map<String, T>, ignoreCase: Boolean = false): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun <T : Any> RawArgument.choice(vararg choices: Pair<String, T>, ignoreCase: Boolean = false): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun <T : Any> RawArgument.choice(vararg choices: Pair<String, T>, ignoreCase: Boolean = false): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun <T : Any> RawOption.choice(choices: Map<String, T>, metavar: String = mvar(choices.keys), ignoreCase: Boolean = false): NullableOption<T, T>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun <T : Any> RawOption.choice(choices: Map<String, T>, metavar: String = mvar(choices.keys), ignoreCase: Boolean = false): NullableOption<T, T>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun <T : Any> RawOption.choice(vararg choices: Pair<String, T>, metavar: String = mvar(choices.map { it.first }), ignoreCase: Boolean = false): NullableOption<T, T>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun <T : Any> RawOption.choice(vararg choices: Pair<String, T>, metavar: String = mvar(choices.map { it.first }), ignoreCase: Boolean = false): NullableOption<T, T>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun <T : Any> RawOption.switch(choices: Map<String, T>): NullableOption<T, String>","description":"com.github.ajalt.clikt.parameters.options.switch","location":"clikt/com.github.ajalt.clikt.parameters.options/switch.html","searchKeys":["switch","fun <T : Any> RawOption.switch(choices: Map<String, T>): NullableOption<T, String>","com.github.ajalt.clikt.parameters.options.switch"]},{"name":"fun <T : Any> RawOption.switch(vararg choices: Pair<String, T>): NullableOption<T, String>","description":"com.github.ajalt.clikt.parameters.options.switch","location":"clikt/com.github.ajalt.clikt.parameters.options/switch.html","searchKeys":["switch","fun <T : Any> RawOption.switch(vararg choices: Pair<String, T>): NullableOption<T, String>","com.github.ajalt.clikt.parameters.options.switch"]},{"name":"fun <T : AutoCloseable> Context.registerCloseable(closeable: T): T","description":"com.github.ajalt.clikt.core.registerCloseable","location":"clikt/com.github.ajalt.clikt.core/register-closeable.html","searchKeys":["registerCloseable","fun <T : AutoCloseable> Context.registerCloseable(closeable: T): T","com.github.ajalt.clikt.core.registerCloseable"]},{"name":"fun <T : AutoCloseable> Context.registerJvmCloseable(closeable: T): T","description":"com.github.ajalt.clikt.core.registerJvmCloseable","location":"clikt/com.github.ajalt.clikt.core/register-jvm-closeable.html","searchKeys":["registerJvmCloseable","fun <T : AutoCloseable> Context.registerJvmCloseable(closeable: T): T","com.github.ajalt.clikt.core.registerJvmCloseable"]},{"name":"fun <T : BaseCliktCommand<*>> T.completionOption(vararg names: String = arrayOf(\"--generate-completion\"), help: String = \"\", hidden: Boolean = false): T","description":"com.github.ajalt.clikt.completion.completionOption","location":"clikt/com.github.ajalt.clikt.completion/completion-option.html","searchKeys":["completionOption","fun <T : BaseCliktCommand<*>> T.completionOption(vararg names: String = arrayOf(\"--generate-completion\"), help: String = \"\", hidden: Boolean = false): T","com.github.ajalt.clikt.completion.completionOption"]},{"name":"fun <T : BaseCliktCommand<*>> T.eagerOption(names: Collection<String>, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, action: OptionTransformContext.() -> Unit): T","description":"com.github.ajalt.clikt.parameters.options.eagerOption","location":"clikt/com.github.ajalt.clikt.parameters.options/eager-option.html","searchKeys":["eagerOption","fun <T : BaseCliktCommand<*>> T.eagerOption(names: Collection<String>, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, action: OptionTransformContext.() -> Unit): T","com.github.ajalt.clikt.parameters.options.eagerOption"]},{"name":"fun <T : BaseCliktCommand<*>> T.eagerOption(vararg names: String, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, action: OptionTransformContext.() -> Unit): T","description":"com.github.ajalt.clikt.parameters.options.eagerOption","location":"clikt/com.github.ajalt.clikt.parameters.options/eager-option.html","searchKeys":["eagerOption","fun <T : BaseCliktCommand<*>> T.eagerOption(vararg names: String, help: String = \"\", hidden: Boolean = false, helpTags: Map<String, String> = emptyMap(), groupName: String? = null, action: OptionTransformContext.() -> Unit): T","com.github.ajalt.clikt.parameters.options.eagerOption"]},{"name":"fun <T : BaseCliktCommand<T>, CommandT : T> CommandT.subcommands(commands: Iterable<T>): CommandT","description":"com.github.ajalt.clikt.core.subcommands","location":"clikt/com.github.ajalt.clikt.core/subcommands.html","searchKeys":["subcommands","fun <T : BaseCliktCommand<T>, CommandT : T> CommandT.subcommands(commands: Iterable<T>): CommandT","com.github.ajalt.clikt.core.subcommands"]},{"name":"fun <T : BaseCliktCommand<T>, CommandT : T> CommandT.subcommands(vararg commands: T): CommandT","description":"com.github.ajalt.clikt.core.subcommands","location":"clikt/com.github.ajalt.clikt.core/subcommands.html","searchKeys":["subcommands","fun <T : BaseCliktCommand<T>, CommandT : T> CommandT.subcommands(vararg commands: T): CommandT","com.github.ajalt.clikt.core.subcommands"]},{"name":"fun <T : BaseCliktCommand<T>, U : T> U.context(block: Context.Builder.() -> Unit): U","description":"com.github.ajalt.clikt.core.context","location":"clikt/com.github.ajalt.clikt.core/context.html","searchKeys":["context","fun <T : BaseCliktCommand<T>, U : T> U.context(block: Context.Builder.() -> Unit): U","com.github.ajalt.clikt.core.context"]},{"name":"fun <T : BaseCliktCommand<T>> CommandInvocation<T>.flatten(finalize: Boolean = true): FlatInvocations<T>","description":"com.github.ajalt.clikt.parsers.flatten","location":"clikt/com.github.ajalt.clikt.parsers/flatten.html","searchKeys":["flatten","fun <T : BaseCliktCommand<T>> CommandInvocation<T>.flatten(finalize: Boolean = true): FlatInvocations<T>","com.github.ajalt.clikt.parsers.flatten"]},{"name":"fun <T : BaseCliktCommand<T>> parse(command: T, argv: List<String>): CommandLineParseResult<T>","description":"com.github.ajalt.clikt.parsers.CommandLineParser.parse","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parser/parse.html","searchKeys":["parse","fun <T : BaseCliktCommand<T>> parse(command: T, argv: List<String>): CommandLineParseResult<T>","com.github.ajalt.clikt.parsers.CommandLineParser.parse"]},{"name":"fun <T : Comparable<T>> OptionWithValues<T?, T, T>.restrictTo(min: T? = null, max: T? = null, clamp: Boolean = false): OptionWithValues<T?, T, T>","description":"com.github.ajalt.clikt.parameters.types.restrictTo","location":"clikt/com.github.ajalt.clikt.parameters.types/restrict-to.html","searchKeys":["restrictTo","fun <T : Comparable<T>> OptionWithValues<T?, T, T>.restrictTo(min: T? = null, max: T? = null, clamp: Boolean = false): OptionWithValues<T?, T, T>","com.github.ajalt.clikt.parameters.types.restrictTo"]},{"name":"fun <T : Comparable<T>> OptionWithValues<T?, T, T>.restrictTo(range: ClosedRange<T>, clamp: Boolean = false): OptionWithValues<T?, T, T>","description":"com.github.ajalt.clikt.parameters.types.restrictTo","location":"clikt/com.github.ajalt.clikt.parameters.types/restrict-to.html","searchKeys":["restrictTo","fun <T : Comparable<T>> OptionWithValues<T?, T, T>.restrictTo(range: ClosedRange<T>, clamp: Boolean = false): OptionWithValues<T?, T, T>","com.github.ajalt.clikt.parameters.types.restrictTo"]},{"name":"fun <T : Comparable<T>> ProcessedArgument<T, T>.restrictTo(min: T? = null, max: T? = null, clamp: Boolean = false): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.restrictTo","location":"clikt/com.github.ajalt.clikt.parameters.types/restrict-to.html","searchKeys":["restrictTo","fun <T : Comparable<T>> ProcessedArgument<T, T>.restrictTo(min: T? = null, max: T? = null, clamp: Boolean = false): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.restrictTo"]},{"name":"fun <T : Comparable<T>> ProcessedArgument<T, T>.restrictTo(range: ClosedRange<T>, clamp: Boolean = false): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.restrictTo","location":"clikt/com.github.ajalt.clikt.parameters.types/restrict-to.html","searchKeys":["restrictTo","fun <T : Comparable<T>> ProcessedArgument<T, T>.restrictTo(range: ClosedRange<T>, clamp: Boolean = false): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.restrictTo"]},{"name":"fun <T : OptionGroup> ChoiceGroup<T, T?>.defaultByName(name: String): ChoiceGroup<T, T>","description":"com.github.ajalt.clikt.parameters.groups.defaultByName","location":"clikt/com.github.ajalt.clikt.parameters.groups/default-by-name.html","searchKeys":["defaultByName","fun <T : OptionGroup> ChoiceGroup<T, T?>.defaultByName(name: String): ChoiceGroup<T, T>","com.github.ajalt.clikt.parameters.groups.defaultByName"]},{"name":"fun <T : OptionGroup> ChoiceGroup<T, T?>.required(): ChoiceGroup<T, T>","description":"com.github.ajalt.clikt.parameters.groups.required","location":"clikt/com.github.ajalt.clikt.parameters.groups/required.html","searchKeys":["required","fun <T : OptionGroup> ChoiceGroup<T, T?>.required(): ChoiceGroup<T, T>","com.github.ajalt.clikt.parameters.groups.required"]},{"name":"fun <T : OptionGroup> RawOption.groupChoice(choices: Map<String, T>): ChoiceGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.groupChoice","location":"clikt/com.github.ajalt.clikt.parameters.groups/group-choice.html","searchKeys":["groupChoice","fun <T : OptionGroup> RawOption.groupChoice(choices: Map<String, T>): ChoiceGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.groupChoice"]},{"name":"fun <T : OptionGroup> RawOption.groupChoice(vararg choices: Pair<String, T>): ChoiceGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.groupChoice","location":"clikt/com.github.ajalt.clikt.parameters.groups/group-choice.html","searchKeys":["groupChoice","fun <T : OptionGroup> RawOption.groupChoice(vararg choices: Pair<String, T>): ChoiceGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.groupChoice"]},{"name":"fun <T : OptionGroup> RawOption.groupSwitch(choices: Map<String, T>): ChoiceGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.groupSwitch","location":"clikt/com.github.ajalt.clikt.parameters.groups/group-switch.html","searchKeys":["groupSwitch","fun <T : OptionGroup> RawOption.groupSwitch(choices: Map<String, T>): ChoiceGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.groupSwitch"]},{"name":"fun <T : OptionGroup> RawOption.groupSwitch(vararg choices: Pair<String, T>): ChoiceGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.groupSwitch","location":"clikt/com.github.ajalt.clikt.parameters.groups/group-switch.html","searchKeys":["groupSwitch","fun <T : OptionGroup> RawOption.groupSwitch(vararg choices: Pair<String, T>): ChoiceGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.groupSwitch"]},{"name":"fun <T : OptionGroup> T.cooccurring(): CoOccurringOptionGroup<T, T?>","description":"com.github.ajalt.clikt.parameters.groups.cooccurring","location":"clikt/com.github.ajalt.clikt.parameters.groups/cooccurring.html","searchKeys":["cooccurring","fun <T : OptionGroup> T.cooccurring(): CoOccurringOptionGroup<T, T?>","com.github.ajalt.clikt.parameters.groups.cooccurring"]},{"name":"fun <T, EachT, ValueT> OptionWithValues<List<T>, EachT, ValueT>.unique(): OptionWithValues<Set<T>, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.unique","location":"clikt/com.github.ajalt.clikt.parameters.options/unique.html","searchKeys":["unique","fun <T, EachT, ValueT> OptionWithValues<List<T>, EachT, ValueT>.unique(): OptionWithValues<Set<T>, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.unique"]},{"name":"fun <T> CoreChainedCliktCommand<T>.main(argv: Array<out String>, initial: T): T","description":"com.github.ajalt.clikt.command.main","location":"clikt/com.github.ajalt.clikt.command/main.html","searchKeys":["main","fun <T> CoreChainedCliktCommand<T>.main(argv: Array<out String>, initial: T): T","com.github.ajalt.clikt.command.main"]},{"name":"fun <T> CoreChainedCliktCommand<T>.main(argv: List<String>, initial: T): T","description":"com.github.ajalt.clikt.command.main","location":"clikt/com.github.ajalt.clikt.command/main.html","searchKeys":["main","fun <T> CoreChainedCliktCommand<T>.main(argv: List<String>, initial: T): T","com.github.ajalt.clikt.command.main"]},{"name":"fun <T> CoreChainedCliktCommand<T>.parse(argv: Array<String>, initial: T): T","description":"com.github.ajalt.clikt.command.parse","location":"clikt/com.github.ajalt.clikt.command/parse.html","searchKeys":["parse","fun <T> CoreChainedCliktCommand<T>.parse(argv: Array<String>, initial: T): T","com.github.ajalt.clikt.command.parse"]},{"name":"fun <T> CoreChainedCliktCommand<T>.parse(argv: List<String>, initial: T): T","description":"com.github.ajalt.clikt.command.parse","location":"clikt/com.github.ajalt.clikt.command/parse.html","searchKeys":["parse","fun <T> CoreChainedCliktCommand<T>.parse(argv: List<String>, initial: T): T","com.github.ajalt.clikt.command.parse"]},{"name":"fun <T> ValueWithDefault<T>.withDefault(default: T): ValueWithDefault<T>","description":"com.github.ajalt.clikt.parameters.options.withDefault","location":"clikt/com.github.ajalt.clikt.parameters.options/with-default.html","searchKeys":["withDefault","fun <T> ValueWithDefault<T>.withDefault(default: T): ValueWithDefault<T>","com.github.ajalt.clikt.parameters.options.withDefault"]},{"name":"fun <T> ValueWithDefault<T>.withExplicit(explicit: T): ValueWithDefault<T>","description":"com.github.ajalt.clikt.parameters.options.withExplicit","location":"clikt/com.github.ajalt.clikt.parameters.options/with-explicit.html","searchKeys":["withExplicit","fun <T> ValueWithDefault<T>.withExplicit(explicit: T): ValueWithDefault<T>","com.github.ajalt.clikt.parameters.options.withExplicit"]},{"name":"fun <T> copy(transform: CoOccurringOptionGroupTransform<GroupT, T>): CoOccurringOptionGroup<GroupT, T>","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.copy","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/copy.html","searchKeys":["copy","fun <T> copy(transform: CoOccurringOptionGroupTransform<GroupT, T>): CoOccurringOptionGroup<GroupT, T>","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.copy"]},{"name":"fun <T> copy(transformAll: MutuallyExclusiveOptionsTransform<OptT, T>): MutuallyExclusiveOptions<OptT, T>","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.copy","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/copy.html","searchKeys":["copy","fun <T> copy(transformAll: MutuallyExclusiveOptionsTransform<OptT, T>): MutuallyExclusiveOptions<OptT, T>","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.copy"]},{"name":"fun <ValueT : Any> NullableOption<ValueT, ValueT>.optionalValue(default: ValueT, acceptsUnattachedValue: Boolean = true): NullableOption<ValueT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.optionalValue","location":"clikt/com.github.ajalt.clikt.parameters.options/optional-value.html","searchKeys":["optionalValue","fun <ValueT : Any> NullableOption<ValueT, ValueT>.optionalValue(default: ValueT, acceptsUnattachedValue: Boolean = true): NullableOption<ValueT, ValueT>","com.github.ajalt.clikt.parameters.options.optionalValue"]},{"name":"fun <ValueT : Any> NullableOption<ValueT, ValueT>.optionalValueLazy(acceptsUnattachedValue: Boolean = true, default: () -> ValueT): NullableOption<ValueT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.optionalValueLazy","location":"clikt/com.github.ajalt.clikt.parameters.options/optional-value-lazy.html","searchKeys":["optionalValueLazy","fun <ValueT : Any> NullableOption<ValueT, ValueT>.optionalValueLazy(acceptsUnattachedValue: Boolean = true, default: () -> ValueT): NullableOption<ValueT, ValueT>","com.github.ajalt.clikt.parameters.options.optionalValueLazy"]},{"name":"fun <ValueT> NullableOption<ValueT, ValueT>.pair(): NullableOption<Pair<ValueT, ValueT>, ValueT>","description":"com.github.ajalt.clikt.parameters.options.pair","location":"clikt/com.github.ajalt.clikt.parameters.options/pair.html","searchKeys":["pair","fun <ValueT> NullableOption<ValueT, ValueT>.pair(): NullableOption<Pair<ValueT, ValueT>, ValueT>","com.github.ajalt.clikt.parameters.options.pair"]},{"name":"fun <ValueT> NullableOption<ValueT, ValueT>.triple(): NullableOption<Triple<ValueT, ValueT, ValueT>, ValueT>","description":"com.github.ajalt.clikt.parameters.options.triple","location":"clikt/com.github.ajalt.clikt.parameters.options/triple.html","searchKeys":["triple","fun <ValueT> NullableOption<ValueT, ValueT>.triple(): NullableOption<Triple<ValueT, ValueT, ValueT>, ValueT>","com.github.ajalt.clikt.parameters.options.triple"]},{"name":"fun <ValueT> NullableOption<ValueT, ValueT>.varargValues(min: Int = 1, max: Int = Int.MAX_VALUE): NullableOption<List<ValueT>, ValueT>","description":"com.github.ajalt.clikt.parameters.options.varargValues","location":"clikt/com.github.ajalt.clikt.parameters.options/vararg-values.html","searchKeys":["varargValues","fun <ValueT> NullableOption<ValueT, ValueT>.varargValues(min: Int = 1, max: Int = Int.MAX_VALUE): NullableOption<List<ValueT>, ValueT>","com.github.ajalt.clikt.parameters.options.varargValues"]},{"name":"fun BaseCliktCommand<*>.argument(name: String = \"\", help: String = \"\", helpTags: Map<String, String> = emptyMap(), completionCandidates: CompletionCandidates? = null): RawArgument","description":"com.github.ajalt.clikt.parameters.arguments.argument","location":"clikt/com.github.ajalt.clikt.parameters.arguments/argument.html","searchKeys":["argument","fun BaseCliktCommand<*>.argument(name: String = \"\", help: String = \"\", helpTags: Map<String, String> = emptyMap(), completionCandidates: CompletionCandidates? = null): RawArgument","com.github.ajalt.clikt.parameters.arguments.argument"]},{"name":"fun CoreCliktCommand.main(argv: Array<out String>)","description":"com.github.ajalt.clikt.core.main","location":"clikt/com.github.ajalt.clikt.core/main.html","searchKeys":["main","fun CoreCliktCommand.main(argv: Array<out String>)","com.github.ajalt.clikt.core.main"]},{"name":"fun CoreCliktCommand.main(argv: List<String>)","description":"com.github.ajalt.clikt.core.main","location":"clikt/com.github.ajalt.clikt.core/main.html","searchKeys":["main","fun CoreCliktCommand.main(argv: List<String>)","com.github.ajalt.clikt.core.main"]},{"name":"fun CoreCliktCommand.parse(argv: Array<String>)","description":"com.github.ajalt.clikt.core.parse","location":"clikt/com.github.ajalt.clikt.core/parse.html","searchKeys":["parse","fun CoreCliktCommand.parse(argv: Array<String>)","com.github.ajalt.clikt.core.parse"]},{"name":"fun CoreCliktCommand.parse(argv: List<String>)","description":"com.github.ajalt.clikt.core.parse","location":"clikt/com.github.ajalt.clikt.core/parse.html","searchKeys":["parse","fun CoreCliktCommand.parse(argv: List<String>)","com.github.ajalt.clikt.core.parse"]},{"name":"fun NullableOption<InputStream, InputStream>.defaultStdin(): OptionWithValues<InputStream, InputStream, InputStream>","description":"com.github.ajalt.clikt.parameters.types.defaultStdin","location":"clikt/com.github.ajalt.clikt.parameters.types/default-stdin.html","searchKeys":["defaultStdin","fun NullableOption<InputStream, InputStream>.defaultStdin(): OptionWithValues<InputStream, InputStream, InputStream>","com.github.ajalt.clikt.parameters.types.defaultStdin"]},{"name":"fun NullableOption<OutputStream, OutputStream>.defaultStdout(): OptionWithValues<OutputStream, OutputStream, OutputStream>","description":"com.github.ajalt.clikt.parameters.types.defaultStdout","location":"clikt/com.github.ajalt.clikt.parameters.types/default-stdout.html","searchKeys":["defaultStdout","fun NullableOption<OutputStream, OutputStream>.defaultStdout(): OptionWithValues<OutputStream, OutputStream, OutputStream>","com.github.ajalt.clikt.parameters.types.defaultStdout"]},{"name":"fun ParameterHolder.option(vararg names: String, help: String = \"\", metavar: String? = null, hidden: Boolean = false, envvar: String? = null, helpTags: Map<String, String> = emptyMap(), completionCandidates: CompletionCandidates? = null, valueSourceKey: String? = null, eager: Boolean = false): RawOption","description":"com.github.ajalt.clikt.parameters.options.option","location":"clikt/com.github.ajalt.clikt.parameters.options/option.html","searchKeys":["option","fun ParameterHolder.option(vararg names: String, help: String = \"\", metavar: String? = null, hidden: Boolean = false, envvar: String? = null, helpTags: Map<String, String> = emptyMap(), completionCandidates: CompletionCandidates? = null, valueSourceKey: String? = null, eager: Boolean = false): RawOption","com.github.ajalt.clikt.parameters.options.option"]},{"name":"fun ProcessedArgument<InputStream, InputStream>.defaultStdin(): ArgumentDelegate<InputStream>","description":"com.github.ajalt.clikt.parameters.types.defaultStdin","location":"clikt/com.github.ajalt.clikt.parameters.types/default-stdin.html","searchKeys":["defaultStdin","fun ProcessedArgument<InputStream, InputStream>.defaultStdin(): ArgumentDelegate<InputStream>","com.github.ajalt.clikt.parameters.types.defaultStdin"]},{"name":"fun ProcessedArgument<OutputStream, OutputStream>.defaultStdout(): ArgumentDelegate<OutputStream>","description":"com.github.ajalt.clikt.parameters.types.defaultStdout","location":"clikt/com.github.ajalt.clikt.parameters.types/default-stdout.html","searchKeys":["defaultStdout","fun ProcessedArgument<OutputStream, OutputStream>.defaultStdout(): ArgumentDelegate<OutputStream>","com.github.ajalt.clikt.parameters.types.defaultStdout"]},{"name":"fun RawArgument.boolean(): ProcessedArgument<Boolean, Boolean>","description":"com.github.ajalt.clikt.parameters.types.boolean","location":"clikt/com.github.ajalt.clikt.parameters.types/boolean.html","searchKeys":["boolean","fun RawArgument.boolean(): ProcessedArgument<Boolean, Boolean>","com.github.ajalt.clikt.parameters.types.boolean"]},{"name":"fun RawArgument.choice(vararg choices: String, ignoreCase: Boolean = false): ProcessedArgument<String, String>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun RawArgument.choice(vararg choices: String, ignoreCase: Boolean = false): ProcessedArgument<String, String>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun RawArgument.double(): ProcessedArgument<Double, Double>","description":"com.github.ajalt.clikt.parameters.types.double","location":"clikt/com.github.ajalt.clikt.parameters.types/double.html","searchKeys":["double","fun RawArgument.double(): ProcessedArgument<Double, Double>","com.github.ajalt.clikt.parameters.types.double"]},{"name":"fun RawArgument.file(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true): ProcessedArgument<File, File>","description":"com.github.ajalt.clikt.parameters.types.file","location":"clikt/com.github.ajalt.clikt.parameters.types/file.html","searchKeys":["file","fun RawArgument.file(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true): ProcessedArgument<File, File>","com.github.ajalt.clikt.parameters.types.file"]},{"name":"fun RawArgument.float(): ProcessedArgument<Float, Float>","description":"com.github.ajalt.clikt.parameters.types.float","location":"clikt/com.github.ajalt.clikt.parameters.types/float.html","searchKeys":["float","fun RawArgument.float(): ProcessedArgument<Float, Float>","com.github.ajalt.clikt.parameters.types.float"]},{"name":"fun RawArgument.inputStream(fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<InputStream, InputStream>","description":"com.github.ajalt.clikt.parameters.types.inputStream","location":"clikt/com.github.ajalt.clikt.parameters.types/input-stream.html","searchKeys":["inputStream","fun RawArgument.inputStream(fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<InputStream, InputStream>","com.github.ajalt.clikt.parameters.types.inputStream"]},{"name":"fun RawArgument.int(): ProcessedArgument<Int, Int>","description":"com.github.ajalt.clikt.parameters.types.int","location":"clikt/com.github.ajalt.clikt.parameters.types/int.html","searchKeys":["int","fun RawArgument.int(): ProcessedArgument<Int, Int>","com.github.ajalt.clikt.parameters.types.int"]},{"name":"fun RawArgument.long(): ProcessedArgument<Long, Long>","description":"com.github.ajalt.clikt.parameters.types.long","location":"clikt/com.github.ajalt.clikt.parameters.types/long.html","searchKeys":["long","fun RawArgument.long(): ProcessedArgument<Long, Long>","com.github.ajalt.clikt.parameters.types.long"]},{"name":"fun RawArgument.outputStream(createIfNotExist: Boolean = true, truncateExisting: Boolean = false, fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<OutputStream, OutputStream>","description":"com.github.ajalt.clikt.parameters.types.outputStream","location":"clikt/com.github.ajalt.clikt.parameters.types/output-stream.html","searchKeys":["outputStream","fun RawArgument.outputStream(createIfNotExist: Boolean = true, truncateExisting: Boolean = false, fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<OutputStream, OutputStream>","com.github.ajalt.clikt.parameters.types.outputStream"]},{"name":"fun RawArgument.path(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true, fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<Path, Path>","description":"com.github.ajalt.clikt.parameters.types.path","location":"clikt/com.github.ajalt.clikt.parameters.types/path.html","searchKeys":["path","fun RawArgument.path(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true, fileSystem: FileSystem = FileSystems.getDefault()): ProcessedArgument<Path, Path>","com.github.ajalt.clikt.parameters.types.path"]},{"name":"fun RawArgument.uint(): ProcessedArgument<UInt, UInt>","description":"com.github.ajalt.clikt.parameters.types.uint","location":"clikt/com.github.ajalt.clikt.parameters.types/uint.html","searchKeys":["uint","fun RawArgument.uint(): ProcessedArgument<UInt, UInt>","com.github.ajalt.clikt.parameters.types.uint"]},{"name":"fun RawArgument.ulong(): ProcessedArgument<ULong, ULong>","description":"com.github.ajalt.clikt.parameters.types.ulong","location":"clikt/com.github.ajalt.clikt.parameters.types/ulong.html","searchKeys":["ulong","fun RawArgument.ulong(): ProcessedArgument<ULong, ULong>","com.github.ajalt.clikt.parameters.types.ulong"]},{"name":"fun RawOption.associate(delimiter: String = \"=\"): OptionWithValues<Map<String, String>, Pair<String, String>, Pair<String, String>>","description":"com.github.ajalt.clikt.parameters.options.associate","location":"clikt/com.github.ajalt.clikt.parameters.options/associate.html","searchKeys":["associate","fun RawOption.associate(delimiter: String = \"=\"): OptionWithValues<Map<String, String>, Pair<String, String>, Pair<String, String>>","com.github.ajalt.clikt.parameters.options.associate"]},{"name":"fun RawOption.boolean(): NullableOption<Boolean, Boolean>","description":"com.github.ajalt.clikt.parameters.types.boolean","location":"clikt/com.github.ajalt.clikt.parameters.types/boolean.html","searchKeys":["boolean","fun RawOption.boolean(): NullableOption<Boolean, Boolean>","com.github.ajalt.clikt.parameters.types.boolean"]},{"name":"fun RawOption.choice(vararg choices: String, metavar: String = mvar(choices.asIterable()), ignoreCase: Boolean = false): NullableOption<String, String>","description":"com.github.ajalt.clikt.parameters.types.choice","location":"clikt/com.github.ajalt.clikt.parameters.types/choice.html","searchKeys":["choice","fun RawOption.choice(vararg choices: String, metavar: String = mvar(choices.asIterable()), ignoreCase: Boolean = false): NullableOption<String, String>","com.github.ajalt.clikt.parameters.types.choice"]},{"name":"fun RawOption.counted(limit: Int = Int.MAX_VALUE, clamp: Boolean = true): OptionWithValues<Int, Int, Int>","description":"com.github.ajalt.clikt.parameters.options.counted","location":"clikt/com.github.ajalt.clikt.parameters.options/counted.html","searchKeys":["counted","fun RawOption.counted(limit: Int = Int.MAX_VALUE, clamp: Boolean = true): OptionWithValues<Int, Int, Int>","com.github.ajalt.clikt.parameters.options.counted"]},{"name":"fun RawOption.double(): OptionWithValues<Double?, Double, Double>","description":"com.github.ajalt.clikt.parameters.types.double","location":"clikt/com.github.ajalt.clikt.parameters.types/double.html","searchKeys":["double","fun RawOption.double(): OptionWithValues<Double?, Double, Double>","com.github.ajalt.clikt.parameters.types.double"]},{"name":"fun RawOption.file(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true): NullableOption<File, File>","description":"com.github.ajalt.clikt.parameters.types.file","location":"clikt/com.github.ajalt.clikt.parameters.types/file.html","searchKeys":["file","fun RawOption.file(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true): NullableOption<File, File>","com.github.ajalt.clikt.parameters.types.file"]},{"name":"fun RawOption.flag(vararg secondaryNames: String, default: Boolean = false, defaultForHelp: String = \"\"): OptionWithValues<Boolean, Boolean, Boolean>","description":"com.github.ajalt.clikt.parameters.options.flag","location":"clikt/com.github.ajalt.clikt.parameters.options/flag.html","searchKeys":["flag","fun RawOption.flag(vararg secondaryNames: String, default: Boolean = false, defaultForHelp: String = \"\"): OptionWithValues<Boolean, Boolean, Boolean>","com.github.ajalt.clikt.parameters.options.flag"]},{"name":"fun RawOption.float(): OptionWithValues<Float?, Float, Float>","description":"com.github.ajalt.clikt.parameters.types.float","location":"clikt/com.github.ajalt.clikt.parameters.types/float.html","searchKeys":["float","fun RawOption.float(): OptionWithValues<Float?, Float, Float>","com.github.ajalt.clikt.parameters.types.float"]},{"name":"fun RawOption.inputStream(fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<InputStream, InputStream>","description":"com.github.ajalt.clikt.parameters.types.inputStream","location":"clikt/com.github.ajalt.clikt.parameters.types/input-stream.html","searchKeys":["inputStream","fun RawOption.inputStream(fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<InputStream, InputStream>","com.github.ajalt.clikt.parameters.types.inputStream"]},{"name":"fun RawOption.int(acceptsValueWithoutName: Boolean = false): NullableOption<Int, Int>","description":"com.github.ajalt.clikt.parameters.types.int","location":"clikt/com.github.ajalt.clikt.parameters.types/int.html","searchKeys":["int","fun RawOption.int(acceptsValueWithoutName: Boolean = false): NullableOption<Int, Int>","com.github.ajalt.clikt.parameters.types.int"]},{"name":"fun RawOption.long(acceptsValueWithoutName: Boolean = false): NullableOption<Long, Long>","description":"com.github.ajalt.clikt.parameters.types.long","location":"clikt/com.github.ajalt.clikt.parameters.types/long.html","searchKeys":["long","fun RawOption.long(acceptsValueWithoutName: Boolean = false): NullableOption<Long, Long>","com.github.ajalt.clikt.parameters.types.long"]},{"name":"fun RawOption.nullableFlag(vararg secondaryNames: String): NullableOption<Boolean, Boolean>","description":"com.github.ajalt.clikt.parameters.options.nullableFlag","location":"clikt/com.github.ajalt.clikt.parameters.options/nullable-flag.html","searchKeys":["nullableFlag","fun RawOption.nullableFlag(vararg secondaryNames: String): NullableOption<Boolean, Boolean>","com.github.ajalt.clikt.parameters.options.nullableFlag"]},{"name":"fun RawOption.outputStream(createIfNotExist: Boolean = true, truncateExisting: Boolean = false, fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<OutputStream, OutputStream>","description":"com.github.ajalt.clikt.parameters.types.outputStream","location":"clikt/com.github.ajalt.clikt.parameters.types/output-stream.html","searchKeys":["outputStream","fun RawOption.outputStream(createIfNotExist: Boolean = true, truncateExisting: Boolean = false, fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<OutputStream, OutputStream>","com.github.ajalt.clikt.parameters.types.outputStream"]},{"name":"fun RawOption.path(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true, fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<Path, Path>","description":"com.github.ajalt.clikt.parameters.types.path","location":"clikt/com.github.ajalt.clikt.parameters.types/path.html","searchKeys":["path","fun RawOption.path(mustExist: Boolean = false, canBeFile: Boolean = true, canBeDir: Boolean = true, mustBeWritable: Boolean = false, mustBeReadable: Boolean = false, canBeSymlink: Boolean = true, fileSystem: FileSystem = FileSystems.getDefault()): NullableOption<Path, Path>","com.github.ajalt.clikt.parameters.types.path"]},{"name":"fun RawOption.splitPair(delimiter: String = \"=\"): NullableOption<Pair<String, String>, Pair<String, String>>","description":"com.github.ajalt.clikt.parameters.options.splitPair","location":"clikt/com.github.ajalt.clikt.parameters.options/split-pair.html","searchKeys":["splitPair","fun RawOption.splitPair(delimiter: String = \"=\"): NullableOption<Pair<String, String>, Pair<String, String>>","com.github.ajalt.clikt.parameters.options.splitPair"]},{"name":"fun RawOption.uint(acceptsValueWithoutName: Boolean = false): NullableOption<UInt, UInt>","description":"com.github.ajalt.clikt.parameters.types.uint","location":"clikt/com.github.ajalt.clikt.parameters.types/uint.html","searchKeys":["uint","fun RawOption.uint(acceptsValueWithoutName: Boolean = false): NullableOption<UInt, UInt>","com.github.ajalt.clikt.parameters.types.uint"]},{"name":"fun RawOption.ulong(acceptsValueWithoutName: Boolean = false): NullableOption<ULong, ULong>","description":"com.github.ajalt.clikt.parameters.types.ulong","location":"clikt/com.github.ajalt.clikt.parameters.types/ulong.html","searchKeys":["ulong","fun RawOption.ulong(acceptsValueWithoutName: Boolean = false): NullableOption<ULong, ULong>","com.github.ajalt.clikt.parameters.types.ulong"]},{"name":"fun TransformContext.message(message: String)","description":"com.github.ajalt.clikt.parameters.transform.message","location":"clikt/com.github.ajalt.clikt.parameters.transform/message.html","searchKeys":["message","fun TransformContext.message(message: String)","com.github.ajalt.clikt.parameters.transform.message"]},{"name":"fun buildOrNull(errors: List<UsageError>): UsageError?","description":"com.github.ajalt.clikt.core.MultiUsageError.Companion.buildOrNull","location":"clikt/com.github.ajalt.clikt.core/-multi-usage-error/-companion/build-or-null.html","searchKeys":["buildOrNull","fun buildOrNull(errors: List<UsageError>): UsageError?","com.github.ajalt.clikt.core.MultiUsageError.Companion.buildOrNull"]},{"name":"fun callOnClose(closeable: () -> Unit)","description":"com.github.ajalt.clikt.core.Context.callOnClose","location":"clikt/com.github.ajalt.clikt.core/-context/call-on-close.html","searchKeys":["callOnClose","fun callOnClose(closeable: () -> Unit)","com.github.ajalt.clikt.core.Context.callOnClose"]},{"name":"fun close()","description":"com.github.ajalt.clikt.core.Context.close","location":"clikt/com.github.ajalt.clikt.core/-context/close.html","searchKeys":["close","fun close()","com.github.ajalt.clikt.core.Context.close"]},{"name":"fun commandNameWithParents(): List<String>","description":"com.github.ajalt.clikt.core.Context.commandNameWithParents","location":"clikt/com.github.ajalt.clikt.core/-context/command-name-with-parents.html","searchKeys":["commandNameWithParents","fun commandNameWithParents(): List<String>","com.github.ajalt.clikt.core.Context.commandNameWithParents"]},{"name":"fun configureContext(block: Context.Builder.() -> Unit)","description":"com.github.ajalt.clikt.core.BaseCliktCommand.configureContext","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/configure-context.html","searchKeys":["configureContext","fun configureContext(block: Context.Builder.() -> Unit)","com.github.ajalt.clikt.core.BaseCliktCommand.configureContext"]},{"name":"fun echo()","description":"com.github.ajalt.clikt.core.BaseCliktCommand.echo","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/echo.html","searchKeys":["echo","fun echo()","com.github.ajalt.clikt.core.BaseCliktCommand.echo"]},{"name":"fun echo(message: Any?, trailingNewline: Boolean = true, err: Boolean = false)","description":"com.github.ajalt.clikt.core.BaseCliktCommand.echo","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/echo.html","searchKeys":["echo","fun echo(message: Any?, trailingNewline: Boolean = true, err: Boolean = false)","com.github.ajalt.clikt.core.BaseCliktCommand.echo"]},{"name":"fun echoFormattedHelp(error: CliktError? = null)","description":"com.github.ajalt.clikt.core.BaseCliktCommand.echoFormattedHelp","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/echo-formatted-help.html","searchKeys":["echoFormattedHelp","fun echoFormattedHelp(error: CliktError? = null)","com.github.ajalt.clikt.core.BaseCliktCommand.echoFormattedHelp"]},{"name":"fun envvarKey(): (Context, Option) -> String","description":"com.github.ajalt.clikt.sources.ValueSource.Companion.envvarKey","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-companion/envvar-key.html","searchKeys":["envvarKey","fun envvarKey(): (Context, Option) -> String","com.github.ajalt.clikt.sources.ValueSource.Companion.envvarKey"]},{"name":"fun fail(message: String = \"\"): Nothing","description":"com.github.ajalt.clikt.core.Context.fail","location":"clikt/com.github.ajalt.clikt.core/-context/fail.html","searchKeys":["fail","fun fail(message: String = \"\"): Nothing","com.github.ajalt.clikt.core.Context.fail"]},{"name":"fun finalizeCommand(invocation: CommandInvocation<*>)","description":"com.github.ajalt.clikt.parsers.CommandLineParser.finalizeCommand","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parser/finalize-command.html","searchKeys":["finalizeCommand","fun finalizeCommand(invocation: CommandInvocation<*>)","com.github.ajalt.clikt.parsers.CommandLineParser.finalizeCommand"]},{"name":"fun finalizeEagerOptions(invocation: CommandInvocation<*>)","description":"com.github.ajalt.clikt.parsers.CommandLineParser.finalizeEagerOptions","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parser/finalize-eager-options.html","searchKeys":["finalizeEagerOptions","fun finalizeEagerOptions(invocation: CommandInvocation<*>)","com.github.ajalt.clikt.parsers.CommandLineParser.finalizeEagerOptions"]},{"name":"fun findRoot(): Context","description":"com.github.ajalt.clikt.core.Context.findRoot","location":"clikt/com.github.ajalt.clikt.core/-context/find-root.html","searchKeys":["findRoot","fun findRoot(): Context","com.github.ajalt.clikt.core.Context.findRoot"]},{"name":"fun from(file: File, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource.from","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/from.html","searchKeys":["from","fun from(file: File, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource.from"]},{"name":"fun from(file: Path, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource.from","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/from.html","searchKeys":["from","fun from(file: Path, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource.from"]},{"name":"fun from(file: String, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource.from","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/from.html","searchKeys":["from","fun from(file: String, requireValid: Boolean = false, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource.from"]},{"name":"fun from(properties: Properties, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource.from","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/from.html","searchKeys":["from","fun from(properties: Properties, getKey: (Context, Option) -> String = ValueSource.getKey(joinSubcommands = \".\")): ValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource.from"]},{"name":"fun fromStdout(command: String): CompletionCandidates.Custom","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Companion.fromStdout","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-companion/from-stdout.html","searchKeys":["fromStdout","fun fromStdout(command: String): CompletionCandidates.Custom","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Companion.fromStdout"]},{"name":"fun generateCompletionForCommand(command: BaseCliktCommand<*>, shell: String): String","description":"com.github.ajalt.clikt.completion.CompletionGenerator.generateCompletionForCommand","location":"clikt/com.github.ajalt.clikt.completion/-completion-generator/generate-completion-for-command.html","searchKeys":["generateCompletionForCommand","fun generateCompletionForCommand(command: BaseCliktCommand<*>, shell: String): String","com.github.ajalt.clikt.completion.CompletionGenerator.generateCompletionForCommand"]},{"name":"fun getFormattedHelp(error: CliktError? = null): String?","description":"com.github.ajalt.clikt.core.BaseCliktCommand.getFormattedHelp","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/get-formatted-help.html","searchKeys":["getFormattedHelp","fun getFormattedHelp(error: CliktError? = null): String?","com.github.ajalt.clikt.core.BaseCliktCommand.getFormattedHelp"]},{"name":"fun getKey(prefix: String = \"\", joinSubcommands: String? = null, uppercase: Boolean = false, replaceDashes: String = \"-\"): (Context, Option) -> String","description":"com.github.ajalt.clikt.sources.ValueSource.Companion.getKey","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-companion/get-key.html","searchKeys":["getKey","fun getKey(prefix: String = \"\", joinSubcommands: String? = null, uppercase: Boolean = false, replaceDashes: String = \"-\"): (Context, Option) -> String","com.github.ajalt.clikt.sources.ValueSource.Companion.getKey"]},{"name":"fun issueMessage(message: String)","description":"com.github.ajalt.clikt.core.BaseCliktCommand.issueMessage","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/issue-message.html","searchKeys":["issueMessage","fun issueMessage(message: String)","com.github.ajalt.clikt.core.BaseCliktCommand.issueMessage"]},{"name":"fun just(value: Any?): List<ValueSource.Invocation>","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion.just","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/-companion/just.html","searchKeys":["just","fun just(value: Any?): List<ValueSource.Invocation>","com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion.just"]},{"name":"fun name(option: Option): String","description":"com.github.ajalt.clikt.sources.ValueSource.Companion.name","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-companion/name.html","searchKeys":["name","fun name(option: Option): String","com.github.ajalt.clikt.sources.ValueSource.Companion.name"]},{"name":"fun parentNames(): List<String>","description":"com.github.ajalt.clikt.core.Context.parentNames","location":"clikt/com.github.ajalt.clikt.core/-context/parent-names.html","searchKeys":["parentNames","fun parentNames(): List<String>","com.github.ajalt.clikt.core.Context.parentNames"]},{"name":"fun registerArgument(argument: Argument)","description":"com.github.ajalt.clikt.core.BaseCliktCommand.registerArgument","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/register-argument.html","searchKeys":["registerArgument","fun registerArgument(argument: Argument)","com.github.ajalt.clikt.core.BaseCliktCommand.registerArgument"]},{"name":"fun registerOption(option: Option)","description":"com.github.ajalt.clikt.core.BaseCliktCommand.registerOption","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/register-option.html","searchKeys":["registerOption","fun registerOption(option: Option)","com.github.ajalt.clikt.core.BaseCliktCommand.registerOption"]},{"name":"fun registerOptionGroup(group: ParameterGroup)","description":"com.github.ajalt.clikt.core.BaseCliktCommand.registerOptionGroup","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/register-option-group.html","searchKeys":["registerOptionGroup","fun registerOptionGroup(group: ParameterGroup)","com.github.ajalt.clikt.core.BaseCliktCommand.registerOptionGroup"]},{"name":"fun registeredArguments(): List<Argument>","description":"com.github.ajalt.clikt.core.BaseCliktCommand.registeredArguments","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/registered-arguments.html","searchKeys":["registeredArguments","fun registeredArguments(): List<Argument>","com.github.ajalt.clikt.core.BaseCliktCommand.registeredArguments"]},{"name":"fun registeredOptions(): List<Option>","description":"com.github.ajalt.clikt.core.BaseCliktCommand.registeredOptions","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/registered-options.html","searchKeys":["registeredOptions","fun registeredOptions(): List<Option>","com.github.ajalt.clikt.core.BaseCliktCommand.registeredOptions"]},{"name":"fun registeredParameterGroups(): List<ParameterGroup>","description":"com.github.ajalt.clikt.core.BaseCliktCommand.registeredParameterGroups","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/registered-parameter-groups.html","searchKeys":["registeredParameterGroups","fun registeredParameterGroups(): List<ParameterGroup>","com.github.ajalt.clikt.core.BaseCliktCommand.registeredParameterGroups"]},{"name":"fun registeredSubcommandNames(): List<String>","description":"com.github.ajalt.clikt.core.BaseCliktCommand.registeredSubcommandNames","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/registered-subcommand-names.html","searchKeys":["registeredSubcommandNames","fun registeredSubcommandNames(): List<String>","com.github.ajalt.clikt.core.BaseCliktCommand.registeredSubcommandNames"]},{"name":"fun registeredSubcommands(): List<T>","description":"com.github.ajalt.clikt.core.BaseCliktCommand.registeredSubcommands","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/registered-subcommands.html","searchKeys":["registeredSubcommands","fun registeredSubcommands(): List<T>","com.github.ajalt.clikt.core.BaseCliktCommand.registeredSubcommands"]},{"name":"fun resetContext(parent: Context? = null): Context","description":"com.github.ajalt.clikt.core.BaseCliktCommand.resetContext","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/reset-context.html","searchKeys":["resetContext","fun resetContext(parent: Context? = null): Context","com.github.ajalt.clikt.core.BaseCliktCommand.resetContext"]},{"name":"fun tokenize(commandLine: String, filename: String = \"\", localization: Localization = defaultLocalization): List<String>","description":"com.github.ajalt.clikt.parsers.CommandLineParser.tokenize","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parser/tokenize.html","searchKeys":["tokenize","fun tokenize(commandLine: String, filename: String = \"\", localization: Localization = defaultLocalization): List<String>","com.github.ajalt.clikt.parsers.CommandLineParser.tokenize"]},{"name":"fun value(value: Any?): ValueSource.Invocation","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion.value","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/-companion/value.html","searchKeys":["value","fun value(value: Any?): ValueSource.Invocation","com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion.value"]},{"name":"fun valueOf(value: String): CompletionCandidates.Custom.ShellType","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.valueOf","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CompletionCandidates.Custom.ShellType","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.valueOf"]},{"name":"fun valueSources(vararg sources: ValueSource)","description":"com.github.ajalt.clikt.core.Context.Builder.valueSources","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/value-sources.html","searchKeys":["valueSources","fun valueSources(vararg sources: ValueSource)","com.github.ajalt.clikt.core.Context.Builder.valueSources"]},{"name":"fun values(): Array<CompletionCandidates.Custom.ShellType>","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.values","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/values.html","searchKeys":["values","fun values(): Array<CompletionCandidates.Custom.ShellType>","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.values"]},{"name":"inline fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.check(crossinline lazyMessage: (AllT & Any) -> String = { it.toString() }, crossinline validator: (AllT & Any) -> Boolean): OptionDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.options.check","location":"clikt/com.github.ajalt.clikt.parameters.options/check.html","searchKeys":["check","inline fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.check(crossinline lazyMessage: (AllT & Any) -> String = { it.toString() }, crossinline validator: (AllT & Any) -> Boolean): OptionDelegate<AllT>","com.github.ajalt.clikt.parameters.options.check"]},{"name":"inline fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.check(message: String, crossinline validator: (AllT & Any) -> Boolean): OptionDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.options.check","location":"clikt/com.github.ajalt.clikt.parameters.options/check.html","searchKeys":["check","inline fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.check(message: String, crossinline validator: (AllT & Any) -> Boolean): OptionDelegate<AllT>","com.github.ajalt.clikt.parameters.options.check"]},{"name":"inline fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.validate(crossinline validator: OptionValidator<AllT & Any>): OptionDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.options.validate","location":"clikt/com.github.ajalt.clikt.parameters.options/validate.html","searchKeys":["validate","inline fun <AllT, EachT, ValueT> OptionWithValues<AllT, EachT, ValueT>.validate(crossinline validator: OptionValidator<AllT & Any>): OptionDelegate<AllT>","com.github.ajalt.clikt.parameters.options.validate"]},{"name":"inline fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.check(crossinline lazyMessage: (AllT & Any) -> String = { it.toString() }, crossinline validator: (AllT & Any) -> Boolean): ArgumentDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.arguments.check","location":"clikt/com.github.ajalt.clikt.parameters.arguments/check.html","searchKeys":["check","inline fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.check(crossinline lazyMessage: (AllT & Any) -> String = { it.toString() }, crossinline validator: (AllT & Any) -> Boolean): ArgumentDelegate<AllT>","com.github.ajalt.clikt.parameters.arguments.check"]},{"name":"inline fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.check(message: String, crossinline validator: (AllT & Any) -> Boolean): ArgumentDelegate<AllT>","description":"com.github.ajalt.clikt.parameters.arguments.check","location":"clikt/com.github.ajalt.clikt.parameters.arguments/check.html","searchKeys":["check","inline fun <AllT, ValueT> ProcessedArgument<AllT, ValueT>.check(message: String, crossinline validator: (AllT & Any) -> Boolean): ArgumentDelegate<AllT>","com.github.ajalt.clikt.parameters.arguments.check"]},{"name":"inline fun <EachT, ValueT> NullableOption<EachT, ValueT>.defaultLazy(defaultForHelp: String = \"\", crossinline value: () -> EachT): OptionWithValues<EachT, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.defaultLazy","location":"clikt/com.github.ajalt.clikt.parameters.options/default-lazy.html","searchKeys":["defaultLazy","inline fun <EachT, ValueT> NullableOption<EachT, ValueT>.defaultLazy(defaultForHelp: String = \"\", crossinline value: () -> EachT): OptionWithValues<EachT, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.defaultLazy"]},{"name":"inline fun <InT : Any, ValueT : Any> NullableOption<InT, InT>.convert(metavar: String, completionCandidates: CompletionCandidates? = null, crossinline conversion: ValueConverter<InT, ValueT>): NullableOption<ValueT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.convert","location":"clikt/com.github.ajalt.clikt.parameters.options/convert.html","searchKeys":["convert","inline fun <InT : Any, ValueT : Any> NullableOption<InT, InT>.convert(metavar: String, completionCandidates: CompletionCandidates? = null, crossinline conversion: ValueConverter<InT, ValueT>): NullableOption<ValueT, ValueT>","com.github.ajalt.clikt.parameters.options.convert"]},{"name":"inline fun <InT : Any, ValueT : Any> NullableOption<InT, InT>.convert(noinline metavar: Context.() -> String = { localization.defaultMetavar() }, completionCandidates: CompletionCandidates? = null, crossinline conversion: ValueConverter<InT, ValueT>): NullableOption<ValueT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.convert","location":"clikt/com.github.ajalt.clikt.parameters.options/convert.html","searchKeys":["convert","inline fun <InT : Any, ValueT : Any> NullableOption<InT, InT>.convert(noinline metavar: Context.() -> String = { localization.defaultMetavar() }, completionCandidates: CompletionCandidates? = null, crossinline conversion: ValueConverter<InT, ValueT>): NullableOption<ValueT, ValueT>","com.github.ajalt.clikt.parameters.options.convert"]},{"name":"inline fun <InT : Any, ValueT : Any> ProcessedArgument<InT, InT>.convert(completionCandidates: CompletionCandidates? = explicitCompletionCandidates, crossinline conversion: ArgValueConverter<InT, ValueT>): ProcessedArgument<ValueT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.convert","location":"clikt/com.github.ajalt.clikt.parameters.arguments/convert.html","searchKeys":["convert","inline fun <InT : Any, ValueT : Any> ProcessedArgument<InT, InT>.convert(completionCandidates: CompletionCandidates? = explicitCompletionCandidates, crossinline conversion: ArgValueConverter<InT, ValueT>): ProcessedArgument<ValueT, ValueT>","com.github.ajalt.clikt.parameters.arguments.convert"]},{"name":"inline fun <K, V> RawOption.associate(delimiter: String = \"=\", crossinline transform: (Pair<String, String>) -> Pair<K, V>): OptionWithValues<Map<K, V>, Pair<K, V>, Pair<K, V>>","description":"com.github.ajalt.clikt.parameters.options.associate","location":"clikt/com.github.ajalt.clikt.parameters.options/associate.html","searchKeys":["associate","inline fun <K, V> RawOption.associate(delimiter: String = \"=\", crossinline transform: (Pair<String, String>) -> Pair<K, V>): OptionWithValues<Map<K, V>, Pair<K, V>, Pair<K, V>>","com.github.ajalt.clikt.parameters.options.associate"]},{"name":"inline fun <K> RawOption.associateBy(delimiter: String = \"=\", crossinline keySelector: (String) -> K): OptionWithValues<Map<K, String>, Pair<K, String>, Pair<K, String>>","description":"com.github.ajalt.clikt.parameters.options.associateBy","location":"clikt/com.github.ajalt.clikt.parameters.options/associate-by.html","searchKeys":["associateBy","inline fun <K> RawOption.associateBy(delimiter: String = \"=\", crossinline keySelector: (String) -> K): OptionWithValues<Map<K, String>, Pair<K, String>, Pair<K, String>>","com.github.ajalt.clikt.parameters.options.associateBy"]},{"name":"inline fun <OutT> OptionWithValues<Boolean, Boolean, Boolean>.convert(crossinline conversion: FlagConverter<Boolean, OutT>): OptionWithValues<OutT, Boolean, Boolean>","description":"com.github.ajalt.clikt.parameters.options.convert","location":"clikt/com.github.ajalt.clikt.parameters.options/convert.html","searchKeys":["convert","inline fun <OutT> OptionWithValues<Boolean, Boolean, Boolean>.convert(crossinline conversion: FlagConverter<Boolean, OutT>): OptionWithValues<OutT, Boolean, Boolean>","com.github.ajalt.clikt.parameters.options.convert"]},{"name":"inline fun <T : Any> BaseCliktCommand<*>.findObject(key: String = Context.DEFAULT_OBJ_KEY): ReadOnlyProperty<BaseCliktCommand<*>, T?>","description":"com.github.ajalt.clikt.core.findObject","location":"clikt/com.github.ajalt.clikt.core/find-object.html","searchKeys":["findObject","inline fun <T : Any> BaseCliktCommand<*>.findObject(key: String = Context.DEFAULT_OBJ_KEY): ReadOnlyProperty<BaseCliktCommand<*>, T?>","com.github.ajalt.clikt.core.findObject"]},{"name":"inline fun <T : Any> BaseCliktCommand<*>.findOrSetObject(key: String = Context.DEFAULT_OBJ_KEY, crossinline default: () -> T): ReadOnlyProperty<BaseCliktCommand<*>, T>","description":"com.github.ajalt.clikt.core.findOrSetObject","location":"clikt/com.github.ajalt.clikt.core/find-or-set-object.html","searchKeys":["findOrSetObject","inline fun <T : Any> BaseCliktCommand<*>.findOrSetObject(key: String = Context.DEFAULT_OBJ_KEY, crossinline default: () -> T): ReadOnlyProperty<BaseCliktCommand<*>, T>","com.github.ajalt.clikt.core.findOrSetObject"]},{"name":"inline fun <T : Any> BaseCliktCommand<*>.requireObject(key: String = Context.DEFAULT_OBJ_KEY): ReadOnlyProperty<BaseCliktCommand<*>, T>","description":"com.github.ajalt.clikt.core.requireObject","location":"clikt/com.github.ajalt.clikt.core/require-object.html","searchKeys":["requireObject","inline fun <T : Any> BaseCliktCommand<*>.requireObject(key: String = Context.DEFAULT_OBJ_KEY): ReadOnlyProperty<BaseCliktCommand<*>, T>","com.github.ajalt.clikt.core.requireObject"]},{"name":"inline fun <T : Any> ProcessedArgument<T, T>.defaultLazy(defaultForHelp: String = \"\", crossinline value: () -> T): ArgumentDelegate<T>","description":"com.github.ajalt.clikt.parameters.arguments.defaultLazy","location":"clikt/com.github.ajalt.clikt.parameters.arguments/default-lazy.html","searchKeys":["defaultLazy","inline fun <T : Any> ProcessedArgument<T, T>.defaultLazy(defaultForHelp: String = \"\", crossinline value: () -> T): ArgumentDelegate<T>","com.github.ajalt.clikt.parameters.arguments.defaultLazy"]},{"name":"inline fun <T : Any> findObject(key: String = DEFAULT_OBJ_KEY): T?","description":"com.github.ajalt.clikt.core.Context.findObject","location":"clikt/com.github.ajalt.clikt.core/-context/find-object.html","searchKeys":["findObject","inline fun <T : Any> findObject(key: String = DEFAULT_OBJ_KEY): T?","com.github.ajalt.clikt.core.Context.findObject"]},{"name":"inline fun <T : Any> findOrSetObject(key: String = DEFAULT_OBJ_KEY, defaultValue: () -> T): T","description":"com.github.ajalt.clikt.core.Context.findOrSetObject","location":"clikt/com.github.ajalt.clikt.core/-context/find-or-set-object.html","searchKeys":["findOrSetObject","inline fun <T : Any> findOrSetObject(key: String = DEFAULT_OBJ_KEY, defaultValue: () -> T): T","com.github.ajalt.clikt.core.Context.findOrSetObject"]},{"name":"inline fun <T : BaseCliktCommand<*>> T.versionOption(version: String, help: String = \"Show the version and exit\", names: Set<String> = setOf(\"--version\"), crossinline message: (String) -> String = { \"$commandName version $it\" }): T","description":"com.github.ajalt.clikt.parameters.options.versionOption","location":"clikt/com.github.ajalt.clikt.parameters.options/version-option.html","searchKeys":["versionOption","inline fun <T : BaseCliktCommand<*>> T.versionOption(version: String, help: String = \"Show the version and exit\", names: Set<String> = setOf(\"--version\"), crossinline message: (String) -> String = { \"$commandName version $it\" }): T","com.github.ajalt.clikt.parameters.options.versionOption"]},{"name":"inline fun <T : BaseCliktCommand<T>, R> mainReturningValue(command: T, parseAndRun: T.() -> R): R","description":"com.github.ajalt.clikt.parsers.CommandLineParser.mainReturningValue","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parser/main-returning-value.html","searchKeys":["mainReturningValue","inline fun <T : BaseCliktCommand<T>, R> mainReturningValue(command: T, parseAndRun: T.() -> R): R","com.github.ajalt.clikt.parsers.CommandLineParser.mainReturningValue"]},{"name":"inline fun <T : BaseCliktCommand<T>> main(command: T, parseAndRun: T.() -> Unit)","description":"com.github.ajalt.clikt.parsers.CommandLineParser.main","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parser/main.html","searchKeys":["main","inline fun <T : BaseCliktCommand<T>> main(command: T, parseAndRun: T.() -> Unit)","com.github.ajalt.clikt.parsers.CommandLineParser.main"]},{"name":"inline fun <T : BaseCliktCommand<T>> parseAndRun(command: T, argv: List<String>, runCommand: (T) -> Unit): CommandLineParseResult<T>","description":"com.github.ajalt.clikt.parsers.CommandLineParser.parseAndRun","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parser/parse-and-run.html","searchKeys":["parseAndRun","inline fun <T : BaseCliktCommand<T>> parseAndRun(command: T, argv: List<String>, runCommand: (T) -> Unit): CommandLineParseResult<T>","com.github.ajalt.clikt.parsers.CommandLineParser.parseAndRun"]},{"name":"inline fun <T : BaseCliktCommand<T>> run(rootInvocation: CommandInvocation<T>, runCommand: (T) -> Unit)","description":"com.github.ajalt.clikt.parsers.CommandLineParser.run","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parser/run.html","searchKeys":["run","inline fun <T : BaseCliktCommand<T>> run(rootInvocation: CommandInvocation<T>, runCommand: (T) -> Unit)","com.github.ajalt.clikt.parsers.CommandLineParser.run"]},{"name":"inline fun <T : Enum<T>> RawArgument.enum(ignoreCase: Boolean = true, key: (T) -> String = { it.name }): ProcessedArgument<T, T>","description":"com.github.ajalt.clikt.parameters.types.enum","location":"clikt/com.github.ajalt.clikt.parameters.types/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> RawArgument.enum(ignoreCase: Boolean = true, key: (T) -> String = { it.name }): ProcessedArgument<T, T>","com.github.ajalt.clikt.parameters.types.enum"]},{"name":"inline fun <T : Enum<T>> RawOption.enum(ignoreCase: Boolean = true, key: (T) -> String = { it.name }): NullableOption<T, T>","description":"com.github.ajalt.clikt.parameters.types.enum","location":"clikt/com.github.ajalt.clikt.parameters.types/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> RawOption.enum(ignoreCase: Boolean = true, key: (T) -> String = { it.name }): NullableOption<T, T>","com.github.ajalt.clikt.parameters.types.enum"]},{"name":"inline fun <V> RawOption.associateWith(delimiter: String = \"=\", crossinline valueSelector: (String) -> V): OptionWithValues<Map<String, V>, Pair<String, V>, Pair<String, V>>","description":"com.github.ajalt.clikt.parameters.options.associateWith","location":"clikt/com.github.ajalt.clikt.parameters.options/associate-with.html","searchKeys":["associateWith","inline fun <V> RawOption.associateWith(delimiter: String = \"=\", crossinline valueSelector: (String) -> V): OptionWithValues<Map<String, V>, Pair<String, V>, Pair<String, V>>","com.github.ajalt.clikt.parameters.options.associateWith"]},{"name":"inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.require","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/require.html","searchKeys":["require","inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.require"]},{"name":"inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.require","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/require.html","searchKeys":["require","inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.require"]},{"name":"inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.require","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/require.html","searchKeys":["require","inline fun require(value: Boolean, lazyMessage: () -> String = { \"\" })","com.github.ajalt.clikt.parameters.options.OptionTransformContext.require"]},{"name":"interface Argument","description":"com.github.ajalt.clikt.parameters.arguments.Argument","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/index.html","searchKeys":["Argument","interface Argument","com.github.ajalt.clikt.parameters.arguments.Argument"]},{"name":"interface ArgumentDelegate<out T> : Argument, ReadOnlyProperty<BaseCliktCommand<*>, T> , PropertyDelegateProvider<BaseCliktCommand<*>, ReadOnlyProperty<BaseCliktCommand<*>, T>> ","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-delegate/index.html","searchKeys":["ArgumentDelegate","interface ArgumentDelegate<out T> : Argument, ReadOnlyProperty<BaseCliktCommand<*>, T> , PropertyDelegateProvider<BaseCliktCommand<*>, ReadOnlyProperty<BaseCliktCommand<*>, T>> ","com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate"]},{"name":"interface ContextCliktError","description":"com.github.ajalt.clikt.core.ContextCliktError","location":"clikt/com.github.ajalt.clikt.core/-context-clikt-error/index.html","searchKeys":["ContextCliktError","interface ContextCliktError","com.github.ajalt.clikt.core.ContextCliktError"]},{"name":"interface GroupableOption : StaticallyGroupedOption","description":"com.github.ajalt.clikt.core.GroupableOption","location":"clikt/com.github.ajalt.clikt.core/-groupable-option/index.html","searchKeys":["GroupableOption","interface GroupableOption : StaticallyGroupedOption","com.github.ajalt.clikt.core.GroupableOption"]},{"name":"interface HelpFormatter","description":"com.github.ajalt.clikt.output.HelpFormatter","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/index.html","searchKeys":["HelpFormatter","interface HelpFormatter","com.github.ajalt.clikt.output.HelpFormatter"]},{"name":"interface Localization","description":"com.github.ajalt.clikt.output.Localization","location":"clikt/com.github.ajalt.clikt.output/-localization/index.html","searchKeys":["Localization","interface Localization","com.github.ajalt.clikt.output.Localization"]},{"name":"interface Option","description":"com.github.ajalt.clikt.parameters.options.Option","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/index.html","searchKeys":["Option","interface Option","com.github.ajalt.clikt.parameters.options.Option"]},{"name":"interface OptionDelegate<T> : GroupableOption, ReadOnlyProperty<ParameterHolder, T> , PropertyDelegateProvider<ParameterHolder, ReadOnlyProperty<ParameterHolder, T>> ","description":"com.github.ajalt.clikt.parameters.options.OptionDelegate","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-delegate/index.html","searchKeys":["OptionDelegate","interface OptionDelegate<T> : GroupableOption, ReadOnlyProperty<ParameterHolder, T> , PropertyDelegateProvider<ParameterHolder, ReadOnlyProperty<ParameterHolder, T>> ","com.github.ajalt.clikt.parameters.options.OptionDelegate"]},{"name":"interface OptionWithValues<AllT, EachT, ValueT> : OptionDelegate<AllT> ","description":"com.github.ajalt.clikt.parameters.options.OptionWithValues","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-with-values/index.html","searchKeys":["OptionWithValues","interface OptionWithValues<AllT, EachT, ValueT> : OptionDelegate<AllT> ","com.github.ajalt.clikt.parameters.options.OptionWithValues"]},{"name":"interface ParameterFormatter","description":"com.github.ajalt.clikt.output.ParameterFormatter","location":"clikt/com.github.ajalt.clikt.output/-parameter-formatter/index.html","searchKeys":["ParameterFormatter","interface ParameterFormatter","com.github.ajalt.clikt.output.ParameterFormatter"]},{"name":"interface ParameterGroup","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/index.html","searchKeys":["ParameterGroup","interface ParameterGroup","com.github.ajalt.clikt.parameters.groups.ParameterGroup"]},{"name":"interface ParameterGroupDelegate<out T> : ParameterGroup, ReadOnlyProperty<BaseCliktCommand<*>, T> , PropertyDelegateProvider<BaseCliktCommand<*>, ReadOnlyProperty<BaseCliktCommand<*>, T>> ","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroupDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group-delegate/index.html","searchKeys":["ParameterGroupDelegate","interface ParameterGroupDelegate<out T> : ParameterGroup, ReadOnlyProperty<BaseCliktCommand<*>, T> , PropertyDelegateProvider<BaseCliktCommand<*>, ReadOnlyProperty<BaseCliktCommand<*>, T>> ","com.github.ajalt.clikt.parameters.groups.ParameterGroupDelegate"]},{"name":"interface ParameterHolder","description":"com.github.ajalt.clikt.core.ParameterHolder","location":"clikt/com.github.ajalt.clikt.core/-parameter-holder/index.html","searchKeys":["ParameterHolder","interface ParameterHolder","com.github.ajalt.clikt.core.ParameterHolder"]},{"name":"interface ProcessedArgument<AllT, ValueT> : ArgumentDelegate<AllT> ","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgument","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument/index.html","searchKeys":["ProcessedArgument","interface ProcessedArgument<AllT, ValueT> : ArgumentDelegate<AllT> ","com.github.ajalt.clikt.parameters.arguments.ProcessedArgument"]},{"name":"interface StaticallyGroupedOption : Option","description":"com.github.ajalt.clikt.core.StaticallyGroupedOption","location":"clikt/com.github.ajalt.clikt.core/-statically-grouped-option/index.html","searchKeys":["StaticallyGroupedOption","interface StaticallyGroupedOption : Option","com.github.ajalt.clikt.core.StaticallyGroupedOption"]},{"name":"interface TransformContext","description":"com.github.ajalt.clikt.parameters.transform.TransformContext","location":"clikt/com.github.ajalt.clikt.parameters.transform/-transform-context/index.html","searchKeys":["TransformContext","interface TransformContext","com.github.ajalt.clikt.parameters.transform.TransformContext"]},{"name":"interface ValueSource","description":"com.github.ajalt.clikt.sources.ValueSource","location":"clikt/com.github.ajalt.clikt.sources/-value-source/index.html","searchKeys":["ValueSource","interface ValueSource","com.github.ajalt.clikt.sources.ValueSource"]},{"name":"object CommandLineParser","description":"com.github.ajalt.clikt.parsers.CommandLineParser","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parser/index.html","searchKeys":["CommandLineParser","object CommandLineParser","com.github.ajalt.clikt.parsers.CommandLineParser"]},{"name":"object Companion","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Companion","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-companion/index.html","searchKeys":["Companion","object Companion","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.Companion"]},{"name":"object Companion","description":"com.github.ajalt.clikt.core.Context.Companion","location":"clikt/com.github.ajalt.clikt.core/-context/-companion/index.html","searchKeys":["Companion","object Companion","com.github.ajalt.clikt.core.Context.Companion"]},{"name":"object Companion","description":"com.github.ajalt.clikt.core.MultiUsageError.Companion","location":"clikt/com.github.ajalt.clikt.core/-multi-usage-error/-companion/index.html","searchKeys":["Companion","object Companion","com.github.ajalt.clikt.core.MultiUsageError.Companion"]},{"name":"object Companion","description":"com.github.ajalt.clikt.sources.ValueSource.Companion","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-companion/index.html","searchKeys":["Companion","object Companion","com.github.ajalt.clikt.sources.ValueSource.Companion"]},{"name":"object Companion","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/-companion/index.html","searchKeys":["Companion","object Companion","com.github.ajalt.clikt.sources.ValueSource.Invocation.Companion"]},{"name":"object CompletionGenerator","description":"com.github.ajalt.clikt.completion.CompletionGenerator","location":"clikt/com.github.ajalt.clikt.completion/-completion-generator/index.html","searchKeys":["CompletionGenerator","object CompletionGenerator","com.github.ajalt.clikt.completion.CompletionGenerator"]},{"name":"object Plain : ParameterFormatter","description":"com.github.ajalt.clikt.output.ParameterFormatter.Plain","location":"clikt/com.github.ajalt.clikt.output/-parameter-formatter/-plain/index.html","searchKeys":["Plain","object Plain : ParameterFormatter","com.github.ajalt.clikt.output.ParameterFormatter.Plain"]},{"name":"object PropertiesValueSource","description":"com.github.ajalt.clikt.sources.PropertiesValueSource","location":"clikt/com.github.ajalt.clikt.sources/-properties-value-source/index.html","searchKeys":["PropertiesValueSource","object PropertiesValueSource","com.github.ajalt.clikt.sources.PropertiesValueSource"]},{"name":"object Tags","description":"com.github.ajalt.clikt.output.HelpFormatter.Tags","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-tags/index.html","searchKeys":["Tags","object Tags","com.github.ajalt.clikt.output.HelpFormatter.Tags"]},{"name":"open class CliktError(message: String? = null, cause: Exception? = null, val statusCode: Int = 1, val printError: Boolean = true) : RuntimeException","description":"com.github.ajalt.clikt.core.CliktError","location":"clikt/com.github.ajalt.clikt.core/-clikt-error/index.html","searchKeys":["CliktError","open class CliktError(message: String? = null, cause: Exception? = null, val statusCode: Int = 1, val printError: Boolean = true) : RuntimeException","com.github.ajalt.clikt.core.CliktError"]},{"name":"open class CoreNoOpCliktCommand(name: String? = null) : CoreCliktCommand","description":"com.github.ajalt.clikt.core.CoreNoOpCliktCommand","location":"clikt/com.github.ajalt.clikt.core/-core-no-op-clikt-command/index.html","searchKeys":["CoreNoOpCliktCommand","open class CoreNoOpCliktCommand(name: String? = null) : CoreCliktCommand","com.github.ajalt.clikt.core.CoreNoOpCliktCommand"]},{"name":"open class OptionGroup(name: String? = null, help: String? = null) : ParameterGroup, ParameterHolder","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/index.html","searchKeys":["OptionGroup","open class OptionGroup(name: String? = null, help: String? = null) : ParameterGroup, ParameterHolder","com.github.ajalt.clikt.parameters.groups.OptionGroup"]},{"name":"open class PrintMessage(message: String, val statusCode: Int = 0, val printError: Boolean = false) : CliktError","description":"com.github.ajalt.clikt.core.PrintMessage","location":"clikt/com.github.ajalt.clikt.core/-print-message/index.html","searchKeys":["PrintMessage","open class PrintMessage(message: String, val statusCode: Int = 0, val printError: Boolean = false) : CliktError","com.github.ajalt.clikt.core.PrintMessage"]},{"name":"open class ProgramResult(val statusCode: Int) : CliktError","description":"com.github.ajalt.clikt.core.ProgramResult","location":"clikt/com.github.ajalt.clikt.core/-program-result/index.html","searchKeys":["ProgramResult","open class ProgramResult(val statusCode: Int) : CliktError","com.github.ajalt.clikt.core.ProgramResult"]},{"name":"open class UsageError(message: String?, var paramName: String? = null, val statusCode: Int = 1) : CliktError, ContextCliktError","description":"com.github.ajalt.clikt.core.UsageError","location":"clikt/com.github.ajalt.clikt.core/-usage-error/index.html","searchKeys":["UsageError","open class UsageError(message: String?, var paramName: String? = null, val statusCode: Int = 1) : CliktError, ContextCliktError","com.github.ajalt.clikt.core.UsageError"]},{"name":"open fun aliases(): Map<String, List<String>>","description":"com.github.ajalt.clikt.core.BaseCliktCommand.aliases","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/aliases.html","searchKeys":["aliases","open fun aliases(): Map<String, List<String>>","com.github.ajalt.clikt.core.BaseCliktCommand.aliases"]},{"name":"open fun allHelpParams(): List<HelpFormatter.ParameterHelp>","description":"com.github.ajalt.clikt.core.BaseCliktCommand.allHelpParams","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/all-help-params.html","searchKeys":["allHelpParams","open fun allHelpParams(): List<HelpFormatter.ParameterHelp>","com.github.ajalt.clikt.core.BaseCliktCommand.allHelpParams"]},{"name":"open fun argumentsMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.argumentsMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/arguments-metavar.html","searchKeys":["argumentsMetavar","open fun argumentsMetavar(): String","com.github.ajalt.clikt.output.Localization.argumentsMetavar"]},{"name":"open fun argumentsTitle(): String","description":"com.github.ajalt.clikt.output.Localization.argumentsTitle","location":"clikt/com.github.ajalt.clikt.output/-localization/arguments-title.html","searchKeys":["argumentsTitle","open fun argumentsTitle(): String","com.github.ajalt.clikt.output.Localization.argumentsTitle"]},{"name":"open fun badParameter(): String","description":"com.github.ajalt.clikt.output.Localization.badParameter","location":"clikt/com.github.ajalt.clikt.output/-localization/bad-parameter.html","searchKeys":["badParameter","open fun badParameter(): String","com.github.ajalt.clikt.output.Localization.badParameter"]},{"name":"open fun badParameterWithMessage(message: String): String","description":"com.github.ajalt.clikt.output.Localization.badParameterWithMessage","location":"clikt/com.github.ajalt.clikt.output/-localization/bad-parameter-with-message.html","searchKeys":["badParameterWithMessage","open fun badParameterWithMessage(message: String): String","com.github.ajalt.clikt.output.Localization.badParameterWithMessage"]},{"name":"open fun badParameterWithMessageAndParam(paramName: String, message: String): String","description":"com.github.ajalt.clikt.output.Localization.badParameterWithMessageAndParam","location":"clikt/com.github.ajalt.clikt.output/-localization/bad-parameter-with-message-and-param.html","searchKeys":["badParameterWithMessageAndParam","open fun badParameterWithMessageAndParam(paramName: String, message: String): String","com.github.ajalt.clikt.output.Localization.badParameterWithMessageAndParam"]},{"name":"open fun badParameterWithParam(paramName: String): String","description":"com.github.ajalt.clikt.output.Localization.badParameterWithParam","location":"clikt/com.github.ajalt.clikt.output/-localization/bad-parameter-with-param.html","searchKeys":["badParameterWithParam","open fun badParameterWithParam(paramName: String): String","com.github.ajalt.clikt.output.Localization.badParameterWithParam"]},{"name":"open fun boolConversionError(value: String): String","description":"com.github.ajalt.clikt.output.Localization.boolConversionError","location":"clikt/com.github.ajalt.clikt.output/-localization/bool-conversion-error.html","searchKeys":["boolConversionError","open fun boolConversionError(value: String): String","com.github.ajalt.clikt.output.Localization.boolConversionError"]},{"name":"open fun commandHelp(context: Context): String","description":"com.github.ajalt.clikt.core.BaseCliktCommand.commandHelp","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/command-help.html","searchKeys":["commandHelp","open fun commandHelp(context: Context): String","com.github.ajalt.clikt.core.BaseCliktCommand.commandHelp"]},{"name":"open fun commandHelpEpilog(context: Context): String","description":"com.github.ajalt.clikt.core.BaseCliktCommand.commandHelpEpilog","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/command-help-epilog.html","searchKeys":["commandHelpEpilog","open fun commandHelpEpilog(context: Context): String","com.github.ajalt.clikt.core.BaseCliktCommand.commandHelpEpilog"]},{"name":"open fun commandMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.commandMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/command-metavar.html","searchKeys":["commandMetavar","open fun commandMetavar(): String","com.github.ajalt.clikt.output.Localization.commandMetavar"]},{"name":"open fun commandsTitle(): String","description":"com.github.ajalt.clikt.output.Localization.commandsTitle","location":"clikt/com.github.ajalt.clikt.output/-localization/commands-title.html","searchKeys":["commandsTitle","open fun commandsTitle(): String","com.github.ajalt.clikt.output.Localization.commandsTitle"]},{"name":"open fun countedOptionExceededLimit(count: Int, limit: Int): String","description":"com.github.ajalt.clikt.output.Localization.countedOptionExceededLimit","location":"clikt/com.github.ajalt.clikt.output/-localization/counted-option-exceeded-limit.html","searchKeys":["countedOptionExceededLimit","open fun countedOptionExceededLimit(count: Int, limit: Int): String","com.github.ajalt.clikt.output.Localization.countedOptionExceededLimit"]},{"name":"open fun defaultMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.defaultMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/default-metavar.html","searchKeys":["defaultMetavar","open fun defaultMetavar(): String","com.github.ajalt.clikt.output.Localization.defaultMetavar"]},{"name":"open fun extraArgumentMany(name: String, count: Int): String","description":"com.github.ajalt.clikt.output.Localization.extraArgumentMany","location":"clikt/com.github.ajalt.clikt.output/-localization/extra-argument-many.html","searchKeys":["extraArgumentMany","open fun extraArgumentMany(name: String, count: Int): String","com.github.ajalt.clikt.output.Localization.extraArgumentMany"]},{"name":"open fun extraArgumentOne(name: String): String","description":"com.github.ajalt.clikt.output.Localization.extraArgumentOne","location":"clikt/com.github.ajalt.clikt.output/-localization/extra-argument-one.html","searchKeys":["extraArgumentOne","open fun extraArgumentOne(name: String): String","com.github.ajalt.clikt.output.Localization.extraArgumentOne"]},{"name":"open fun fileEndsWithSlash(): String","description":"com.github.ajalt.clikt.output.Localization.fileEndsWithSlash","location":"clikt/com.github.ajalt.clikt.output/-localization/file-ends-with-slash.html","searchKeys":["fileEndsWithSlash","open fun fileEndsWithSlash(): String","com.github.ajalt.clikt.output.Localization.fileEndsWithSlash"]},{"name":"open fun fileMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.fileMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/file-metavar.html","searchKeys":["fileMetavar","open fun fileMetavar(): String","com.github.ajalt.clikt.output.Localization.fileMetavar"]},{"name":"open fun fileNotFound(filename: String): String","description":"com.github.ajalt.clikt.output.Localization.fileNotFound","location":"clikt/com.github.ajalt.clikt.output/-localization/file-not-found.html","searchKeys":["fileNotFound","open fun fileNotFound(filename: String): String","com.github.ajalt.clikt.output.Localization.fileNotFound"]},{"name":"open fun floatConversionError(value: String): String","description":"com.github.ajalt.clikt.output.Localization.floatConversionError","location":"clikt/com.github.ajalt.clikt.output/-localization/float-conversion-error.html","searchKeys":["floatConversionError","open fun floatConversionError(value: String): String","com.github.ajalt.clikt.output.Localization.floatConversionError"]},{"name":"open fun floatMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.floatMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/float-metavar.html","searchKeys":["floatMetavar","open fun floatMetavar(): String","com.github.ajalt.clikt.output.Localization.floatMetavar"]},{"name":"open fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.UsageError.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-usage-error/format-message.html","searchKeys":["formatMessage","open fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.UsageError.formatMessage"]},{"name":"open fun help(context: Context): String","description":"com.github.ajalt.clikt.core.BaseCliktCommand.help","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/help.html","searchKeys":["help","open fun help(context: Context): String","com.github.ajalt.clikt.core.BaseCliktCommand.help"]},{"name":"open fun helpEpilog(context: Context): String","description":"com.github.ajalt.clikt.core.BaseCliktCommand.helpEpilog","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/help-epilog.html","searchKeys":["helpEpilog","open fun helpEpilog(context: Context): String","com.github.ajalt.clikt.core.BaseCliktCommand.helpEpilog"]},{"name":"open fun helpOptionMessage(): String","description":"com.github.ajalt.clikt.output.Localization.helpOptionMessage","location":"clikt/com.github.ajalt.clikt.output/-localization/help-option-message.html","searchKeys":["helpOptionMessage","open fun helpOptionMessage(): String","com.github.ajalt.clikt.output.Localization.helpOptionMessage"]},{"name":"open fun helpTagDefault(): String","description":"com.github.ajalt.clikt.output.Localization.helpTagDefault","location":"clikt/com.github.ajalt.clikt.output/-localization/help-tag-default.html","searchKeys":["helpTagDefault","open fun helpTagDefault(): String","com.github.ajalt.clikt.output.Localization.helpTagDefault"]},{"name":"open fun helpTagRequired(): String","description":"com.github.ajalt.clikt.output.Localization.helpTagRequired","location":"clikt/com.github.ajalt.clikt.output/-localization/help-tag-required.html","searchKeys":["helpTagRequired","open fun helpTagRequired(): String","com.github.ajalt.clikt.output.Localization.helpTagRequired"]},{"name":"open fun incorrectArgumentValueCount(name: String, count: Int): String","description":"com.github.ajalt.clikt.output.Localization.incorrectArgumentValueCount","location":"clikt/com.github.ajalt.clikt.output/-localization/incorrect-argument-value-count.html","searchKeys":["incorrectArgumentValueCount","open fun incorrectArgumentValueCount(name: String, count: Int): String","com.github.ajalt.clikt.output.Localization.incorrectArgumentValueCount"]},{"name":"open fun incorrectOptionValueCount(name: String, count: Int): String","description":"com.github.ajalt.clikt.output.Localization.incorrectOptionValueCount","location":"clikt/com.github.ajalt.clikt.output/-localization/incorrect-option-value-count.html","searchKeys":["incorrectOptionValueCount","open fun incorrectOptionValueCount(name: String, count: Int): String","com.github.ajalt.clikt.output.Localization.incorrectOptionValueCount"]},{"name":"open fun intConversionError(value: String): String","description":"com.github.ajalt.clikt.output.Localization.intConversionError","location":"clikt/com.github.ajalt.clikt.output/-localization/int-conversion-error.html","searchKeys":["intConversionError","open fun intConversionError(value: String): String","com.github.ajalt.clikt.output.Localization.intConversionError"]},{"name":"open fun intMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.intMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/int-metavar.html","searchKeys":["intMetavar","open fun intMetavar(): String","com.github.ajalt.clikt.output.Localization.intMetavar"]},{"name":"open fun invalidChoice(choice: String, choices: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.invalidChoice","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-choice.html","searchKeys":["invalidChoice","open fun invalidChoice(choice: String, choices: List<String>): String","com.github.ajalt.clikt.output.Localization.invalidChoice"]},{"name":"open fun invalidFileFormat(filename: String, lineNumber: Int, message: String): String","description":"com.github.ajalt.clikt.output.Localization.invalidFileFormat","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-file-format.html","searchKeys":["invalidFileFormat","open fun invalidFileFormat(filename: String, lineNumber: Int, message: String): String","com.github.ajalt.clikt.output.Localization.invalidFileFormat"]},{"name":"open fun invalidFileFormat(filename: String, message: String): String","description":"com.github.ajalt.clikt.output.Localization.invalidFileFormat","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-file-format.html","searchKeys":["invalidFileFormat","open fun invalidFileFormat(filename: String, message: String): String","com.github.ajalt.clikt.output.Localization.invalidFileFormat"]},{"name":"open fun invalidFlagValueInFile(name: String): String","description":"com.github.ajalt.clikt.output.Localization.invalidFlagValueInFile","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-flag-value-in-file.html","searchKeys":["invalidFlagValueInFile","open fun invalidFlagValueInFile(name: String): String","com.github.ajalt.clikt.output.Localization.invalidFlagValueInFile"]},{"name":"open fun invalidGroupChoice(value: String, choices: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.invalidGroupChoice","location":"clikt/com.github.ajalt.clikt.output/-localization/invalid-group-choice.html","searchKeys":["invalidGroupChoice","open fun invalidGroupChoice(value: String, choices: List<String>): String","com.github.ajalt.clikt.output.Localization.invalidGroupChoice"]},{"name":"open fun missingArgument(paramName: String): String","description":"com.github.ajalt.clikt.output.Localization.missingArgument","location":"clikt/com.github.ajalt.clikt.output/-localization/missing-argument.html","searchKeys":["missingArgument","open fun missingArgument(paramName: String): String","com.github.ajalt.clikt.output.Localization.missingArgument"]},{"name":"open fun missingOption(paramName: String): String","description":"com.github.ajalt.clikt.output.Localization.missingOption","location":"clikt/com.github.ajalt.clikt.output/-localization/missing-option.html","searchKeys":["missingOption","open fun missingOption(paramName: String): String","com.github.ajalt.clikt.output.Localization.missingOption"]},{"name":"open fun mutexGroupException(name: String, others: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.mutexGroupException","location":"clikt/com.github.ajalt.clikt.output/-localization/mutex-group-exception.html","searchKeys":["mutexGroupException","open fun mutexGroupException(name: String, others: List<String>): String","com.github.ajalt.clikt.output.Localization.mutexGroupException"]},{"name":"open fun noSuchOption(name: String, possibilities: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.noSuchOption","location":"clikt/com.github.ajalt.clikt.output/-localization/no-such-option.html","searchKeys":["noSuchOption","open fun noSuchOption(name: String, possibilities: List<String>): String","com.github.ajalt.clikt.output.Localization.noSuchOption"]},{"name":"open fun noSuchSubcommand(name: String, possibilities: List<String>): String","description":"com.github.ajalt.clikt.output.Localization.noSuchSubcommand","location":"clikt/com.github.ajalt.clikt.output/-localization/no-such-subcommand.html","searchKeys":["noSuchSubcommand","open fun noSuchSubcommand(name: String, possibilities: List<String>): String","com.github.ajalt.clikt.output.Localization.noSuchSubcommand"]},{"name":"open fun optionsMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.optionsMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/options-metavar.html","searchKeys":["optionsMetavar","open fun optionsMetavar(): String","com.github.ajalt.clikt.output.Localization.optionsMetavar"]},{"name":"open fun optionsTitle(): String","description":"com.github.ajalt.clikt.output.Localization.optionsTitle","location":"clikt/com.github.ajalt.clikt.output/-localization/options-title.html","searchKeys":["optionsTitle","open fun optionsTitle(): String","com.github.ajalt.clikt.output.Localization.optionsTitle"]},{"name":"open fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Group?","description":"com.github.ajalt.clikt.parameters.groups.ParameterGroup.parameterHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-parameter-group/parameter-help.html","searchKeys":["parameterHelp","open fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Group?","com.github.ajalt.clikt.parameters.groups.ParameterGroup.parameterHelp"]},{"name":"open fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Option?","description":"com.github.ajalt.clikt.parameters.options.Option.parameterHelp","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/parameter-help.html","searchKeys":["parameterHelp","open fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Option?","com.github.ajalt.clikt.parameters.options.Option.parameterHelp"]},{"name":"open fun pathDoesNotExist(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathDoesNotExist","location":"clikt/com.github.ajalt.clikt.output/-localization/path-does-not-exist.html","searchKeys":["pathDoesNotExist","open fun pathDoesNotExist(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathDoesNotExist"]},{"name":"open fun pathIsDirectory(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsDirectory","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-directory.html","searchKeys":["pathIsDirectory","open fun pathIsDirectory(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsDirectory"]},{"name":"open fun pathIsFile(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsFile","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-file.html","searchKeys":["pathIsFile","open fun pathIsFile(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsFile"]},{"name":"open fun pathIsNotReadable(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsNotReadable","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-not-readable.html","searchKeys":["pathIsNotReadable","open fun pathIsNotReadable(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsNotReadable"]},{"name":"open fun pathIsNotWritable(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsNotWritable","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-not-writable.html","searchKeys":["pathIsNotWritable","open fun pathIsNotWritable(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsNotWritable"]},{"name":"open fun pathIsSymlink(pathType: String, path: String): String","description":"com.github.ajalt.clikt.output.Localization.pathIsSymlink","location":"clikt/com.github.ajalt.clikt.output/-localization/path-is-symlink.html","searchKeys":["pathIsSymlink","open fun pathIsSymlink(pathType: String, path: String): String","com.github.ajalt.clikt.output.Localization.pathIsSymlink"]},{"name":"open fun pathMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.pathMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/path-metavar.html","searchKeys":["pathMetavar","open fun pathMetavar(): String","com.github.ajalt.clikt.output.Localization.pathMetavar"]},{"name":"open fun pathTypeDirectory(): String","description":"com.github.ajalt.clikt.output.Localization.pathTypeDirectory","location":"clikt/com.github.ajalt.clikt.output/-localization/path-type-directory.html","searchKeys":["pathTypeDirectory","open fun pathTypeDirectory(): String","com.github.ajalt.clikt.output.Localization.pathTypeDirectory"]},{"name":"open fun pathTypeFile(): String","description":"com.github.ajalt.clikt.output.Localization.pathTypeFile","location":"clikt/com.github.ajalt.clikt.output/-localization/path-type-file.html","searchKeys":["pathTypeFile","open fun pathTypeFile(): String","com.github.ajalt.clikt.output.Localization.pathTypeFile"]},{"name":"open fun pathTypeOther(): String","description":"com.github.ajalt.clikt.output.Localization.pathTypeOther","location":"clikt/com.github.ajalt.clikt.output/-localization/path-type-other.html","searchKeys":["pathTypeOther","open fun pathTypeOther(): String","com.github.ajalt.clikt.output.Localization.pathTypeOther"]},{"name":"open fun rangeExceededBoth(value: String, min: String, max: String): String","description":"com.github.ajalt.clikt.output.Localization.rangeExceededBoth","location":"clikt/com.github.ajalt.clikt.output/-localization/range-exceeded-both.html","searchKeys":["rangeExceededBoth","open fun rangeExceededBoth(value: String, min: String, max: String): String","com.github.ajalt.clikt.output.Localization.rangeExceededBoth"]},{"name":"open fun rangeExceededMax(value: String, limit: String): String","description":"com.github.ajalt.clikt.output.Localization.rangeExceededMax","location":"clikt/com.github.ajalt.clikt.output/-localization/range-exceeded-max.html","searchKeys":["rangeExceededMax","open fun rangeExceededMax(value: String, limit: String): String","com.github.ajalt.clikt.output.Localization.rangeExceededMax"]},{"name":"open fun rangeExceededMin(value: String, limit: String): String","description":"com.github.ajalt.clikt.output.Localization.rangeExceededMin","location":"clikt/com.github.ajalt.clikt.output/-localization/range-exceeded-min.html","searchKeys":["rangeExceededMin","open fun rangeExceededMin(value: String, limit: String): String","com.github.ajalt.clikt.output.Localization.rangeExceededMin"]},{"name":"open fun requiredMutexOption(options: String): String","description":"com.github.ajalt.clikt.output.Localization.requiredMutexOption","location":"clikt/com.github.ajalt.clikt.output/-localization/required-mutex-option.html","searchKeys":["requiredMutexOption","open fun requiredMutexOption(options: String): String","com.github.ajalt.clikt.output.Localization.requiredMutexOption"]},{"name":"open fun stringMetavar(): String","description":"com.github.ajalt.clikt.output.Localization.stringMetavar","location":"clikt/com.github.ajalt.clikt.output/-localization/string-metavar.html","searchKeys":["stringMetavar","open fun stringMetavar(): String","com.github.ajalt.clikt.output.Localization.stringMetavar"]},{"name":"open fun switchOptionEnvvar(): String","description":"com.github.ajalt.clikt.output.Localization.switchOptionEnvvar","location":"clikt/com.github.ajalt.clikt.output/-localization/switch-option-envvar.html","searchKeys":["switchOptionEnvvar","open fun switchOptionEnvvar(): String","com.github.ajalt.clikt.output.Localization.switchOptionEnvvar"]},{"name":"open fun unclosedQuote(): String","description":"com.github.ajalt.clikt.output.Localization.unclosedQuote","location":"clikt/com.github.ajalt.clikt.output/-localization/unclosed-quote.html","searchKeys":["unclosedQuote","open fun unclosedQuote(): String","com.github.ajalt.clikt.output.Localization.unclosedQuote"]},{"name":"open fun usageError(): String","description":"com.github.ajalt.clikt.output.Localization.usageError","location":"clikt/com.github.ajalt.clikt.output/-localization/usage-error.html","searchKeys":["usageError","open fun usageError(): String","com.github.ajalt.clikt.output.Localization.usageError"]},{"name":"open fun usageTitle(): String","description":"com.github.ajalt.clikt.output.Localization.usageTitle","location":"clikt/com.github.ajalt.clikt.output/-localization/usage-title.html","searchKeys":["usageTitle","open fun usageTitle(): String","com.github.ajalt.clikt.output.Localization.usageTitle"]},{"name":"open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): AllT","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.getValue","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): AllT","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.getValue"]},{"name":"open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): OutT","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.getValue","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): OutT","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.getValue"]},{"name":"open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): OutT","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.getValue","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): OutT","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.getValue"]},{"name":"open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): OutT","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.getValue","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): OutT","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.getValue"]},{"name":"open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): T","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate.getValue","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-delegate/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: BaseCliktCommand<*>, property: KProperty<*>): T","com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate.getValue"]},{"name":"open operator override fun getValue(thisRef: ParameterHolder, property: KProperty<*>): T","description":"com.github.ajalt.clikt.parameters.options.OptionDelegate.getValue","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-delegate/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: ParameterHolder, property: KProperty<*>): T","com.github.ajalt.clikt.parameters.options.OptionDelegate.getValue"]},{"name":"open operator override fun iterator(): Iterator<CommandInvocation<T>>","description":"com.github.ajalt.clikt.parsers.FlatInvocations.iterator","location":"clikt/com.github.ajalt.clikt.parsers/-flat-invocations/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<CommandInvocation<T>>","com.github.ajalt.clikt.parsers.FlatInvocations.iterator"]},{"name":"open operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, AllT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, AllT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.provideDelegate"]},{"name":"open operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, OutT>","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, OutT>","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.provideDelegate"]},{"name":"open operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, OutT>","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, OutT>","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.provideDelegate"]},{"name":"open operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, OutT>","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/provide-delegate.html","searchKeys":["provideDelegate","open operator override fun provideDelegate(thisRef: BaseCliktCommand<*>, property: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, OutT>","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.provideDelegate"]},{"name":"open override fun <AllT, ValueT> copy(transformValue: ArgValueTransformer<ValueT>, transformAll: ArgCallsTransformer<AllT, ValueT>, validator: ArgValidator<AllT>, name: String, nvalues: Int, required: Boolean, helpGetter: HelpTransformContext.() -> String?, helpTags: Map<String, String>, completionCandidates: CompletionCandidates?): ProcessedArgument<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.copy","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/copy.html","searchKeys":["copy","open override fun <AllT, ValueT> copy(transformValue: ArgValueTransformer<ValueT>, transformAll: ArgCallsTransformer<AllT, ValueT>, validator: ArgValidator<AllT>, name: String, nvalues: Int, required: Boolean, helpGetter: HelpTransformContext.() -> String?, helpTags: Map<String, String>, completionCandidates: CompletionCandidates?): ProcessedArgument<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.copy"]},{"name":"open override fun close()","description":"com.github.ajalt.clikt.parsers.FlatInvocations.close","location":"clikt/com.github.ajalt.clikt.parsers/-flat-invocations/close.html","searchKeys":["close","open override fun close()","com.github.ajalt.clikt.parsers.FlatInvocations.close"]},{"name":"open override fun copy(validator: ArgValidator<AllT>, name: String, nvalues: Int, required: Boolean, helpGetter: HelpTransformContext.() -> String?, helpTags: Map<String, String>, completionCandidates: CompletionCandidates?): ProcessedArgument<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.copy","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/copy.html","searchKeys":["copy","open override fun copy(validator: ArgValidator<AllT>, name: String, nvalues: Int, required: Boolean, helpGetter: HelpTransformContext.() -> String?, helpTags: Map<String, String>, completionCandidates: CompletionCandidates?): ProcessedArgument<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.copy"]},{"name":"open override fun fail(message: String): Nothing","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.fail","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/fail.html","searchKeys":["fail","open override fun fail(message: String): Nothing","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.fail"]},{"name":"open override fun fail(message: String): Nothing","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.fail","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/fail.html","searchKeys":["fail","open override fun fail(message: String): Nothing","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.fail"]},{"name":"open override fun fail(message: String): Nothing","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.fail","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/fail.html","searchKeys":["fail","open override fun fail(message: String): Nothing","com.github.ajalt.clikt.parameters.options.OptionTransformContext.fail"]},{"name":"open override fun fail(message: String): Nothing","description":"com.github.ajalt.clikt.parameters.transform.HelpTransformContext.fail","location":"clikt/com.github.ajalt.clikt.parameters.transform/-help-transform-context/fail.html","searchKeys":["fail","open override fun fail(message: String): Nothing","com.github.ajalt.clikt.parameters.transform.HelpTransformContext.fail"]},{"name":"open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.finalize"]},{"name":"open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.finalize"]},{"name":"open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.finalize"]},{"name":"open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.finalize","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, invocationsByOption: Map<Option, List<OptionInvocation>>)","com.github.ajalt.clikt.parameters.groups.OptionGroup.finalize"]},{"name":"open override fun finalize(context: Context, values: List<String>)","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.finalize","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/finalize.html","searchKeys":["finalize","open override fun finalize(context: Context, values: List<String>)","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.finalize"]},{"name":"open override fun formatArgument(name: String): String","description":"com.github.ajalt.clikt.output.ParameterFormatter.Plain.formatArgument","location":"clikt/com.github.ajalt.clikt.output/-parameter-formatter/-plain/format-argument.html","searchKeys":["formatArgument","open override fun formatArgument(name: String): String","com.github.ajalt.clikt.output.ParameterFormatter.Plain.formatArgument"]},{"name":"open override fun formatHelp(error: UsageError?, prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String): String","description":"com.github.ajalt.clikt.output.PlaintextHelpFormatter.formatHelp","location":"clikt/com.github.ajalt.clikt.output/-plaintext-help-formatter/format-help.html","searchKeys":["formatHelp","open override fun formatHelp(error: UsageError?, prolog: String, epilog: String, parameters: List<HelpFormatter.ParameterHelp>, programName: String): String","com.github.ajalt.clikt.output.PlaintextHelpFormatter.formatHelp"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.BadParameterValue.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-bad-parameter-value/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.BadParameterValue.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.FileNotFound.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-file-not-found/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.FileNotFound.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.IncorrectArgumentValueCount.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-incorrect-argument-value-count/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.IncorrectArgumentValueCount.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.IncorrectOptionValueCount.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-incorrect-option-value-count/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.IncorrectOptionValueCount.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.InvalidFileFormat.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-invalid-file-format/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.InvalidFileFormat.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.MissingArgument.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-missing-argument/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.MissingArgument.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.MissingOption.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-missing-option/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.MissingOption.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.MultiUsageError.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-multi-usage-error/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.MultiUsageError.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.MutuallyExclusiveGroupException.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-mutually-exclusive-group-exception/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.MutuallyExclusiveGroupException.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.NoSuchArgument.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-no-such-argument/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.NoSuchArgument.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.NoSuchOption.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-no-such-option/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.NoSuchOption.formatMessage"]},{"name":"open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","description":"com.github.ajalt.clikt.core.NoSuchSubcommand.formatMessage","location":"clikt/com.github.ajalt.clikt.core/-no-such-subcommand/format-message.html","searchKeys":["formatMessage","open override fun formatMessage(localization: Localization, formatter: ParameterFormatter): String","com.github.ajalt.clikt.core.NoSuchSubcommand.formatMessage"]},{"name":"open override fun formatOption(name: String): String","description":"com.github.ajalt.clikt.output.ParameterFormatter.Plain.formatOption","location":"clikt/com.github.ajalt.clikt.output/-parameter-formatter/-plain/format-option.html","searchKeys":["formatOption","open override fun formatOption(name: String): String","com.github.ajalt.clikt.output.ParameterFormatter.Plain.formatOption"]},{"name":"open override fun formatSubcommand(name: String): String","description":"com.github.ajalt.clikt.output.ParameterFormatter.Plain.formatSubcommand","location":"clikt/com.github.ajalt.clikt.output/-parameter-formatter/-plain/format-subcommand.html","searchKeys":["formatSubcommand","open override fun formatSubcommand(name: String): String","com.github.ajalt.clikt.output.ParameterFormatter.Plain.formatSubcommand"]},{"name":"open override fun getArgumentHelp(context: Context): String","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.getArgumentHelp","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/get-argument-help.html","searchKeys":["getArgumentHelp","open override fun getArgumentHelp(context: Context): String","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.getArgumentHelp"]},{"name":"open override fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","description":"com.github.ajalt.clikt.sources.ChainedValueSource.getValues","location":"clikt/com.github.ajalt.clikt.sources/-chained-value-source/get-values.html","searchKeys":["getValues","open override fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","com.github.ajalt.clikt.sources.ChainedValueSource.getValues"]},{"name":"open override fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","description":"com.github.ajalt.clikt.sources.MapValueSource.getValues","location":"clikt/com.github.ajalt.clikt.sources/-map-value-source/get-values.html","searchKeys":["getValues","open override fun getValues(context: Context, option: Option): List<ValueSource.Invocation>","com.github.ajalt.clikt.sources.MapValueSource.getValues"]},{"name":"open override fun help(context: Context): String","description":"com.github.ajalt.clikt.completion.CompletionCommand.help","location":"clikt/com.github.ajalt.clikt.completion/-completion-command/help.html","searchKeys":["help","open override fun help(context: Context): String","com.github.ajalt.clikt.completion.CompletionCommand.help"]},{"name":"open override fun helpEpilog(context: Context): String","description":"com.github.ajalt.clikt.completion.CompletionCommand.helpEpilog","location":"clikt/com.github.ajalt.clikt.completion/-completion-command/help-epilog.html","searchKeys":["helpEpilog","open override fun helpEpilog(context: Context): String","com.github.ajalt.clikt.completion.CompletionCommand.helpEpilog"]},{"name":"open override fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Argument","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.parameterHelp","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/parameter-help.html","searchKeys":["parameterHelp","open override fun parameterHelp(context: Context): HelpFormatter.ParameterHelp.Argument","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.parameterHelp"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.postValidate"]},{"name":"open override fun postValidate(context: Context)","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.postValidate","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/post-validate.html","searchKeys":["postValidate","open override fun postValidate(context: Context)","com.github.ajalt.clikt.parameters.groups.OptionGroup.postValidate"]},{"name":"open override fun registerOption(option: GroupableOption)","description":"com.github.ajalt.clikt.core.BaseCliktCommand.registerOption","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/register-option.html","searchKeys":["registerOption","open override fun registerOption(option: GroupableOption)","com.github.ajalt.clikt.core.BaseCliktCommand.registerOption"]},{"name":"open override fun registerOption(option: GroupableOption)","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.registerOption","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/register-option.html","searchKeys":["registerOption","open override fun registerOption(option: GroupableOption)","com.github.ajalt.clikt.parameters.groups.OptionGroup.registerOption"]},{"name":"open override fun run()","description":"com.github.ajalt.clikt.completion.CompletionCommand.run","location":"clikt/com.github.ajalt.clikt.completion/-completion-command/run.html","searchKeys":["run","open override fun run()","com.github.ajalt.clikt.completion.CompletionCommand.run"]},{"name":"open override fun toString(): String","description":"com.github.ajalt.clikt.core.BaseCliktCommand.toString","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.ajalt.clikt.core.BaseCliktCommand.toString"]},{"name":"open override fun toString(): String","description":"com.github.ajalt.clikt.core.Context.toString","location":"clikt/com.github.ajalt.clikt.core/-context/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.ajalt.clikt.core.Context.toString"]},{"name":"open override fun toString(): String","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.toString","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.toString"]},{"name":"open override val completionCandidates: CompletionCandidates","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.completionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/completion-candidates.html","searchKeys":["completionCandidates","open override val completionCandidates: CompletionCandidates","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.completionCandidates"]},{"name":"open override val context: Context","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/context.html","searchKeys":["context","open override val context: Context","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.context"]},{"name":"open override val context: Context","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/context.html","searchKeys":["context","open override val context: Context","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.context"]},{"name":"open override val context: Context","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/context.html","searchKeys":["context","open override val context: Context","com.github.ajalt.clikt.parameters.options.OptionTransformContext.context"]},{"name":"open override val context: Context","description":"com.github.ajalt.clikt.parameters.transform.HelpTransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.transform/-help-transform-context/context.html","searchKeys":["context","open override val context: Context","com.github.ajalt.clikt.parameters.transform.HelpTransformContext.context"]},{"name":"open override val explicitCompletionCandidates: CompletionCandidates?","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.explicitCompletionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/explicit-completion-candidates.html","searchKeys":["explicitCompletionCandidates","open override val explicitCompletionCandidates: CompletionCandidates?","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.explicitCompletionCandidates"]},{"name":"open override val groupHelp: String?","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/group-help.html","searchKeys":["groupHelp","open override val groupHelp: String?","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.groupHelp"]},{"name":"open override val groupHelp: String?","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/group-help.html","searchKeys":["groupHelp","open override val groupHelp: String?","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.groupHelp"]},{"name":"open override val groupHelp: String?","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/group-help.html","searchKeys":["groupHelp","open override val groupHelp: String?","com.github.ajalt.clikt.parameters.groups.OptionGroup.groupHelp"]},{"name":"open override val groupHelp: String? = null","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.groupHelp","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/group-help.html","searchKeys":["groupHelp","open override val groupHelp: String? = null","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.groupHelp"]},{"name":"open override val groupName: String?","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group/group-name.html","searchKeys":["groupName","open override val groupName: String?","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroup.groupName"]},{"name":"open override val groupName: String?","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options/group-name.html","searchKeys":["groupName","open override val groupName: String?","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptions.groupName"]},{"name":"open override val groupName: String?","description":"com.github.ajalt.clikt.parameters.groups.OptionGroup.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-option-group/group-name.html","searchKeys":["groupName","open override val groupName: String?","com.github.ajalt.clikt.parameters.groups.OptionGroup.groupName"]},{"name":"open override val groupName: String? = null","description":"com.github.ajalt.clikt.parameters.groups.ChoiceGroup.groupName","location":"clikt/com.github.ajalt.clikt.parameters.groups/-choice-group/group-name.html","searchKeys":["groupName","open override val groupName: String? = null","com.github.ajalt.clikt.parameters.groups.ChoiceGroup.groupName"]},{"name":"open override val helpGetter: HelpTransformContext.() -> String?","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.helpGetter","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/help-getter.html","searchKeys":["helpGetter","open override val helpGetter: HelpTransformContext.() -> String?","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.helpGetter"]},{"name":"open override val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.helpTags","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/help-tags.html","searchKeys":["helpTags","open override val helpTags: Map<String, String>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.helpTags"]},{"name":"open override val nvalues: Int","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.nvalues","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/nvalues.html","searchKeys":["nvalues","open override val nvalues: Int","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.nvalues"]},{"name":"open override val required: Boolean","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.required","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/required.html","searchKeys":["required","open override val required: Boolean","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.required"]},{"name":"open override val transformAll: ArgCallsTransformer<AllT, ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.transformAll","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/transform-all.html","searchKeys":["transformAll","open override val transformAll: ArgCallsTransformer<AllT, ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.transformAll"]},{"name":"open override val transformValidator: ArgValidator<AllT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.transformValidator","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/transform-validator.html","searchKeys":["transformValidator","open override val transformValidator: ArgValidator<AllT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.transformValidator"]},{"name":"open override val transformValue: ArgValueTransformer<ValueT>","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.transformValue","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/transform-value.html","searchKeys":["transformValue","open override val transformValue: ArgValueTransformer<ValueT>","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.transformValue"]},{"name":"open override var context: Context?","description":"com.github.ajalt.clikt.core.PrintHelpMessage.context","location":"clikt/com.github.ajalt.clikt.core/-print-help-message/context.html","searchKeys":["context","open override var context: Context?","com.github.ajalt.clikt.core.PrintHelpMessage.context"]},{"name":"open override var context: Context?","description":"com.github.ajalt.clikt.core.UsageError.context","location":"clikt/com.github.ajalt.clikt.core/-usage-error/context.html","searchKeys":["context","open override var context: Context?","com.github.ajalt.clikt.core.UsageError.context"]},{"name":"open override var name: String","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.name","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/name.html","searchKeys":["name","open override var name: String","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.name"]},{"name":"open override var value: AllT","description":"com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.value","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-processed-argument-impl/value.html","searchKeys":["value","open override var value: AllT","com.github.ajalt.clikt.parameters.arguments.ProcessedArgumentImpl.value"]},{"name":"open val acceptsNumberValueWithoutName: Boolean","description":"com.github.ajalt.clikt.parameters.options.Option.acceptsNumberValueWithoutName","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/accepts-number-value-without-name.html","searchKeys":["acceptsNumberValueWithoutName","open val acceptsNumberValueWithoutName: Boolean","com.github.ajalt.clikt.parameters.options.Option.acceptsNumberValueWithoutName"]},{"name":"open val acceptsUnattachedValue: Boolean","description":"com.github.ajalt.clikt.parameters.options.Option.acceptsUnattachedValue","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/accepts-unattached-value.html","searchKeys":["acceptsUnattachedValue","open val acceptsUnattachedValue: Boolean","com.github.ajalt.clikt.parameters.options.Option.acceptsUnattachedValue"]},{"name":"open val allowMultipleSubcommands: Boolean = false","description":"com.github.ajalt.clikt.core.BaseCliktCommand.allowMultipleSubcommands","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/allow-multiple-subcommands.html","searchKeys":["allowMultipleSubcommands","open val allowMultipleSubcommands: Boolean = false","com.github.ajalt.clikt.core.BaseCliktCommand.allowMultipleSubcommands"]},{"name":"open val autoCompleteEnvvar: String?","description":"com.github.ajalt.clikt.core.BaseCliktCommand.autoCompleteEnvvar","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/auto-complete-envvar.html","searchKeys":["autoCompleteEnvvar","open val autoCompleteEnvvar: String?","com.github.ajalt.clikt.core.BaseCliktCommand.autoCompleteEnvvar"]},{"name":"open val completionCandidates: CompletionCandidates","description":"com.github.ajalt.clikt.parameters.arguments.Argument.completionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument/completion-candidates.html","searchKeys":["completionCandidates","open val completionCandidates: CompletionCandidates","com.github.ajalt.clikt.parameters.arguments.Argument.completionCandidates"]},{"name":"open val completionCandidates: CompletionCandidates","description":"com.github.ajalt.clikt.parameters.options.Option.completionCandidates","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/completion-candidates.html","searchKeys":["completionCandidates","open val completionCandidates: CompletionCandidates","com.github.ajalt.clikt.parameters.options.Option.completionCandidates"]},{"name":"open val eager: Boolean","description":"com.github.ajalt.clikt.parameters.options.Option.eager","location":"clikt/com.github.ajalt.clikt.parameters.options/-option/eager.html","searchKeys":["eager","open val eager: Boolean","com.github.ajalt.clikt.parameters.options.Option.eager"]},{"name":"open val helpTags: Map<String, String>","description":"com.github.ajalt.clikt.core.BaseCliktCommand.helpTags","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/help-tags.html","searchKeys":["helpTags","open val helpTags: Map<String, String>","com.github.ajalt.clikt.core.BaseCliktCommand.helpTags"]},{"name":"open val hiddenFromHelp: Boolean = false","description":"com.github.ajalt.clikt.core.BaseCliktCommand.hiddenFromHelp","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/hidden-from-help.html","searchKeys":["hiddenFromHelp","open val hiddenFromHelp: Boolean = false","com.github.ajalt.clikt.core.BaseCliktCommand.hiddenFromHelp"]},{"name":"open val invokeWithoutSubcommand: Boolean = false","description":"com.github.ajalt.clikt.core.BaseCliktCommand.invokeWithoutSubcommand","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/invoke-without-subcommand.html","searchKeys":["invokeWithoutSubcommand","open val invokeWithoutSubcommand: Boolean = false","com.github.ajalt.clikt.core.BaseCliktCommand.invokeWithoutSubcommand"]},{"name":"open val printHelpOnEmptyArgs: Boolean = false","description":"com.github.ajalt.clikt.core.BaseCliktCommand.printHelpOnEmptyArgs","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/print-help-on-empty-args.html","searchKeys":["printHelpOnEmptyArgs","open val printHelpOnEmptyArgs: Boolean = false","com.github.ajalt.clikt.core.BaseCliktCommand.printHelpOnEmptyArgs"]},{"name":"open val treatUnknownOptionsAsArgs: Boolean = false","description":"com.github.ajalt.clikt.core.BaseCliktCommand.treatUnknownOptionsAsArgs","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/treat-unknown-options-as-args.html","searchKeys":["treatUnknownOptionsAsArgs","open val treatUnknownOptionsAsArgs: Boolean = false","com.github.ajalt.clikt.core.BaseCliktCommand.treatUnknownOptionsAsArgs"]},{"name":"operator fun <T : OptionGroup> T.provideDelegate(thisRef: BaseCliktCommand<*>, prop: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, T>","description":"com.github.ajalt.clikt.parameters.groups.provideDelegate","location":"clikt/com.github.ajalt.clikt.parameters.groups/provide-delegate.html","searchKeys":["provideDelegate","operator fun <T : OptionGroup> T.provideDelegate(thisRef: BaseCliktCommand<*>, prop: KProperty<*>): ReadOnlyProperty<BaseCliktCommand<*>, T>","com.github.ajalt.clikt.parameters.groups.provideDelegate"]},{"name":"override fun run()","description":"com.github.ajalt.clikt.core.CoreNoOpCliktCommand.run","location":"clikt/com.github.ajalt.clikt.core/-core-no-op-clikt-command/run.html","searchKeys":["run","override fun run()","com.github.ajalt.clikt.core.CoreNoOpCliktCommand.run"]},{"name":"sealed class CompletionCandidates","description":"com.github.ajalt.clikt.completion.CompletionCandidates","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/index.html","searchKeys":["CompletionCandidates","sealed class CompletionCandidates","com.github.ajalt.clikt.completion.CompletionCandidates"]},{"name":"sealed class ParameterHelp","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/index.html","searchKeys":["ParameterHelp","sealed class ParameterHelp","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp"]},{"name":"suspend fun CoreSuspendingCliktCommand.main(argv: Array<out String>)","description":"com.github.ajalt.clikt.command.main","location":"clikt/com.github.ajalt.clikt.command/main.html","searchKeys":["main","suspend fun CoreSuspendingCliktCommand.main(argv: Array<out String>)","com.github.ajalt.clikt.command.main"]},{"name":"suspend fun CoreSuspendingCliktCommand.main(argv: List<String>)","description":"com.github.ajalt.clikt.command.main","location":"clikt/com.github.ajalt.clikt.command/main.html","searchKeys":["main","suspend fun CoreSuspendingCliktCommand.main(argv: List<String>)","com.github.ajalt.clikt.command.main"]},{"name":"suspend fun CoreSuspendingCliktCommand.parse(argv: Array<String>)","description":"com.github.ajalt.clikt.command.parse","location":"clikt/com.github.ajalt.clikt.command/parse.html","searchKeys":["parse","suspend fun CoreSuspendingCliktCommand.parse(argv: Array<String>)","com.github.ajalt.clikt.command.parse"]},{"name":"suspend fun CoreSuspendingCliktCommand.parse(argv: List<String>)","description":"com.github.ajalt.clikt.command.parse","location":"clikt/com.github.ajalt.clikt.command/parse.html","searchKeys":["parse","suspend fun CoreSuspendingCliktCommand.parse(argv: List<String>)","com.github.ajalt.clikt.command.parse"]},{"name":"typealias AllTransformer<EachT, AllT> = OptionTransformContext.(List<EachT>) -> AllT","description":"com.github.ajalt.clikt.parameters.options.AllTransformer","location":"clikt/com.github.ajalt.clikt.parameters.options/-all-transformer/index.html","searchKeys":["AllTransformer","typealias AllTransformer<EachT, AllT> = OptionTransformContext.(List<EachT>) -> AllT","com.github.ajalt.clikt.parameters.options.AllTransformer"]},{"name":"typealias ArgCallsTransformer<AllT, EachT> = ArgumentTransformContext.(List<EachT>) -> AllT","description":"com.github.ajalt.clikt.parameters.arguments.ArgCallsTransformer","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-arg-calls-transformer/index.html","searchKeys":["ArgCallsTransformer","typealias ArgCallsTransformer<AllT, EachT> = ArgumentTransformContext.(List<EachT>) -> AllT","com.github.ajalt.clikt.parameters.arguments.ArgCallsTransformer"]},{"name":"typealias ArgValidator<AllT> = ArgumentTransformContext.(AllT) -> Unit","description":"com.github.ajalt.clikt.parameters.arguments.ArgValidator","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-arg-validator/index.html","searchKeys":["ArgValidator","typealias ArgValidator<AllT> = ArgumentTransformContext.(AllT) -> Unit","com.github.ajalt.clikt.parameters.arguments.ArgValidator"]},{"name":"typealias ArgValueConverter<InT, ValueT> = ArgumentTransformContext.(InT) -> ValueT","description":"com.github.ajalt.clikt.parameters.arguments.ArgValueConverter","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-arg-value-converter/index.html","searchKeys":["ArgValueConverter","typealias ArgValueConverter<InT, ValueT> = ArgumentTransformContext.(InT) -> ValueT","com.github.ajalt.clikt.parameters.arguments.ArgValueConverter"]},{"name":"typealias ArgValueTransformer<T> = ArgValueConverter<String, T>","description":"com.github.ajalt.clikt.parameters.arguments.ArgValueTransformer","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-arg-value-transformer/index.html","searchKeys":["ArgValueTransformer","typealias ArgValueTransformer<T> = ArgValueConverter<String, T>","com.github.ajalt.clikt.parameters.arguments.ArgValueTransformer"]},{"name":"typealias CoOccurringOptionGroupTransform<GroupT, OutT> = (occurred: Boolean?, group: GroupT, context: Context) -> OutT","description":"com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroupTransform","location":"clikt/com.github.ajalt.clikt.parameters.groups/-co-occurring-option-group-transform/index.html","searchKeys":["CoOccurringOptionGroupTransform","typealias CoOccurringOptionGroupTransform<GroupT, OutT> = (occurred: Boolean?, group: GroupT, context: Context) -> OutT","com.github.ajalt.clikt.parameters.groups.CoOccurringOptionGroupTransform"]},{"name":"typealias FlagConverter<InT, OutT> = OptionTransformContext.(InT) -> OutT","description":"com.github.ajalt.clikt.parameters.options.FlagConverter","location":"clikt/com.github.ajalt.clikt.parameters.options/-flag-converter/index.html","searchKeys":["FlagConverter","typealias FlagConverter<InT, OutT> = OptionTransformContext.(InT) -> OutT","com.github.ajalt.clikt.parameters.options.FlagConverter"]},{"name":"typealias MessageEchoer = (context: Context, message: Any?, trailingNewline: Boolean, err: Boolean) -> Unit","description":"com.github.ajalt.clikt.core.MessageEchoer","location":"clikt/com.github.ajalt.clikt.core/-message-echoer/index.html","searchKeys":["MessageEchoer","typealias MessageEchoer = (context: Context, message: Any?, trailingNewline: Boolean, err: Boolean) -> Unit","com.github.ajalt.clikt.core.MessageEchoer"]},{"name":"typealias MutuallyExclusiveOptionsTransform<OptT, OutT> = MutuallyExclusiveOptionTransformContext.(List<OptT>) -> OutT","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionsTransform","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-options-transform/index.html","searchKeys":["MutuallyExclusiveOptionsTransform","typealias MutuallyExclusiveOptionsTransform<OptT, OutT> = MutuallyExclusiveOptionTransformContext.(List<OptT>) -> OutT","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionsTransform"]},{"name":"typealias NullableOption<EachT, ValueT> = OptionWithValues<EachT?, EachT, ValueT>","description":"com.github.ajalt.clikt.parameters.options.NullableOption","location":"clikt/com.github.ajalt.clikt.parameters.options/-nullable-option/index.html","searchKeys":["NullableOption","typealias NullableOption<EachT, ValueT> = OptionWithValues<EachT?, EachT, ValueT>","com.github.ajalt.clikt.parameters.options.NullableOption"]},{"name":"typealias OptionValidator<AllT> = OptionTransformContext.(AllT) -> Unit","description":"com.github.ajalt.clikt.parameters.options.OptionValidator","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-validator/index.html","searchKeys":["OptionValidator","typealias OptionValidator<AllT> = OptionTransformContext.(AllT) -> Unit","com.github.ajalt.clikt.parameters.options.OptionValidator"]},{"name":"typealias RawArgument = ProcessedArgument<String, String>","description":"com.github.ajalt.clikt.parameters.arguments.RawArgument","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-raw-argument/index.html","searchKeys":["RawArgument","typealias RawArgument = ProcessedArgument<String, String>","com.github.ajalt.clikt.parameters.arguments.RawArgument"]},{"name":"typealias RawOption = NullableOption<String, String>","description":"com.github.ajalt.clikt.parameters.options.RawOption","location":"clikt/com.github.ajalt.clikt.parameters.options/-raw-option/index.html","searchKeys":["RawOption","typealias RawOption = NullableOption<String, String>","com.github.ajalt.clikt.parameters.options.RawOption"]},{"name":"typealias TypoSuggestor = (enteredValue: String, possibleValues: List<String>) -> List<String>","description":"com.github.ajalt.clikt.core.TypoSuggestor","location":"clikt/com.github.ajalt.clikt.core/-typo-suggestor/index.html","searchKeys":["TypoSuggestor","typealias TypoSuggestor = (enteredValue: String, possibleValues: List<String>) -> List<String>","com.github.ajalt.clikt.core.TypoSuggestor"]},{"name":"typealias ValueConverter<InT, ValueT> = OptionCallTransformContext.(InT) -> ValueT","description":"com.github.ajalt.clikt.parameters.options.ValueConverter","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-converter/index.html","searchKeys":["ValueConverter","typealias ValueConverter<InT, ValueT> = OptionCallTransformContext.(InT) -> ValueT","com.github.ajalt.clikt.parameters.options.ValueConverter"]},{"name":"typealias ValueTransformer<ValueT> = ValueConverter<String, ValueT>","description":"com.github.ajalt.clikt.parameters.options.ValueTransformer","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-transformer/index.html","searchKeys":["ValueTransformer","typealias ValueTransformer<ValueT> = ValueConverter<String, ValueT>","com.github.ajalt.clikt.parameters.options.ValueTransformer"]},{"name":"typealias ValuesTransformer<ValueT, EachT> = OptionCallTransformContext.(List<ValueT>) -> EachT","description":"com.github.ajalt.clikt.parameters.options.ValuesTransformer","location":"clikt/com.github.ajalt.clikt.parameters.options/-values-transformer/index.html","searchKeys":["ValuesTransformer","typealias ValuesTransformer<ValueT, EachT> = OptionCallTransformContext.(List<ValueT>) -> EachT","com.github.ajalt.clikt.parameters.options.ValuesTransformer"]},{"name":"val InputStream.isCliktParameterDefaultStdin: Boolean","description":"com.github.ajalt.clikt.parameters.types.isCliktParameterDefaultStdin","location":"clikt/com.github.ajalt.clikt.parameters.types/is-clikt-parameter-default-stdin.html","searchKeys":["isCliktParameterDefaultStdin","val InputStream.isCliktParameterDefaultStdin: Boolean","com.github.ajalt.clikt.parameters.types.isCliktParameterDefaultStdin"]},{"name":"val OutputStream.isCliktParameterDefaultStdout: Boolean","description":"com.github.ajalt.clikt.parameters.types.isCliktParameterDefaultStdout","location":"clikt/com.github.ajalt.clikt.parameters.types/is-clikt-parameter-default-stdout.html","searchKeys":["isCliktParameterDefaultStdout","val OutputStream.isCliktParameterDefaultStdout: Boolean","com.github.ajalt.clikt.parameters.types.isCliktParameterDefaultStdout"]},{"name":"val acceptsNumberValueWithoutName: Boolean","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.acceptsNumberValueWithoutName","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/accepts-number-value-without-name.html","searchKeys":["acceptsNumberValueWithoutName","val acceptsNumberValueWithoutName: Boolean","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.acceptsNumberValueWithoutName"]},{"name":"val acceptsUnattachedValue: Boolean","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.acceptsUnattachedValue","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/accepts-unattached-value.html","searchKeys":["acceptsUnattachedValue","val acceptsUnattachedValue: Boolean","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.acceptsUnattachedValue"]},{"name":"val allowGroupedShortOptions: Boolean","description":"com.github.ajalt.clikt.core.Context.allowGroupedShortOptions","location":"clikt/com.github.ajalt.clikt.core/-context/allow-grouped-short-options.html","searchKeys":["allowGroupedShortOptions","val allowGroupedShortOptions: Boolean","com.github.ajalt.clikt.core.Context.allowGroupedShortOptions"]},{"name":"val allowInterspersedArgs: Boolean","description":"com.github.ajalt.clikt.core.Context.allowInterspersedArgs","location":"clikt/com.github.ajalt.clikt.core/-context/allow-interspersed-args.html","searchKeys":["allowInterspersedArgs","val allowInterspersedArgs: Boolean","com.github.ajalt.clikt.core.Context.allowInterspersedArgs"]},{"name":"val argument: Argument","description":"com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.argument","location":"clikt/com.github.ajalt.clikt.parameters.arguments/-argument-transform-context/argument.html","searchKeys":["argument","val argument: Argument","com.github.ajalt.clikt.parameters.arguments.ArgumentTransformContext.argument"]},{"name":"val argument: Argument","description":"com.github.ajalt.clikt.parsers.ArgumentInvocation.argument","location":"clikt/com.github.ajalt.clikt.parsers/-argument-invocation/argument.html","searchKeys":["argument","val argument: Argument","com.github.ajalt.clikt.parsers.ArgumentInvocation.argument"]},{"name":"val argumentFileReader: (filename: String) -> String?","description":"com.github.ajalt.clikt.core.Context.argumentFileReader","location":"clikt/com.github.ajalt.clikt.core/-context/argument-file-reader.html","searchKeys":["argumentFileReader","val argumentFileReader: (filename: String) -> String?","com.github.ajalt.clikt.core.Context.argumentFileReader"]},{"name":"val argumentInvocations: List<ArgumentInvocation>","description":"com.github.ajalt.clikt.parsers.CommandInvocation.argumentInvocations","location":"clikt/com.github.ajalt.clikt.parsers/-command-invocation/argument-invocations.html","searchKeys":["argumentInvocations","val argumentInvocations: List<ArgumentInvocation>","com.github.ajalt.clikt.parsers.CommandInvocation.argumentInvocations"]},{"name":"val autoEnvvarPrefix: String?","description":"com.github.ajalt.clikt.core.Context.autoEnvvarPrefix","location":"clikt/com.github.ajalt.clikt.core/-context/auto-envvar-prefix.html","searchKeys":["autoEnvvarPrefix","val autoEnvvarPrefix: String?","com.github.ajalt.clikt.core.Context.autoEnvvarPrefix"]},{"name":"val candidates: Set<String>","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.candidates","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-fixed/candidates.html","searchKeys":["candidates","val candidates: Set<String>","com.github.ajalt.clikt.completion.CompletionCandidates.Fixed.candidates"]},{"name":"val command: BaseCliktCommand<*>","description":"com.github.ajalt.clikt.core.Context.command","location":"clikt/com.github.ajalt.clikt.core/-context/command.html","searchKeys":["command","val command: BaseCliktCommand<*>","com.github.ajalt.clikt.core.Context.command"]},{"name":"val command: T","description":"com.github.ajalt.clikt.parsers.CommandInvocation.command","location":"clikt/com.github.ajalt.clikt.parsers/-command-invocation/command.html","searchKeys":["command","val command: T","com.github.ajalt.clikt.parsers.CommandInvocation.command"]},{"name":"val commandName: String","description":"com.github.ajalt.clikt.core.BaseCliktCommand.commandName","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/command-name.html","searchKeys":["commandName","val commandName: String","com.github.ajalt.clikt.core.BaseCliktCommand.commandName"]},{"name":"val context: Context","description":"com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext.context","location":"clikt/com.github.ajalt.clikt.parameters.groups/-mutually-exclusive-option-transform-context/context.html","searchKeys":["context","val context: Context","com.github.ajalt.clikt.parameters.groups.MutuallyExclusiveOptionTransformContext.context"]},{"name":"val correctionSuggestor: TypoSuggestor","description":"com.github.ajalt.clikt.core.Context.correctionSuggestor","location":"clikt/com.github.ajalt.clikt.core/-context/correction-suggestor.html","searchKeys":["correctionSuggestor","val correctionSuggestor: TypoSuggestor","com.github.ajalt.clikt.core.Context.correctionSuggestor"]},{"name":"val currentContext: Context","description":"com.github.ajalt.clikt.core.BaseCliktCommand.currentContext","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/current-context.html","searchKeys":["currentContext","val currentContext: Context","com.github.ajalt.clikt.core.BaseCliktCommand.currentContext"]},{"name":"val data: MutableMap<String, Any?>","description":"com.github.ajalt.clikt.core.Context.Builder.data","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/data.html","searchKeys":["data","val data: MutableMap<String, Any?>","com.github.ajalt.clikt.core.Context.Builder.data"]},{"name":"val data: MutableMap<String, Any?>","description":"com.github.ajalt.clikt.core.Context.data","location":"clikt/com.github.ajalt.clikt.core/-context/data.html","searchKeys":["data","val data: MutableMap<String, Any?>","com.github.ajalt.clikt.core.Context.data"]},{"name":"val default: T","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault.default","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/default.html","searchKeys":["default","val default: T","com.github.ajalt.clikt.parameters.options.ValueWithDefault.default"]},{"name":"val echoMessage: MessageEchoer","description":"com.github.ajalt.clikt.core.Context.echoMessage","location":"clikt/com.github.ajalt.clikt.core/-context/echo-message.html","searchKeys":["echoMessage","val echoMessage: MessageEchoer","com.github.ajalt.clikt.core.Context.echoMessage"]},{"name":"val entries: EnumEntries<CompletionCandidates.Custom.ShellType>","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.entries","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/-shell-type/entries.html","searchKeys":["entries","val entries: EnumEntries<CompletionCandidates.Custom.ShellType>","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.ShellType.entries"]},{"name":"val error: Boolean = false","description":"com.github.ajalt.clikt.core.PrintHelpMessage.error","location":"clikt/com.github.ajalt.clikt.core/-print-help-message/error.html","searchKeys":["error","val error: Boolean = false","com.github.ajalt.clikt.core.PrintHelpMessage.error"]},{"name":"val errors: List<CliktError>","description":"com.github.ajalt.clikt.parsers.CommandInvocation.errors","location":"clikt/com.github.ajalt.clikt.parsers/-command-invocation/errors.html","searchKeys":["errors","val errors: List<CliktError>","com.github.ajalt.clikt.parsers.CommandInvocation.errors"]},{"name":"val errors: List<UsageError>","description":"com.github.ajalt.clikt.core.MultiUsageError.errors","location":"clikt/com.github.ajalt.clikt.core/-multi-usage-error/errors.html","searchKeys":["errors","val errors: List<UsageError>","com.github.ajalt.clikt.core.MultiUsageError.errors"]},{"name":"val exitProcess: (status: Int) -> Unit","description":"com.github.ajalt.clikt.core.Context.exitProcess","location":"clikt/com.github.ajalt.clikt.core/-context/exit-process.html","searchKeys":["exitProcess","val exitProcess: (status: Int) -> Unit","com.github.ajalt.clikt.core.Context.exitProcess"]},{"name":"val expandArgumentFiles: Boolean","description":"com.github.ajalt.clikt.core.Context.expandArgumentFiles","location":"clikt/com.github.ajalt.clikt.core/-context/expand-argument-files.html","searchKeys":["expandArgumentFiles","val expandArgumentFiles: Boolean","com.github.ajalt.clikt.core.Context.expandArgumentFiles"]},{"name":"val expandedArgv: List<String>","description":"com.github.ajalt.clikt.parsers.CommandLineParseResult.expandedArgv","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parse-result/expanded-argv.html","searchKeys":["expandedArgv","val expandedArgv: List<String>","com.github.ajalt.clikt.parsers.CommandLineParseResult.expandedArgv"]},{"name":"val explicit: T?","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault.explicit","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/explicit.html","searchKeys":["explicit","val explicit: T?","com.github.ajalt.clikt.parameters.options.ValueWithDefault.explicit"]},{"name":"val filename: String","description":"com.github.ajalt.clikt.core.FileNotFound.filename","location":"clikt/com.github.ajalt.clikt.core/-file-not-found/filename.html","searchKeys":["filename","val filename: String","com.github.ajalt.clikt.core.FileNotFound.filename"]},{"name":"val generator: (CompletionCandidates.Custom.ShellType) -> String?","description":"com.github.ajalt.clikt.completion.CompletionCandidates.Custom.generator","location":"clikt/com.github.ajalt.clikt.completion/-completion-candidates/-custom/generator.html","searchKeys":["generator","val generator: (CompletionCandidates.Custom.ShellType) -> String?","com.github.ajalt.clikt.completion.CompletionCandidates.Custom.generator"]},{"name":"val groupName: String?","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.groupName","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/group-name.html","searchKeys":["groupName","val groupName: String?","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.groupName"]},{"name":"val help: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.help","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/help.html","searchKeys":["help","val help: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.help"]},{"name":"val help: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.help","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-group/help.html","searchKeys":["help","val help: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.help"]},{"name":"val help: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.help","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/help.html","searchKeys":["help","val help: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.help"]},{"name":"val help: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.help","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/help.html","searchKeys":["help","val help: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.help"]},{"name":"val helpFormatter: (Context) -> HelpFormatter","description":"com.github.ajalt.clikt.core.Context.helpFormatter","location":"clikt/com.github.ajalt.clikt.core/-context/help-formatter.html","searchKeys":["helpFormatter","val helpFormatter: (Context) -> HelpFormatter","com.github.ajalt.clikt.core.Context.helpFormatter"]},{"name":"val helpOptionNames: Set<String>","description":"com.github.ajalt.clikt.core.Context.helpOptionNames","location":"clikt/com.github.ajalt.clikt.core/-context/help-option-names.html","searchKeys":["helpOptionNames","val helpOptionNames: Set<String>","com.github.ajalt.clikt.core.Context.helpOptionNames"]},{"name":"val invocation: CommandInvocation<T>","description":"com.github.ajalt.clikt.parsers.CommandLineParseResult.invocation","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parse-result/invocation.html","searchKeys":["invocation","val invocation: CommandInvocation<T>","com.github.ajalt.clikt.parsers.CommandLineParseResult.invocation"]},{"name":"val invokedSubcommand: BaseCliktCommand<*>?","description":"com.github.ajalt.clikt.core.Context.invokedSubcommand","location":"clikt/com.github.ajalt.clikt.core/-context/invoked-subcommand.html","searchKeys":["invokedSubcommand","val invokedSubcommand: BaseCliktCommand<*>?","com.github.ajalt.clikt.core.Context.invokedSubcommand"]},{"name":"val localization: Localization","description":"com.github.ajalt.clikt.core.Context.localization","location":"clikt/com.github.ajalt.clikt.core/-context/localization.html","searchKeys":["localization","val localization: Localization","com.github.ajalt.clikt.core.Context.localization"]},{"name":"val messages: List<String>","description":"com.github.ajalt.clikt.core.BaseCliktCommand.messages","location":"clikt/com.github.ajalt.clikt.core/-base-clikt-command/messages.html","searchKeys":["messages","val messages: List<String>","com.github.ajalt.clikt.core.BaseCliktCommand.messages"]},{"name":"val metavar: String?","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.metavar","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/metavar.html","searchKeys":["metavar","val metavar: String?","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.metavar"]},{"name":"val name: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.name","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.name"]},{"name":"val name: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.name","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-group/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Group.name"]},{"name":"val name: String","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.name","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.name"]},{"name":"val name: String","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.name","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.name"]},{"name":"val name: String","description":"com.github.ajalt.clikt.parsers.OptionInvocation.name","location":"clikt/com.github.ajalt.clikt.parsers/-option-invocation/name.html","searchKeys":["name","val name: String","com.github.ajalt.clikt.parsers.OptionInvocation.name"]},{"name":"val names: List<String>","description":"com.github.ajalt.clikt.core.MutuallyExclusiveGroupException.names","location":"clikt/com.github.ajalt.clikt.core/-mutually-exclusive-group-exception/names.html","searchKeys":["names","val names: List<String>","com.github.ajalt.clikt.core.MutuallyExclusiveGroupException.names"]},{"name":"val names: Set<String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.names","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/names.html","searchKeys":["names","val names: Set<String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.names"]},{"name":"val nvalues: Int","description":"com.github.ajalt.clikt.core.IncorrectArgumentValueCount.nvalues","location":"clikt/com.github.ajalt.clikt.core/-incorrect-argument-value-count/nvalues.html","searchKeys":["nvalues","val nvalues: Int","com.github.ajalt.clikt.core.IncorrectArgumentValueCount.nvalues"]},{"name":"val nvalues: IntRange","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.nvalues","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/nvalues.html","searchKeys":["nvalues","val nvalues: IntRange","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.nvalues"]},{"name":"val option: Option","description":"com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.option","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-call-transform-context/option.html","searchKeys":["option","val option: Option","com.github.ajalt.clikt.parameters.options.OptionCallTransformContext.option"]},{"name":"val option: Option","description":"com.github.ajalt.clikt.parameters.options.OptionTransformContext.option","location":"clikt/com.github.ajalt.clikt.parameters.options/-option-transform-context/option.html","searchKeys":["option","val option: Option","com.github.ajalt.clikt.parameters.options.OptionTransformContext.option"]},{"name":"val optionInvocations: Map<Option, List<OptionInvocation>>","description":"com.github.ajalt.clikt.parsers.CommandInvocation.optionInvocations","location":"clikt/com.github.ajalt.clikt.parsers/-command-invocation/option-invocations.html","searchKeys":["optionInvocations","val optionInvocations: Map<Option, List<OptionInvocation>>","com.github.ajalt.clikt.parsers.CommandInvocation.optionInvocations"]},{"name":"val originalArgv: List<String>","description":"com.github.ajalt.clikt.core.Context.originalArgv","location":"clikt/com.github.ajalt.clikt.core/-context/original-argv.html","searchKeys":["originalArgv","val originalArgv: List<String>","com.github.ajalt.clikt.core.Context.originalArgv"]},{"name":"val originalArgv: List<String>","description":"com.github.ajalt.clikt.parsers.CommandLineParseResult.originalArgv","location":"clikt/com.github.ajalt.clikt.parsers/-command-line-parse-result/original-argv.html","searchKeys":["originalArgv","val originalArgv: List<String>","com.github.ajalt.clikt.parsers.CommandLineParseResult.originalArgv"]},{"name":"val parent: Context?","description":"com.github.ajalt.clikt.core.Context.parent","location":"clikt/com.github.ajalt.clikt.core/-context/parent.html","searchKeys":["parent","val parent: Context?","com.github.ajalt.clikt.core.Context.parent"]},{"name":"val parent: Context? = null","description":"com.github.ajalt.clikt.core.Context.Builder.parent","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/parent.html","searchKeys":["parent","val parent: Context? = null","com.github.ajalt.clikt.core.Context.Builder.parent"]},{"name":"val printError: Boolean = true","description":"com.github.ajalt.clikt.core.CliktError.printError","location":"clikt/com.github.ajalt.clikt.core/-clikt-error/print-error.html","searchKeys":["printError","val printError: Boolean = true","com.github.ajalt.clikt.core.CliktError.printError"]},{"name":"val printExtraMessages: Boolean","description":"com.github.ajalt.clikt.core.Context.printExtraMessages","location":"clikt/com.github.ajalt.clikt.core/-context/print-extra-messages.html","searchKeys":["printExtraMessages","val printExtraMessages: Boolean","com.github.ajalt.clikt.core.Context.printExtraMessages"]},{"name":"val readEnvvar: (String) -> String?","description":"com.github.ajalt.clikt.core.Context.readEnvvar","location":"clikt/com.github.ajalt.clikt.core/-context/read-envvar.html","searchKeys":["readEnvvar","val readEnvvar: (String) -> String?","com.github.ajalt.clikt.core.Context.readEnvvar"]},{"name":"val readEnvvarBeforeValueSource: Boolean","description":"com.github.ajalt.clikt.core.Context.readEnvvarBeforeValueSource","location":"clikt/com.github.ajalt.clikt.core/-context/read-envvar-before-value-source.html","searchKeys":["readEnvvarBeforeValueSource","val readEnvvarBeforeValueSource: Boolean","com.github.ajalt.clikt.core.Context.readEnvvarBeforeValueSource"]},{"name":"val repeatable: Boolean","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.repeatable","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/repeatable.html","searchKeys":["repeatable","val repeatable: Boolean","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.repeatable"]},{"name":"val required: Boolean","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.required","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/required.html","searchKeys":["required","val required: Boolean","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.required"]},{"name":"val secondaryNames: Set<String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.secondaryNames","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/secondary-names.html","searchKeys":["secondaryNames","val secondaryNames: Set<String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.secondaryNames"]},{"name":"val sources: List<ValueSource>","description":"com.github.ajalt.clikt.sources.ChainedValueSource.sources","location":"clikt/com.github.ajalt.clikt.sources/-chained-value-source/sources.html","searchKeys":["sources","val sources: List<ValueSource>","com.github.ajalt.clikt.sources.ChainedValueSource.sources"]},{"name":"val statusCode: Int = 1","description":"com.github.ajalt.clikt.core.CliktError.statusCode","location":"clikt/com.github.ajalt.clikt.core/-clikt-error/status-code.html","searchKeys":["statusCode","val statusCode: Int = 1","com.github.ajalt.clikt.core.CliktError.statusCode"]},{"name":"val subcommandInvocations: List<CommandInvocation<T>>","description":"com.github.ajalt.clikt.parsers.CommandInvocation.subcommandInvocations","location":"clikt/com.github.ajalt.clikt.parsers/-command-invocation/subcommand-invocations.html","searchKeys":["subcommandInvocations","val subcommandInvocations: List<CommandInvocation<T>>","com.github.ajalt.clikt.parsers.CommandInvocation.subcommandInvocations"]},{"name":"val suggestTypoCorrection: TypoSuggestor","description":"com.github.ajalt.clikt.core.Context.suggestTypoCorrection","location":"clikt/com.github.ajalt.clikt.core/-context/suggest-typo-correction.html","searchKeys":["suggestTypoCorrection","val suggestTypoCorrection: TypoSuggestor","com.github.ajalt.clikt.core.Context.suggestTypoCorrection"]},{"name":"val tags: Map<String, String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.tags","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-argument/tags.html","searchKeys":["tags","val tags: Map<String, String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Argument.tags"]},{"name":"val tags: Map<String, String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.tags","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-option/tags.html","searchKeys":["tags","val tags: Map<String, String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Option.tags"]},{"name":"val tags: Map<String, String>","description":"com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.tags","location":"clikt/com.github.ajalt.clikt.output/-help-formatter/-parameter-help/-subcommand/tags.html","searchKeys":["tags","val tags: Map<String, String>","com.github.ajalt.clikt.output.HelpFormatter.ParameterHelp.Subcommand.tags"]},{"name":"val tokenTransformer: Context.(String) -> String","description":"com.github.ajalt.clikt.core.Context.tokenTransformer","location":"clikt/com.github.ajalt.clikt.core/-context/token-transformer.html","searchKeys":["tokenTransformer","val tokenTransformer: Context.(String) -> String","com.github.ajalt.clikt.core.Context.tokenTransformer"]},{"name":"val transformToken: Context.(String) -> String","description":"com.github.ajalt.clikt.core.Context.transformToken","location":"clikt/com.github.ajalt.clikt.core/-context/transform-token.html","searchKeys":["transformToken","val transformToken: Context.(String) -> String","com.github.ajalt.clikt.core.Context.transformToken"]},{"name":"val value: T","description":"com.github.ajalt.clikt.parameters.options.ValueWithDefault.value","location":"clikt/com.github.ajalt.clikt.parameters.options/-value-with-default/value.html","searchKeys":["value","val value: T","com.github.ajalt.clikt.parameters.options.ValueWithDefault.value"]},{"name":"val valueSource: ValueSource?","description":"com.github.ajalt.clikt.core.Context.valueSource","location":"clikt/com.github.ajalt.clikt.core/-context/value-source.html","searchKeys":["valueSource","val valueSource: ValueSource?","com.github.ajalt.clikt.core.Context.valueSource"]},{"name":"val values: List<String>","description":"com.github.ajalt.clikt.parsers.ArgumentInvocation.values","location":"clikt/com.github.ajalt.clikt.parsers/-argument-invocation/values.html","searchKeys":["values","val values: List<String>","com.github.ajalt.clikt.parsers.ArgumentInvocation.values"]},{"name":"val values: List<String>","description":"com.github.ajalt.clikt.parsers.OptionInvocation.values","location":"clikt/com.github.ajalt.clikt.parsers/-option-invocation/values.html","searchKeys":["values","val values: List<String>","com.github.ajalt.clikt.parsers.OptionInvocation.values"]},{"name":"val values: List<String>","description":"com.github.ajalt.clikt.sources.ValueSource.Invocation.values","location":"clikt/com.github.ajalt.clikt.sources/-value-source/-invocation/values.html","searchKeys":["values","val values: List<String>","com.github.ajalt.clikt.sources.ValueSource.Invocation.values"]},{"name":"var Context.Builder.obj: Any?","description":"com.github.ajalt.clikt.core.obj","location":"clikt/com.github.ajalt.clikt.core/obj.html","searchKeys":["obj","var Context.Builder.obj: Any?","com.github.ajalt.clikt.core.obj"]},{"name":"var Context.obj: Any?","description":"com.github.ajalt.clikt.core.obj","location":"clikt/com.github.ajalt.clikt.core/obj.html","searchKeys":["obj","var Context.obj: Any?","com.github.ajalt.clikt.core.obj"]},{"name":"var allowGroupedShortOptions: Boolean","description":"com.github.ajalt.clikt.core.Context.Builder.allowGroupedShortOptions","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/allow-grouped-short-options.html","searchKeys":["allowGroupedShortOptions","var allowGroupedShortOptions: Boolean","com.github.ajalt.clikt.core.Context.Builder.allowGroupedShortOptions"]},{"name":"var allowInterspersedArgs: Boolean","description":"com.github.ajalt.clikt.core.Context.Builder.allowInterspersedArgs","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/allow-interspersed-args.html","searchKeys":["allowInterspersedArgs","var allowInterspersedArgs: Boolean","com.github.ajalt.clikt.core.Context.Builder.allowInterspersedArgs"]},{"name":"var argumentFileReader: (filename: String) -> String?","description":"com.github.ajalt.clikt.core.Context.Builder.argumentFileReader","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/argument-file-reader.html","searchKeys":["argumentFileReader","var argumentFileReader: (filename: String) -> String?","com.github.ajalt.clikt.core.Context.Builder.argumentFileReader"]},{"name":"var autoEnvvarPrefix: String?","description":"com.github.ajalt.clikt.core.Context.Builder.autoEnvvarPrefix","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/auto-envvar-prefix.html","searchKeys":["autoEnvvarPrefix","var autoEnvvarPrefix: String?","com.github.ajalt.clikt.core.Context.Builder.autoEnvvarPrefix"]},{"name":"var correctionSuggestor: TypoSuggestor","description":"com.github.ajalt.clikt.core.Context.Builder.correctionSuggestor","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/correction-suggestor.html","searchKeys":["correctionSuggestor","var correctionSuggestor: TypoSuggestor","com.github.ajalt.clikt.core.Context.Builder.correctionSuggestor"]},{"name":"var echoMessage: MessageEchoer","description":"com.github.ajalt.clikt.core.Context.Builder.echoMessage","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/echo-message.html","searchKeys":["echoMessage","var echoMessage: MessageEchoer","com.github.ajalt.clikt.core.Context.Builder.echoMessage"]},{"name":"var envvarReader: (key: String) -> String?","description":"com.github.ajalt.clikt.core.Context.Builder.envvarReader","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/envvar-reader.html","searchKeys":["envvarReader","var envvarReader: (key: String) -> String?","com.github.ajalt.clikt.core.Context.Builder.envvarReader"]},{"name":"var errorEncountered: Boolean","description":"com.github.ajalt.clikt.core.Context.errorEncountered","location":"clikt/com.github.ajalt.clikt.core/-context/error-encountered.html","searchKeys":["errorEncountered","var errorEncountered: Boolean","com.github.ajalt.clikt.core.Context.errorEncountered"]},{"name":"var exitProcess: (status: Int) -> Unit","description":"com.github.ajalt.clikt.core.Context.Builder.exitProcess","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/exit-process.html","searchKeys":["exitProcess","var exitProcess: (status: Int) -> Unit","com.github.ajalt.clikt.core.Context.Builder.exitProcess"]},{"name":"var expandArgumentFiles: Boolean","description":"com.github.ajalt.clikt.core.Context.Builder.expandArgumentFiles","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/expand-argument-files.html","searchKeys":["expandArgumentFiles","var expandArgumentFiles: Boolean","com.github.ajalt.clikt.core.Context.Builder.expandArgumentFiles"]},{"name":"var helpFormatter: (Context) -> HelpFormatter?","description":"com.github.ajalt.clikt.core.Context.Builder.helpFormatter","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/help-formatter.html","searchKeys":["helpFormatter","var helpFormatter: (Context) -> HelpFormatter?","com.github.ajalt.clikt.core.Context.Builder.helpFormatter"]},{"name":"var helpOptionNames: Iterable<String>","description":"com.github.ajalt.clikt.core.Context.Builder.helpOptionNames","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/help-option-names.html","searchKeys":["helpOptionNames","var helpOptionNames: Iterable<String>","com.github.ajalt.clikt.core.Context.Builder.helpOptionNames"]},{"name":"var invokedSubcommands: List<BaseCliktCommand<*>>","description":"com.github.ajalt.clikt.core.Context.invokedSubcommands","location":"clikt/com.github.ajalt.clikt.core/-context/invoked-subcommands.html","searchKeys":["invokedSubcommands","var invokedSubcommands: List<BaseCliktCommand<*>>","com.github.ajalt.clikt.core.Context.invokedSubcommands"]},{"name":"var localization: Localization","description":"com.github.ajalt.clikt.core.Context.Builder.localization","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/localization.html","searchKeys":["localization","var localization: Localization","com.github.ajalt.clikt.core.Context.Builder.localization"]},{"name":"var paramName: String?","description":"com.github.ajalt.clikt.core.UsageError.paramName","location":"clikt/com.github.ajalt.clikt.core/-usage-error/param-name.html","searchKeys":["paramName","var paramName: String?","com.github.ajalt.clikt.core.UsageError.paramName"]},{"name":"var printExtraMessages: Boolean","description":"com.github.ajalt.clikt.core.Context.Builder.printExtraMessages","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/print-extra-messages.html","searchKeys":["printExtraMessages","var printExtraMessages: Boolean","com.github.ajalt.clikt.core.Context.Builder.printExtraMessages"]},{"name":"var readArgumentFile: (filename: String) -> String?","description":"com.github.ajalt.clikt.core.Context.Builder.readArgumentFile","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/read-argument-file.html","searchKeys":["readArgumentFile","var readArgumentFile: (filename: String) -> String?","com.github.ajalt.clikt.core.Context.Builder.readArgumentFile"]},{"name":"var readArgumentFile: (filename: String) -> String?","description":"com.github.ajalt.clikt.core.Context.readArgumentFile","location":"clikt/com.github.ajalt.clikt.core/-context/read-argument-file.html","searchKeys":["readArgumentFile","var readArgumentFile: (filename: String) -> String?","com.github.ajalt.clikt.core.Context.readArgumentFile"]},{"name":"var readEnvvar: (key: String) -> String?","description":"com.github.ajalt.clikt.core.Context.Builder.readEnvvar","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/read-envvar.html","searchKeys":["readEnvvar","var readEnvvar: (key: String) -> String?","com.github.ajalt.clikt.core.Context.Builder.readEnvvar"]},{"name":"var readEnvvarBeforeValueSource: Boolean","description":"com.github.ajalt.clikt.core.Context.Builder.readEnvvarBeforeValueSource","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/read-envvar-before-value-source.html","searchKeys":["readEnvvarBeforeValueSource","var readEnvvarBeforeValueSource: Boolean","com.github.ajalt.clikt.core.Context.Builder.readEnvvarBeforeValueSource"]},{"name":"var suggestTypoCorrection: TypoSuggestor","description":"com.github.ajalt.clikt.core.Context.Builder.suggestTypoCorrection","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/suggest-typo-correction.html","searchKeys":["suggestTypoCorrection","var suggestTypoCorrection: TypoSuggestor","com.github.ajalt.clikt.core.Context.Builder.suggestTypoCorrection"]},{"name":"var tokenTransformer: Context.(String) -> String","description":"com.github.ajalt.clikt.core.Context.Builder.tokenTransformer","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/token-transformer.html","searchKeys":["tokenTransformer","var tokenTransformer: Context.(String) -> String","com.github.ajalt.clikt.core.Context.Builder.tokenTransformer"]},{"name":"var transformToken: Context.(String) -> String","description":"com.github.ajalt.clikt.core.Context.Builder.transformToken","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/transform-token.html","searchKeys":["transformToken","var transformToken: Context.(String) -> String","com.github.ajalt.clikt.core.Context.Builder.transformToken"]},{"name":"var valueSource: ValueSource?","description":"com.github.ajalt.clikt.core.Context.Builder.valueSource","location":"clikt/com.github.ajalt.clikt.core/-context/-builder/value-source.html","searchKeys":["valueSource","var valueSource: ValueSource?","com.github.ajalt.clikt.core.Context.Builder.valueSource"]}]